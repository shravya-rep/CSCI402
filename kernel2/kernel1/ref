kernel/mm/pframe.c:        o->mmo_ops->ref(o);
kernel/mm/pframe.c:        return o->mmo_ops->lookuppage(o, pagenum, forwrite, result);
kernel/mm/pframe.c:                src->mmo_ops->put(src);
kernel/mm/pframe.c:                dest->mmo_ops->ref(dest);
kernel/mm/pframe.c:        ret = pf->pf_obj->mmo_ops->fillpage(pf->pf_obj, pf);
kernel/mm/pframe.c:        if (!(ret = pf->pf_obj->mmo_ops->dirtypage(pf->pf_obj, pf))) {
kernel/mm/pframe.c:        if ((ret = pf->pf_obj->mmo_ops->cleanpage(pf->pf_obj, pf)) < 0) {
kernel/mm/pframe.c:        o->mmo_ops->put(o);
kernel/proc/fork.c:                new_shadowed->mmo_ops->ref(to_delete);
kernel/proc/fork.c:                //to_delete->mmo_ops->ref(to_delete);
kernel/proc/fork.c:                    curObj->mmo_ops->ref(curObj);
kernel/proc/fork.c:                curObj->mmo_ops->ref(curObj);
kernel/proc/fork.c:                lookupResult->vma_obj->mmo_ops->ref(lookupResult->vma_obj);
kernel/vm/shadow.c:        //o->mmo_shadowed->mmo_ops->ref(o->mmo_shadowed); 
kernel/vm/shadow.c:        current_obj->mmo_ops->ref(current_obj);
kernel/vm/shadow.c:    current_obj->mmo_ops->put(current_obj);
kernel/vm/shadow.c:        current_obj->mmo_ops->ref(current_obj);
kernel/vm/shadow.c:            //current_obj->mmo_ops->ref(current_obj);
kernel/vm/shadow.c:            //current_obj->mmo_un.mmo_bottom_obj->mmo_ops->ref(current_obj->mmo_un.mmo_bottom_obj);
kernel/vm/shadow.c:        current_obj->mmo_ops->lookuppage(current_obj, pagenum, forwrite, pf);
kernel/vm/shadow.c:        current_obj->mmo_ops->ref(current_obj);
kernel/vm/shadow.c:            current_obj->mmo_ops->lookuppage(current_obj, pf->pf_pagenum, 0, &pageframe);
kernel/vm/shadow.c:    if(bottomUsed) {current_obj->mmo_ops->put(current_obj);}
kernel/vm/shadowd.c:                                        last->mmo_ops->ref(last);
kernel/vm/shadowd.c:                                                        o->mmo_shadowed->mmo_ops->ref(o->mmo_shadowed);
kernel/vm/shadowd.c:                                                        o->mmo_ops->put(o);
kernel/vm/shadowd.c:                                                        o->mmo_ops->ref(o);
kernel/vm/shadowd.c:                                                        last->mmo_ops->put(last);
kernel/vm/shadowd.c:                                        last->mmo_ops->put(last);
kernel/vm/vmmap.c:            vmareaToDestroy->vma_obj->mmo_ops->put(vmareaToDestroy->vma_obj);
kernel/vm/vmmap.c:            newvma->vma_obj->mmo_ops->ref(newvma->vma_obj);
kernel/vm/vmmap.c:            vma->vma_obj->mmo_ops->put(vma->vma_obj);
