
user/usr/bin/fork-and-wait.exec:     file format elf32-i386


Disassembly of section .text:

08048094 <main>:
 8048094:	55                   	push   %ebp
 8048095:	89 e5                	mov    %esp,%ebp
 8048097:	83 e4 f0             	and    $0xfffffff0,%esp
 804809a:	83 ec 70             	sub    $0x70,%esp
 804809d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 80480a4:	00 
 80480a5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 80480ac:	00 
 80480ad:	c7 04 24 64 cf 04 08 	movl   $0x804cf64,(%esp)
 80480b4:	e8 62 07 00 00       	call   804881b <open>
 80480b9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 80480c0:	00 
 80480c1:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80480c8:	00 
 80480c9:	c7 04 24 64 cf 04 08 	movl   $0x804cf64,(%esp)
 80480d0:	e8 46 07 00 00       	call   804881b <open>
 80480d5:	a1 20 f0 04 08       	mov    0x804f020,%eax
 80480da:	89 44 24 08          	mov    %eax,0x8(%esp)
 80480de:	c7 44 24 04 70 cf 04 	movl   $0x804cf70,0x4(%esp)
 80480e5:	08 
 80480e6:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80480ea:	89 04 24             	mov    %eax,(%esp)
 80480ed:	e8 e6 39 00 00       	call   804bad8 <sprintf>
 80480f2:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80480f6:	89 04 24             	mov    %eax,(%esp)
 80480f9:	e8 1b 12 00 00       	call   8049319 <strlen>
 80480fe:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048102:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048106:	89 44 24 04          	mov    %eax,0x4(%esp)
 804810a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048111:	e8 0b 08 00 00       	call   8048921 <write>
 8048116:	c7 44 24 08 13 00 00 	movl   $0x13,0x8(%esp)
 804811d:	00 
 804811e:	c7 44 24 04 a4 cf 04 	movl   $0x804cfa4,0x4(%esp)
 8048125:	08 
 8048126:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804812d:	e8 ef 07 00 00       	call   8048921 <write>
 8048132:	e8 4a 03 00 00       	call   8048481 <fork>
 8048137:	89 44 24 6c          	mov    %eax,0x6c(%esp)
 804813b:	83 7c 24 6c 00       	cmpl   $0x0,0x6c(%esp)
 8048140:	0f 85 b9 00 00 00    	jne    80481ff <main+0x16b>
 8048146:	a1 20 f0 04 08       	mov    0x804f020,%eax
 804814b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804814f:	c7 44 24 04 b8 cf 04 	movl   $0x804cfb8,0x4(%esp)
 8048156:	08 
 8048157:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 804815b:	89 04 24             	mov    %eax,(%esp)
 804815e:	e8 75 39 00 00       	call   804bad8 <sprintf>
 8048163:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048167:	89 04 24             	mov    %eax,(%esp)
 804816a:	e8 aa 11 00 00       	call   8049319 <strlen>
 804816f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048173:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048177:	89 44 24 04          	mov    %eax,0x4(%esp)
 804817b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048182:	e8 9a 07 00 00       	call   8048921 <write>
 8048187:	c7 05 20 f0 04 08 9e 	movl   $0x129e,0x804f020
 804818e:	12 00 00 
 8048191:	a1 20 f0 04 08       	mov    0x804f020,%eax
 8048196:	89 44 24 08          	mov    %eax,0x8(%esp)
 804819a:	c7 44 24 04 ec cf 04 	movl   $0x804cfec,0x4(%esp)
 80481a1:	08 
 80481a2:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80481a6:	89 04 24             	mov    %eax,(%esp)
 80481a9:	e8 2a 39 00 00       	call   804bad8 <sprintf>
 80481ae:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80481b2:	89 04 24             	mov    %eax,(%esp)
 80481b5:	e8 5f 11 00 00       	call   8049319 <strlen>
 80481ba:	89 44 24 08          	mov    %eax,0x8(%esp)
 80481be:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80481c2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80481c6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80481cd:	e8 4f 07 00 00       	call   8048921 <write>
 80481d2:	c7 44 24 08 16 00 00 	movl   $0x16,0x8(%esp)
 80481d9:	00 
 80481da:	c7 44 24 04 1e d0 04 	movl   $0x804d01e,0x4(%esp)
 80481e1:	08 
 80481e2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80481e9:	e8 33 07 00 00       	call   8048921 <write>
 80481ee:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80481f5:	e8 43 03 00 00       	call   804853d <exit>
 80481fa:	e9 08 01 00 00       	jmp    8048307 <main+0x273>
 80481ff:	83 7c 24 6c ff       	cmpl   $0xffffffff,0x6c(%esp)
 8048204:	75 21                	jne    8048227 <main+0x193>
 8048206:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)
 804820d:	00 
 804820e:	c7 44 24 04 35 d0 04 	movl   $0x804d035,0x4(%esp)
 8048215:	08 
 8048216:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804821d:	e8 ff 06 00 00       	call   8048921 <write>
 8048222:	e9 e0 00 00 00       	jmp    8048307 <main+0x273>
 8048227:	a1 20 f0 04 08       	mov    0x804f020,%eax
 804822c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048230:	c7 44 24 04 48 d0 04 	movl   $0x804d048,0x4(%esp)
 8048237:	08 
 8048238:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 804823c:	89 04 24             	mov    %eax,(%esp)
 804823f:	e8 94 38 00 00       	call   804bad8 <sprintf>
 8048244:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048248:	89 04 24             	mov    %eax,(%esp)
 804824b:	e8 c9 10 00 00       	call   8049319 <strlen>
 8048250:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048254:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048258:	89 44 24 04          	mov    %eax,0x4(%esp)
 804825c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048263:	e8 b9 06 00 00       	call   8048921 <write>
 8048268:	c7 05 20 f0 04 08 8e 	movl   $0xb38e,0x804f020
 804826f:	b3 00 00 
 8048272:	a1 20 f0 04 08       	mov    0x804f020,%eax
 8048277:	89 44 24 08          	mov    %eax,0x8(%esp)
 804827b:	c7 44 24 04 7c d0 04 	movl   $0x804d07c,0x4(%esp)
 8048282:	08 
 8048283:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048287:	89 04 24             	mov    %eax,(%esp)
 804828a:	e8 49 38 00 00       	call   804bad8 <sprintf>
 804828f:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048293:	89 04 24             	mov    %eax,(%esp)
 8048296:	e8 7e 10 00 00       	call   8049319 <strlen>
 804829b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804829f:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80482a3:	89 44 24 04          	mov    %eax,0x4(%esp)
 80482a7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80482ae:	e8 6e 06 00 00       	call   8048921 <write>
 80482b3:	c7 44 24 08 1e 00 00 	movl   $0x1e,0x8(%esp)
 80482ba:	00 
 80482bb:	c7 44 24 04 b0 d0 04 	movl   $0x804d0b0,0x4(%esp)
 80482c2:	08 
 80482c3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80482ca:	e8 52 06 00 00       	call   8048921 <write>
 80482cf:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 80482d6:	00 
 80482d7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 80482de:	00 
 80482df:	8b 44 24 6c          	mov    0x6c(%esp),%eax
 80482e3:	89 04 24             	mov    %eax,(%esp)
 80482e6:	e8 34 03 00 00       	call   804861f <waitpid>
 80482eb:	c7 44 24 08 2a 00 00 	movl   $0x2a,0x8(%esp)
 80482f2:	00 
 80482f3:	c7 44 24 04 d0 d0 04 	movl   $0x804d0d0,0x4(%esp)
 80482fa:	08 
 80482fb:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048302:	e8 1a 06 00 00       	call   8048921 <write>
 8048307:	b8 00 00 00 00       	mov    $0x0,%eax
 804830c:	c9                   	leave  
 804830d:	c3                   	ret    

0804830e <__libc_static_entry>:
 804830e:	83 c4 04             	add    $0x4,%esp
 8048311:	e8 7e fd ff ff       	call   8048094 <main>
 8048316:	50                   	push   %eax
 8048317:	e8 21 02 00 00       	call   804853d <exit>

0804831c <trap>:
 804831c:	55                   	push   %ebp
 804831d:	89 e5                	mov    %esp,%ebp
 804831f:	83 ec 10             	sub    $0x10,%esp
 8048322:	e8 7d 0d 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 8048327:	81 c1 d9 6c 00 00    	add    $0x6cd9,%ecx
 804832d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048330:	8b 55 0c             	mov    0xc(%ebp),%edx
 8048333:	cd 2e                	int    $0x2e
 8048335:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048338:	b8 27 00 00 00       	mov    $0x27,%eax
 804833d:	cd 2e                	int    $0x2e
 804833f:	89 c2                	mov    %eax,%edx
 8048341:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048347:	89 10                	mov    %edx,(%eax)
 8048349:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804834c:	c9                   	leave  
 804834d:	c3                   	ret    

0804834e <sbrk>:
 804834e:	55                   	push   %ebp
 804834f:	89 e5                	mov    %esp,%ebp
 8048351:	53                   	push   %ebx
 8048352:	83 ec 24             	sub    $0x24,%esp
 8048355:	e8 4a 0d 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804835a:	81 c1 a6 6c 00 00    	add    $0x6ca6,%ecx
 8048360:	8b 81 80 01 00 00    	mov    0x180(%ecx),%eax
 8048366:	85 c0                	test   %eax,%eax
 8048368:	75 44                	jne    80483ae <sbrk+0x60>
 804836a:	c7 45 f0 2c 00 00 00 	movl   $0x2c,-0x10(%ebp)
 8048371:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8048378:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804837b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804837e:	cd 2e                	int    $0x2e
 8048380:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048383:	b8 27 00 00 00       	mov    $0x27,%eax
 8048388:	cd 2e                	int    $0x2e
 804838a:	89 c2                	mov    %eax,%edx
 804838c:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048392:	89 10                	mov    %edx,(%eax)
 8048394:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048397:	89 81 80 01 00 00    	mov    %eax,0x180(%ecx)
 804839d:	8b 81 80 01 00 00    	mov    0x180(%ecx),%eax
 80483a3:	85 c0                	test   %eax,%eax
 80483a5:	79 07                	jns    80483ae <sbrk+0x60>
 80483a7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80483ac:	eb 63                	jmp    8048411 <sbrk+0xc3>
 80483ae:	8b 81 80 01 00 00    	mov    0x180(%ecx),%eax
 80483b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80483b7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 80483bb:	79 2e                	jns    80483eb <sbrk+0x9d>
 80483bd:	8b 45 08             	mov    0x8(%ebp),%eax
 80483c0:	f7 d8                	neg    %eax
 80483c2:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 80483c5:	76 07                	jbe    80483ce <sbrk+0x80>
 80483c7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80483cc:	eb 43                	jmp    8048411 <sbrk+0xc3>
 80483ce:	8b 55 08             	mov    0x8(%ebp),%edx
 80483d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80483d4:	01 d0                	add    %edx,%eax
 80483d6:	89 04 24             	mov    %eax,(%esp)
 80483d9:	89 cb                	mov    %ecx,%ebx
 80483db:	e8 37 00 00 00       	call   8048417 <brk>
 80483e0:	85 c0                	test   %eax,%eax
 80483e2:	79 2a                	jns    804840e <sbrk+0xc0>
 80483e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80483e9:	eb 26                	jmp    8048411 <sbrk+0xc3>
 80483eb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 80483ef:	7e 1d                	jle    804840e <sbrk+0xc0>
 80483f1:	8b 55 08             	mov    0x8(%ebp),%edx
 80483f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80483f7:	01 d0                	add    %edx,%eax
 80483f9:	89 04 24             	mov    %eax,(%esp)
 80483fc:	89 cb                	mov    %ecx,%ebx
 80483fe:	e8 14 00 00 00       	call   8048417 <brk>
 8048403:	85 c0                	test   %eax,%eax
 8048405:	79 07                	jns    804840e <sbrk+0xc0>
 8048407:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804840c:	eb 03                	jmp    8048411 <sbrk+0xc3>
 804840e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048411:	83 c4 24             	add    $0x24,%esp
 8048414:	5b                   	pop    %ebx
 8048415:	5d                   	pop    %ebp
 8048416:	c3                   	ret    

08048417 <brk>:
 8048417:	55                   	push   %ebp
 8048418:	89 e5                	mov    %esp,%ebp
 804841a:	83 ec 10             	sub    $0x10,%esp
 804841d:	e8 82 0c 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 8048422:	81 c1 de 6b 00 00    	add    $0x6bde,%ecx
 8048428:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804842c:	75 07                	jne    8048435 <brk+0x1e>
 804842e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8048433:	eb 4a                	jmp    804847f <brk+0x68>
 8048435:	8b 45 08             	mov    0x8(%ebp),%eax
 8048438:	c7 45 f8 2c 00 00 00 	movl   $0x2c,-0x8(%ebp)
 804843f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048442:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048445:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048448:	cd 2e                	int    $0x2e
 804844a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804844d:	b8 27 00 00 00       	mov    $0x27,%eax
 8048452:	cd 2e                	int    $0x2e
 8048454:	89 c2                	mov    %eax,%edx
 8048456:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 804845c:	89 10                	mov    %edx,(%eax)
 804845e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048461:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048464:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%ebp)
 8048468:	75 07                	jne    8048471 <brk+0x5a>
 804846a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804846f:	eb 0e                	jmp    804847f <brk+0x68>
 8048471:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048474:	89 81 80 01 00 00    	mov    %eax,0x180(%ecx)
 804847a:	b8 00 00 00 00       	mov    $0x0,%eax
 804847f:	c9                   	leave  
 8048480:	c3                   	ret    

08048481 <fork>:
 8048481:	55                   	push   %ebp
 8048482:	89 e5                	mov    %esp,%ebp
 8048484:	83 ec 10             	sub    $0x10,%esp
 8048487:	e8 18 0c 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804848c:	81 c1 74 6b 00 00    	add    $0x6b74,%ecx
 8048492:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%ebp)
 8048499:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80484a0:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80484a3:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80484a6:	cd 2e                	int    $0x2e
 80484a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80484ab:	b8 27 00 00 00       	mov    $0x27,%eax
 80484b0:	cd 2e                	int    $0x2e
 80484b2:	89 c2                	mov    %eax,%edx
 80484b4:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 80484ba:	89 10                	mov    %edx,(%eax)
 80484bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80484bf:	90                   	nop
 80484c0:	c9                   	leave  
 80484c1:	c3                   	ret    

080484c2 <atexit>:
 80484c2:	55                   	push   %ebp
 80484c3:	89 e5                	mov    %esp,%ebp
 80484c5:	e8 d6 0b 00 00       	call   80490a0 <__x86.get_pc_thunk.ax>
 80484ca:	05 36 6b 00 00       	add    $0x6b36,%eax
 80484cf:	8b 90 20 02 00 00    	mov    0x220(%eax),%edx
 80484d5:	83 fa 1f             	cmp    $0x1f,%edx
 80484d8:	7f 20                	jg     80484fa <atexit+0x38>
 80484da:	8b 90 20 02 00 00    	mov    0x220(%eax),%edx
 80484e0:	8d 4a 01             	lea    0x1(%edx),%ecx
 80484e3:	89 88 20 02 00 00    	mov    %ecx,0x220(%eax)
 80484e9:	8b 4d 08             	mov    0x8(%ebp),%ecx
 80484ec:	89 8c 90 a0 01 00 00 	mov    %ecx,0x1a0(%eax,%edx,4)
 80484f3:	b8 00 00 00 00       	mov    $0x0,%eax
 80484f8:	eb 05                	jmp    80484ff <atexit+0x3d>
 80484fa:	b8 01 00 00 00       	mov    $0x1,%eax
 80484ff:	5d                   	pop    %ebp
 8048500:	c3                   	ret    

08048501 <_exit>:
 8048501:	55                   	push   %ebp
 8048502:	89 e5                	mov    %esp,%ebp
 8048504:	83 ec 10             	sub    $0x10,%esp
 8048507:	e8 98 0b 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804850c:	81 c1 f4 6a 00 00    	add    $0x6af4,%ecx
 8048512:	8b 45 08             	mov    0x8(%ebp),%eax
 8048515:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)
 804851c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804851f:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048522:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048525:	cd 2e                	int    $0x2e
 8048527:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804852a:	b8 27 00 00 00       	mov    $0x27,%eax
 804852f:	cd 2e                	int    $0x2e
 8048531:	89 c2                	mov    %eax,%edx
 8048533:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048539:	89 10                	mov    %edx,(%eax)
 804853b:	eb fe                	jmp    804853b <_exit+0x3a>

0804853d <exit>:
 804853d:	55                   	push   %ebp
 804853e:	89 e5                	mov    %esp,%ebp
 8048540:	53                   	push   %ebx
 8048541:	83 ec 14             	sub    $0x14,%esp
 8048544:	e8 5f 0b 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048549:	81 c3 b7 6a 00 00    	add    $0x6ab7,%ebx
 804854f:	eb 0f                	jmp    8048560 <exit+0x23>
 8048551:	8b 83 20 02 00 00    	mov    0x220(%ebx),%eax
 8048557:	8b 84 83 a0 01 00 00 	mov    0x1a0(%ebx,%eax,4),%eax
 804855e:	ff d0                	call   *%eax
 8048560:	8b 83 20 02 00 00    	mov    0x220(%ebx),%eax
 8048566:	8d 50 ff             	lea    -0x1(%eax),%edx
 8048569:	89 93 20 02 00 00    	mov    %edx,0x220(%ebx)
 804856f:	85 c0                	test   %eax,%eax
 8048571:	75 de                	jne    8048551 <exit+0x14>
 8048573:	8b 45 08             	mov    0x8(%ebp),%eax
 8048576:	89 04 24             	mov    %eax,(%esp)
 8048579:	e8 83 ff ff ff       	call   8048501 <_exit>
 804857e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048581:	89 04 24             	mov    %eax,(%esp)
 8048584:	e8 b4 ff ff ff       	call   804853d <exit>
 8048589:	90                   	nop
 804858a:	83 c4 14             	add    $0x14,%esp
 804858d:	5b                   	pop    %ebx
 804858e:	5d                   	pop    %ebp
 804858f:	c3                   	ret    

08048590 <yield>:
 8048590:	55                   	push   %ebp
 8048591:	89 e5                	mov    %esp,%ebp
 8048593:	53                   	push   %ebx
 8048594:	83 ec 14             	sub    $0x14,%esp
 8048597:	e8 0c 0b 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 804859c:	81 c3 64 6a 00 00    	add    $0x6a64,%ebx
 80485a2:	e8 da fe ff ff       	call   8048481 <fork>
 80485a7:	85 c0                	test   %eax,%eax
 80485a9:	74 0e                	je     80485b9 <yield+0x29>
 80485ab:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80485b2:	e8 15 00 00 00       	call   80485cc <wait>
 80485b7:	eb 0c                	jmp    80485c5 <yield+0x35>
 80485b9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80485c0:	e8 78 ff ff ff       	call   804853d <exit>
 80485c5:	90                   	nop
 80485c6:	83 c4 14             	add    $0x14,%esp
 80485c9:	5b                   	pop    %ebx
 80485ca:	5d                   	pop    %ebp
 80485cb:	c3                   	ret    

080485cc <wait>:
 80485cc:	55                   	push   %ebp
 80485cd:	89 e5                	mov    %esp,%ebp
 80485cf:	83 ec 20             	sub    $0x20,%esp
 80485d2:	e8 cd 0a 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 80485d7:	81 c1 29 6a 00 00    	add    $0x6a29,%ecx
 80485dd:	c7 45 e8 ff ff ff ff 	movl   $0xffffffff,-0x18(%ebp)
 80485e4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 80485eb:	8b 45 08             	mov    0x8(%ebp),%eax
 80485ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80485f1:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80485f4:	c7 45 fc 07 00 00 00 	movl   $0x7,-0x4(%ebp)
 80485fb:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80485fe:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048601:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048604:	cd 2e                	int    $0x2e
 8048606:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048609:	b8 27 00 00 00       	mov    $0x27,%eax
 804860e:	cd 2e                	int    $0x2e
 8048610:	89 c2                	mov    %eax,%edx
 8048612:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048618:	89 10                	mov    %edx,(%eax)
 804861a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804861d:	c9                   	leave  
 804861e:	c3                   	ret    

0804861f <waitpid>:
 804861f:	55                   	push   %ebp
 8048620:	89 e5                	mov    %esp,%ebp
 8048622:	83 ec 20             	sub    $0x20,%esp
 8048625:	e8 7a 0a 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804862a:	81 c1 d6 69 00 00    	add    $0x69d6,%ecx
 8048630:	8b 45 08             	mov    0x8(%ebp),%eax
 8048633:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048636:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048639:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804863c:	8b 45 10             	mov    0x10(%ebp),%eax
 804863f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048642:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8048645:	c7 45 fc 07 00 00 00 	movl   $0x7,-0x4(%ebp)
 804864c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804864f:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048652:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048655:	cd 2e                	int    $0x2e
 8048657:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804865a:	b8 27 00 00 00       	mov    $0x27,%eax
 804865f:	cd 2e                	int    $0x2e
 8048661:	89 c2                	mov    %eax,%edx
 8048663:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048669:	89 10                	mov    %edx,(%eax)
 804866b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804866e:	c9                   	leave  
 804866f:	c3                   	ret    

08048670 <thr_exit>:
 8048670:	55                   	push   %ebp
 8048671:	89 e5                	mov    %esp,%ebp
 8048673:	83 ec 10             	sub    $0x10,%esp
 8048676:	e8 29 0a 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804867b:	81 c1 85 69 00 00    	add    $0x6985,%ecx
 8048681:	8b 45 08             	mov    0x8(%ebp),%eax
 8048684:	c7 45 fc 1f 00 00 00 	movl   $0x1f,-0x4(%ebp)
 804868b:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804868e:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048691:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048694:	cd 2e                	int    $0x2e
 8048696:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048699:	b8 27 00 00 00       	mov    $0x27,%eax
 804869e:	cd 2e                	int    $0x2e
 80486a0:	89 c2                	mov    %eax,%edx
 80486a2:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 80486a8:	89 10                	mov    %edx,(%eax)
 80486aa:	90                   	nop
 80486ab:	c9                   	leave  
 80486ac:	c3                   	ret    

080486ad <getpid>:
 80486ad:	55                   	push   %ebp
 80486ae:	89 e5                	mov    %esp,%ebp
 80486b0:	83 ec 10             	sub    $0x10,%esp
 80486b3:	e8 ec 09 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 80486b8:	81 c1 48 69 00 00    	add    $0x6948,%ecx
 80486be:	c7 45 fc 23 00 00 00 	movl   $0x23,-0x4(%ebp)
 80486c5:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80486cc:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80486cf:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80486d2:	cd 2e                	int    $0x2e
 80486d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80486d7:	b8 27 00 00 00       	mov    $0x27,%eax
 80486dc:	cd 2e                	int    $0x2e
 80486de:	89 c2                	mov    %eax,%edx
 80486e0:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 80486e6:	89 10                	mov    %edx,(%eax)
 80486e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80486eb:	90                   	nop
 80486ec:	c9                   	leave  
 80486ed:	c3                   	ret    

080486ee <halt>:
 80486ee:	55                   	push   %ebp
 80486ef:	89 e5                	mov    %esp,%ebp
 80486f1:	83 ec 10             	sub    $0x10,%esp
 80486f4:	e8 ab 09 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 80486f9:	81 c1 07 69 00 00    	add    $0x6907,%ecx
 80486ff:	c7 45 fc 28 00 00 00 	movl   $0x28,-0x4(%ebp)
 8048706:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 804870d:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048710:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048713:	cd 2e                	int    $0x2e
 8048715:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048718:	b8 27 00 00 00       	mov    $0x27,%eax
 804871d:	cd 2e                	int    $0x2e
 804871f:	89 c2                	mov    %eax,%edx
 8048721:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048727:	89 10                	mov    %edx,(%eax)
 8048729:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804872c:	90                   	nop
 804872d:	c9                   	leave  
 804872e:	c3                   	ret    

0804872f <mmap>:
 804872f:	55                   	push   %ebp
 8048730:	89 e5                	mov    %esp,%ebp
 8048732:	83 ec 30             	sub    $0x30,%esp
 8048735:	e8 6a 09 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804873a:	81 c1 c6 68 00 00    	add    $0x68c6,%ecx
 8048740:	8b 45 08             	mov    0x8(%ebp),%eax
 8048743:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048746:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048749:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804874c:	8b 45 10             	mov    0x10(%ebp),%eax
 804874f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048752:	8b 45 14             	mov    0x14(%ebp),%eax
 8048755:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048758:	8b 45 18             	mov    0x18(%ebp),%eax
 804875b:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804875e:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8048761:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048764:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8048767:	c7 45 fc 18 00 00 00 	movl   $0x18,-0x4(%ebp)
 804876e:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048771:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048774:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048777:	cd 2e                	int    $0x2e
 8048779:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804877c:	b8 27 00 00 00       	mov    $0x27,%eax
 8048781:	cd 2e                	int    $0x2e
 8048783:	89 c2                	mov    %eax,%edx
 8048785:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 804878b:	89 10                	mov    %edx,(%eax)
 804878d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048790:	c9                   	leave  
 8048791:	c3                   	ret    

08048792 <munmap>:
 8048792:	55                   	push   %ebp
 8048793:	89 e5                	mov    %esp,%ebp
 8048795:	83 ec 20             	sub    $0x20,%esp
 8048798:	e8 07 09 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804879d:	81 c1 63 68 00 00    	add    $0x6863,%ecx
 80487a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80487a6:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80487a9:	8b 45 0c             	mov    0xc(%ebp),%eax
 80487ac:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80487af:	8d 45 ec             	lea    -0x14(%ebp),%eax
 80487b2:	c7 45 fc 1a 00 00 00 	movl   $0x1a,-0x4(%ebp)
 80487b9:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80487bc:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80487bf:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80487c2:	cd 2e                	int    $0x2e
 80487c4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80487c7:	b8 27 00 00 00       	mov    $0x27,%eax
 80487cc:	cd 2e                	int    $0x2e
 80487ce:	89 c2                	mov    %eax,%edx
 80487d0:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 80487d6:	89 10                	mov    %edx,(%eax)
 80487d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80487db:	c9                   	leave  
 80487dc:	c3                   	ret    

080487dd <sync>:
 80487dd:	55                   	push   %ebp
 80487de:	89 e5                	mov    %esp,%ebp
 80487e0:	83 ec 10             	sub    $0x10,%esp
 80487e3:	e8 bc 08 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 80487e8:	81 c1 18 68 00 00    	add    $0x6818,%ecx
 80487ee:	c7 45 fc 0f 00 00 00 	movl   $0xf,-0x4(%ebp)
 80487f5:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80487fc:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80487ff:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048802:	cd 2e                	int    $0x2e
 8048804:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048807:	b8 27 00 00 00       	mov    $0x27,%eax
 804880c:	cd 2e                	int    $0x2e
 804880e:	89 c2                	mov    %eax,%edx
 8048810:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048816:	89 10                	mov    %edx,(%eax)
 8048818:	90                   	nop
 8048819:	c9                   	leave  
 804881a:	c3                   	ret    

0804881b <open>:
 804881b:	55                   	push   %ebp
 804881c:	89 e5                	mov    %esp,%ebp
 804881e:	53                   	push   %ebx
 804881f:	83 ec 34             	sub    $0x34,%esp
 8048822:	e8 81 08 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048827:	81 c3 d9 67 00 00    	add    $0x67d9,%ebx
 804882d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048830:	89 04 24             	mov    %eax,(%esp)
 8048833:	e8 e1 0a 00 00       	call   8049319 <strlen>
 8048838:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804883b:	8b 45 08             	mov    0x8(%ebp),%eax
 804883e:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048841:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048844:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048847:	8b 45 10             	mov    0x10(%ebp),%eax
 804884a:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804884d:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8048850:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)
 8048857:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804885a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804885d:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048860:	cd 2e                	int    $0x2e
 8048862:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048865:	b8 27 00 00 00       	mov    $0x27,%eax
 804886a:	cd 2e                	int    $0x2e
 804886c:	89 c2                	mov    %eax,%edx
 804886e:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048874:	89 10                	mov    %edx,(%eax)
 8048876:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048879:	83 c4 34             	add    $0x34,%esp
 804887c:	5b                   	pop    %ebx
 804887d:	5d                   	pop    %ebp
 804887e:	c3                   	ret    

0804887f <lseek>:
 804887f:	55                   	push   %ebp
 8048880:	89 e5                	mov    %esp,%ebp
 8048882:	83 ec 20             	sub    $0x20,%esp
 8048885:	e8 1a 08 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804888a:	81 c1 76 67 00 00    	add    $0x6776,%ecx
 8048890:	8b 45 08             	mov    0x8(%ebp),%eax
 8048893:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048896:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048899:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804889c:	8b 45 10             	mov    0x10(%ebp),%eax
 804889f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80488a2:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80488a5:	c7 45 fc 0e 00 00 00 	movl   $0xe,-0x4(%ebp)
 80488ac:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80488af:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80488b2:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80488b5:	cd 2e                	int    $0x2e
 80488b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80488ba:	b8 27 00 00 00       	mov    $0x27,%eax
 80488bf:	cd 2e                	int    $0x2e
 80488c1:	89 c2                	mov    %eax,%edx
 80488c3:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 80488c9:	89 10                	mov    %edx,(%eax)
 80488cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80488ce:	c9                   	leave  
 80488cf:	c3                   	ret    

080488d0 <read>:
 80488d0:	55                   	push   %ebp
 80488d1:	89 e5                	mov    %esp,%ebp
 80488d3:	83 ec 20             	sub    $0x20,%esp
 80488d6:	e8 c9 07 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 80488db:	81 c1 25 67 00 00    	add    $0x6725,%ecx
 80488e1:	8b 45 08             	mov    0x8(%ebp),%eax
 80488e4:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80488e7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80488ea:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80488ed:	8b 45 10             	mov    0x10(%ebp),%eax
 80488f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80488f3:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80488f6:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%ebp)
 80488fd:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048900:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048903:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048906:	cd 2e                	int    $0x2e
 8048908:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804890b:	b8 27 00 00 00       	mov    $0x27,%eax
 8048910:	cd 2e                	int    $0x2e
 8048912:	89 c2                	mov    %eax,%edx
 8048914:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 804891a:	89 10                	mov    %edx,(%eax)
 804891c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804891f:	c9                   	leave  
 8048920:	c3                   	ret    

08048921 <write>:
 8048921:	55                   	push   %ebp
 8048922:	89 e5                	mov    %esp,%ebp
 8048924:	83 ec 20             	sub    $0x20,%esp
 8048927:	e8 78 07 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804892c:	81 c1 d4 66 00 00    	add    $0x66d4,%ecx
 8048932:	8b 45 08             	mov    0x8(%ebp),%eax
 8048935:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048938:	8b 45 0c             	mov    0xc(%ebp),%eax
 804893b:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804893e:	8b 45 10             	mov    0x10(%ebp),%eax
 8048941:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048944:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8048947:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%ebp)
 804894e:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048951:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048954:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048957:	cd 2e                	int    $0x2e
 8048959:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804895c:	b8 27 00 00 00       	mov    $0x27,%eax
 8048961:	cd 2e                	int    $0x2e
 8048963:	89 c2                	mov    %eax,%edx
 8048965:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 804896b:	89 10                	mov    %edx,(%eax)
 804896d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048970:	c9                   	leave  
 8048971:	c3                   	ret    

08048972 <close>:
 8048972:	55                   	push   %ebp
 8048973:	89 e5                	mov    %esp,%ebp
 8048975:	83 ec 10             	sub    $0x10,%esp
 8048978:	e8 27 07 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 804897d:	81 c1 83 66 00 00    	add    $0x6683,%ecx
 8048983:	8b 45 08             	mov    0x8(%ebp),%eax
 8048986:	c7 45 fc 06 00 00 00 	movl   $0x6,-0x4(%ebp)
 804898d:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048990:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048993:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048996:	cd 2e                	int    $0x2e
 8048998:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804899b:	b8 27 00 00 00       	mov    $0x27,%eax
 80489a0:	cd 2e                	int    $0x2e
 80489a2:	89 c2                	mov    %eax,%edx
 80489a4:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 80489aa:	89 10                	mov    %edx,(%eax)
 80489ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80489af:	90                   	nop
 80489b0:	c9                   	leave  
 80489b1:	c3                   	ret    

080489b2 <dup>:
 80489b2:	55                   	push   %ebp
 80489b3:	89 e5                	mov    %esp,%ebp
 80489b5:	83 ec 10             	sub    $0x10,%esp
 80489b8:	e8 e7 06 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 80489bd:	81 c1 43 66 00 00    	add    $0x6643,%ecx
 80489c3:	8b 45 08             	mov    0x8(%ebp),%eax
 80489c6:	c7 45 fc 11 00 00 00 	movl   $0x11,-0x4(%ebp)
 80489cd:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80489d0:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80489d3:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80489d6:	cd 2e                	int    $0x2e
 80489d8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80489db:	b8 27 00 00 00       	mov    $0x27,%eax
 80489e0:	cd 2e                	int    $0x2e
 80489e2:	89 c2                	mov    %eax,%edx
 80489e4:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 80489ea:	89 10                	mov    %edx,(%eax)
 80489ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80489ef:	90                   	nop
 80489f0:	c9                   	leave  
 80489f1:	c3                   	ret    

080489f2 <dup2>:
 80489f2:	55                   	push   %ebp
 80489f3:	89 e5                	mov    %esp,%ebp
 80489f5:	83 ec 20             	sub    $0x20,%esp
 80489f8:	e8 a7 06 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 80489fd:	81 c1 03 66 00 00    	add    $0x6603,%ecx
 8048a03:	8b 45 08             	mov    0x8(%ebp),%eax
 8048a06:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048a09:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048a0c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048a0f:	8d 45 ec             	lea    -0x14(%ebp),%eax
 8048a12:	c7 45 fc 2b 00 00 00 	movl   $0x2b,-0x4(%ebp)
 8048a19:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048a1c:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048a1f:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048a22:	cd 2e                	int    $0x2e
 8048a24:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048a27:	b8 27 00 00 00       	mov    $0x27,%eax
 8048a2c:	cd 2e                	int    $0x2e
 8048a2e:	89 c2                	mov    %eax,%edx
 8048a30:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048a36:	89 10                	mov    %edx,(%eax)
 8048a38:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048a3b:	c9                   	leave  
 8048a3c:	c3                   	ret    

08048a3d <mkdir>:
 8048a3d:	55                   	push   %ebp
 8048a3e:	89 e5                	mov    %esp,%ebp
 8048a40:	53                   	push   %ebx
 8048a41:	83 ec 34             	sub    $0x34,%esp
 8048a44:	e8 5f 06 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048a49:	81 c3 b7 65 00 00    	add    $0x65b7,%ebx
 8048a4f:	8b 45 08             	mov    0x8(%ebp),%eax
 8048a52:	89 04 24             	mov    %eax,(%esp)
 8048a55:	e8 bf 08 00 00       	call   8049319 <strlen>
 8048a5a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048a5d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048a60:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048a63:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048a66:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048a69:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048a6c:	c7 45 f4 16 00 00 00 	movl   $0x16,-0xc(%ebp)
 8048a73:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048a76:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048a79:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048a7c:	cd 2e                	int    $0x2e
 8048a7e:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048a81:	b8 27 00 00 00       	mov    $0x27,%eax
 8048a86:	cd 2e                	int    $0x2e
 8048a88:	89 c2                	mov    %eax,%edx
 8048a8a:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048a90:	89 10                	mov    %edx,(%eax)
 8048a92:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048a95:	83 c4 34             	add    $0x34,%esp
 8048a98:	5b                   	pop    %ebx
 8048a99:	5d                   	pop    %ebp
 8048a9a:	c3                   	ret    

08048a9b <rmdir>:
 8048a9b:	55                   	push   %ebp
 8048a9c:	89 e5                	mov    %esp,%ebp
 8048a9e:	53                   	push   %ebx
 8048a9f:	83 ec 34             	sub    $0x34,%esp
 8048aa2:	e8 01 06 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048aa7:	81 c3 59 65 00 00    	add    $0x6559,%ebx
 8048aad:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ab0:	89 04 24             	mov    %eax,(%esp)
 8048ab3:	e8 61 08 00 00       	call   8049319 <strlen>
 8048ab8:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048abb:	8b 45 08             	mov    0x8(%ebp),%eax
 8048abe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048ac1:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048ac4:	c7 45 f4 15 00 00 00 	movl   $0x15,-0xc(%ebp)
 8048acb:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048ace:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048ad1:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048ad4:	cd 2e                	int    $0x2e
 8048ad6:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048ad9:	b8 27 00 00 00       	mov    $0x27,%eax
 8048ade:	cd 2e                	int    $0x2e
 8048ae0:	89 c2                	mov    %eax,%edx
 8048ae2:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048ae8:	89 10                	mov    %edx,(%eax)
 8048aea:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048aed:	83 c4 34             	add    $0x34,%esp
 8048af0:	5b                   	pop    %ebx
 8048af1:	5d                   	pop    %ebp
 8048af2:	c3                   	ret    

08048af3 <unlink>:
 8048af3:	55                   	push   %ebp
 8048af4:	89 e5                	mov    %esp,%ebp
 8048af6:	53                   	push   %ebx
 8048af7:	83 ec 34             	sub    $0x34,%esp
 8048afa:	e8 a9 05 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048aff:	81 c3 01 65 00 00    	add    $0x6501,%ebx
 8048b05:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b08:	89 04 24             	mov    %eax,(%esp)
 8048b0b:	e8 09 08 00 00       	call   8049319 <strlen>
 8048b10:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048b13:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b16:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048b19:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048b1c:	c7 45 f4 09 00 00 00 	movl   $0x9,-0xc(%ebp)
 8048b23:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048b26:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048b29:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048b2c:	cd 2e                	int    $0x2e
 8048b2e:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048b31:	b8 27 00 00 00       	mov    $0x27,%eax
 8048b36:	cd 2e                	int    $0x2e
 8048b38:	89 c2                	mov    %eax,%edx
 8048b3a:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048b40:	89 10                	mov    %edx,(%eax)
 8048b42:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048b45:	83 c4 34             	add    $0x34,%esp
 8048b48:	5b                   	pop    %ebx
 8048b49:	5d                   	pop    %ebp
 8048b4a:	c3                   	ret    

08048b4b <link>:
 8048b4b:	55                   	push   %ebp
 8048b4c:	89 e5                	mov    %esp,%ebp
 8048b4e:	53                   	push   %ebx
 8048b4f:	83 ec 34             	sub    $0x34,%esp
 8048b52:	e8 51 05 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048b57:	81 c3 a9 64 00 00    	add    $0x64a9,%ebx
 8048b5d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b60:	89 04 24             	mov    %eax,(%esp)
 8048b63:	e8 b1 07 00 00       	call   8049319 <strlen>
 8048b68:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048b6b:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b6e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048b71:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b74:	89 04 24             	mov    %eax,(%esp)
 8048b77:	e8 9d 07 00 00       	call   8049319 <strlen>
 8048b7c:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048b7f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b82:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048b85:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8048b88:	c7 45 f4 08 00 00 00 	movl   $0x8,-0xc(%ebp)
 8048b8f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048b92:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048b95:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048b98:	cd 2e                	int    $0x2e
 8048b9a:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048b9d:	b8 27 00 00 00       	mov    $0x27,%eax
 8048ba2:	cd 2e                	int    $0x2e
 8048ba4:	89 c2                	mov    %eax,%edx
 8048ba6:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048bac:	89 10                	mov    %edx,(%eax)
 8048bae:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048bb1:	83 c4 34             	add    $0x34,%esp
 8048bb4:	5b                   	pop    %ebx
 8048bb5:	5d                   	pop    %ebp
 8048bb6:	c3                   	ret    

08048bb7 <rename>:
 8048bb7:	55                   	push   %ebp
 8048bb8:	89 e5                	mov    %esp,%ebp
 8048bba:	53                   	push   %ebx
 8048bbb:	83 ec 34             	sub    $0x34,%esp
 8048bbe:	e8 e5 04 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048bc3:	81 c3 3d 64 00 00    	add    $0x643d,%ebx
 8048bc9:	8b 45 08             	mov    0x8(%ebp),%eax
 8048bcc:	89 04 24             	mov    %eax,(%esp)
 8048bcf:	e8 45 07 00 00       	call   8049319 <strlen>
 8048bd4:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048bd7:	8b 45 08             	mov    0x8(%ebp),%eax
 8048bda:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048bdd:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048be0:	89 04 24             	mov    %eax,(%esp)
 8048be3:	e8 31 07 00 00       	call   8049319 <strlen>
 8048be8:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048beb:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048bee:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048bf1:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8048bf4:	c7 45 f4 1b 00 00 00 	movl   $0x1b,-0xc(%ebp)
 8048bfb:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048bfe:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048c01:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048c04:	cd 2e                	int    $0x2e
 8048c06:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048c09:	b8 27 00 00 00       	mov    $0x27,%eax
 8048c0e:	cd 2e                	int    $0x2e
 8048c10:	89 c2                	mov    %eax,%edx
 8048c12:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048c18:	89 10                	mov    %edx,(%eax)
 8048c1a:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048c1d:	83 c4 34             	add    $0x34,%esp
 8048c20:	5b                   	pop    %ebx
 8048c21:	5d                   	pop    %ebp
 8048c22:	c3                   	ret    

08048c23 <chdir>:
 8048c23:	55                   	push   %ebp
 8048c24:	89 e5                	mov    %esp,%ebp
 8048c26:	53                   	push   %ebx
 8048c27:	83 ec 34             	sub    $0x34,%esp
 8048c2a:	e8 79 04 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048c2f:	81 c3 d1 63 00 00    	add    $0x63d1,%ebx
 8048c35:	8b 45 08             	mov    0x8(%ebp),%eax
 8048c38:	89 04 24             	mov    %eax,(%esp)
 8048c3b:	e8 d9 06 00 00       	call   8049319 <strlen>
 8048c40:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048c43:	8b 45 08             	mov    0x8(%ebp),%eax
 8048c46:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048c49:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048c4c:	c7 45 f4 0b 00 00 00 	movl   $0xb,-0xc(%ebp)
 8048c53:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048c56:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048c59:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048c5c:	cd 2e                	int    $0x2e
 8048c5e:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048c61:	b8 27 00 00 00       	mov    $0x27,%eax
 8048c66:	cd 2e                	int    $0x2e
 8048c68:	89 c2                	mov    %eax,%edx
 8048c6a:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048c70:	89 10                	mov    %edx,(%eax)
 8048c72:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048c75:	83 c4 34             	add    $0x34,%esp
 8048c78:	5b                   	pop    %ebx
 8048c79:	5d                   	pop    %ebp
 8048c7a:	c3                   	ret    

08048c7b <get_free_mem>:
 8048c7b:	55                   	push   %ebp
 8048c7c:	89 e5                	mov    %esp,%ebp
 8048c7e:	83 ec 10             	sub    $0x10,%esp
 8048c81:	e8 1e 04 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 8048c86:	81 c1 7a 63 00 00    	add    $0x637a,%ecx
 8048c8c:	c7 45 fc 29 00 00 00 	movl   $0x29,-0x4(%ebp)
 8048c93:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8048c9a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048c9d:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048ca0:	cd 2e                	int    $0x2e
 8048ca2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048ca5:	b8 27 00 00 00       	mov    $0x27,%eax
 8048caa:	cd 2e                	int    $0x2e
 8048cac:	89 c2                	mov    %eax,%edx
 8048cae:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048cb4:	89 10                	mov    %edx,(%eax)
 8048cb6:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048cb9:	c9                   	leave  
 8048cba:	c3                   	ret    

08048cbb <execve>:
 8048cbb:	55                   	push   %ebp
 8048cbc:	89 e5                	mov    %esp,%ebp
 8048cbe:	56                   	push   %esi
 8048cbf:	53                   	push   %ebx
 8048cc0:	83 ec 40             	sub    $0x40,%esp
 8048cc3:	e8 e0 03 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048cc8:	81 c3 38 63 00 00    	add    $0x6338,%ebx
 8048cce:	8b 45 08             	mov    0x8(%ebp),%eax
 8048cd1:	89 04 24             	mov    %eax,(%esp)
 8048cd4:	e8 40 06 00 00       	call   8049319 <strlen>
 8048cd9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8048cdc:	8b 45 08             	mov    0x8(%ebp),%eax
 8048cdf:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8048ce2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8048ce9:	eb 03                	jmp    8048cee <execve+0x33>
 8048ceb:	ff 45 f4             	incl   -0xc(%ebp)
 8048cee:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048cf1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048cf8:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048cfb:	01 d0                	add    %edx,%eax
 8048cfd:	8b 00                	mov    (%eax),%eax
 8048cff:	85 c0                	test   %eax,%eax
 8048d01:	75 e8                	jne    8048ceb <execve+0x30>
 8048d03:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048d06:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048d09:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8048d0c:	40                   	inc    %eax
 8048d0d:	c1 e0 03             	shl    $0x3,%eax
 8048d10:	89 04 24             	mov    %eax,(%esp)
 8048d13:	e8 c5 2a 00 00       	call   804b7dd <malloc>
 8048d18:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048d1b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8048d22:	eb 49                	jmp    8048d6d <execve+0xb2>
 8048d24:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048d27:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048d2a:	c1 e2 03             	shl    $0x3,%edx
 8048d2d:	8d 34 10             	lea    (%eax,%edx,1),%esi
 8048d30:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048d33:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048d3a:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048d3d:	01 d0                	add    %edx,%eax
 8048d3f:	8b 00                	mov    (%eax),%eax
 8048d41:	89 04 24             	mov    %eax,(%esp)
 8048d44:	e8 d0 05 00 00       	call   8049319 <strlen>
 8048d49:	89 46 04             	mov    %eax,0x4(%esi)
 8048d4c:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048d4f:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048d52:	c1 e2 03             	shl    $0x3,%edx
 8048d55:	01 c2                	add    %eax,%edx
 8048d57:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048d5a:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 8048d61:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048d64:	01 c8                	add    %ecx,%eax
 8048d66:	8b 00                	mov    (%eax),%eax
 8048d68:	89 02                	mov    %eax,(%edx)
 8048d6a:	ff 45 f4             	incl   -0xc(%ebp)
 8048d6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048d70:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048d77:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048d7a:	01 d0                	add    %edx,%eax
 8048d7c:	8b 00                	mov    (%eax),%eax
 8048d7e:	85 c0                	test   %eax,%eax
 8048d80:	75 a2                	jne    8048d24 <execve+0x69>
 8048d82:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048d85:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048d88:	c1 e2 03             	shl    $0x3,%edx
 8048d8b:	01 d0                	add    %edx,%eax
 8048d8d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 8048d94:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048d97:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048d9a:	c1 e2 03             	shl    $0x3,%edx
 8048d9d:	01 d0                	add    %edx,%eax
 8048d9f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8048da5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8048dac:	eb 03                	jmp    8048db1 <execve+0xf6>
 8048dae:	ff 45 f4             	incl   -0xc(%ebp)
 8048db1:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048db4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048dbb:	8b 45 10             	mov    0x10(%ebp),%eax
 8048dbe:	01 d0                	add    %edx,%eax
 8048dc0:	8b 00                	mov    (%eax),%eax
 8048dc2:	85 c0                	test   %eax,%eax
 8048dc4:	75 e8                	jne    8048dae <execve+0xf3>
 8048dc6:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048dc9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048dcc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8048dcf:	40                   	inc    %eax
 8048dd0:	c1 e0 03             	shl    $0x3,%eax
 8048dd3:	89 04 24             	mov    %eax,(%esp)
 8048dd6:	e8 02 2a 00 00       	call   804b7dd <malloc>
 8048ddb:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048dde:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8048de5:	eb 49                	jmp    8048e30 <execve+0x175>
 8048de7:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8048dea:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048ded:	c1 e2 03             	shl    $0x3,%edx
 8048df0:	8d 34 10             	lea    (%eax,%edx,1),%esi
 8048df3:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048df6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048dfd:	8b 45 10             	mov    0x10(%ebp),%eax
 8048e00:	01 d0                	add    %edx,%eax
 8048e02:	8b 00                	mov    (%eax),%eax
 8048e04:	89 04 24             	mov    %eax,(%esp)
 8048e07:	e8 0d 05 00 00       	call   8049319 <strlen>
 8048e0c:	89 46 04             	mov    %eax,0x4(%esi)
 8048e0f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8048e12:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048e15:	c1 e2 03             	shl    $0x3,%edx
 8048e18:	01 c2                	add    %eax,%edx
 8048e1a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048e1d:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 8048e24:	8b 45 10             	mov    0x10(%ebp),%eax
 8048e27:	01 c8                	add    %ecx,%eax
 8048e29:	8b 00                	mov    (%eax),%eax
 8048e2b:	89 02                	mov    %eax,(%edx)
 8048e2d:	ff 45 f4             	incl   -0xc(%ebp)
 8048e30:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048e33:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048e3a:	8b 45 10             	mov    0x10(%ebp),%eax
 8048e3d:	01 d0                	add    %edx,%eax
 8048e3f:	8b 00                	mov    (%eax),%eax
 8048e41:	85 c0                	test   %eax,%eax
 8048e43:	75 a2                	jne    8048de7 <execve+0x12c>
 8048e45:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8048e48:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048e4b:	c1 e2 03             	shl    $0x3,%edx
 8048e4e:	01 d0                	add    %edx,%eax
 8048e50:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 8048e57:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8048e5a:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048e5d:	c1 e2 03             	shl    $0x3,%edx
 8048e60:	01 d0                	add    %edx,%eax
 8048e62:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8048e68:	8d 45 d0             	lea    -0x30(%ebp),%eax
 8048e6b:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
 8048e72:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048e75:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048e78:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048e7b:	cd 2e                	int    $0x2e
 8048e7d:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048e80:	b8 27 00 00 00       	mov    $0x27,%eax
 8048e85:	cd 2e                	int    $0x2e
 8048e87:	89 c2                	mov    %eax,%edx
 8048e89:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048e8f:	89 10                	mov    %edx,(%eax)
 8048e91:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048e94:	83 c4 40             	add    $0x40,%esp
 8048e97:	5b                   	pop    %ebx
 8048e98:	5e                   	pop    %esi
 8048e99:	5d                   	pop    %ebp
 8048e9a:	c3                   	ret    

08048e9b <thr_set_errno>:
 8048e9b:	55                   	push   %ebp
 8048e9c:	89 e5                	mov    %esp,%ebp
 8048e9e:	83 ec 10             	sub    $0x10,%esp
 8048ea1:	e8 fe 01 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 8048ea6:	81 c1 5a 61 00 00    	add    $0x615a,%ecx
 8048eac:	8b 45 08             	mov    0x8(%ebp),%eax
 8048eaf:	c7 45 fc 2a 00 00 00 	movl   $0x2a,-0x4(%ebp)
 8048eb6:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048eb9:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048ebc:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048ebf:	cd 2e                	int    $0x2e
 8048ec1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048ec4:	b8 27 00 00 00       	mov    $0x27,%eax
 8048ec9:	cd 2e                	int    $0x2e
 8048ecb:	89 c2                	mov    %eax,%edx
 8048ecd:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048ed3:	89 10                	mov    %edx,(%eax)
 8048ed5:	90                   	nop
 8048ed6:	c9                   	leave  
 8048ed7:	c3                   	ret    

08048ed8 <thr_errno>:
 8048ed8:	55                   	push   %ebp
 8048ed9:	89 e5                	mov    %esp,%ebp
 8048edb:	83 ec 10             	sub    $0x10,%esp
 8048ede:	e8 c1 01 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 8048ee3:	81 c1 1d 61 00 00    	add    $0x611d,%ecx
 8048ee9:	c7 45 fc 27 00 00 00 	movl   $0x27,-0x4(%ebp)
 8048ef0:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8048ef7:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048efa:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048efd:	cd 2e                	int    $0x2e
 8048eff:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048f02:	b8 27 00 00 00       	mov    $0x27,%eax
 8048f07:	cd 2e                	int    $0x2e
 8048f09:	89 c2                	mov    %eax,%edx
 8048f0b:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048f11:	89 10                	mov    %edx,(%eax)
 8048f13:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048f16:	90                   	nop
 8048f17:	c9                   	leave  
 8048f18:	c3                   	ret    

08048f19 <getdents>:
 8048f19:	55                   	push   %ebp
 8048f1a:	89 e5                	mov    %esp,%ebp
 8048f1c:	83 ec 20             	sub    $0x20,%esp
 8048f1f:	e8 80 01 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 8048f24:	81 c1 dc 60 00 00    	add    $0x60dc,%ecx
 8048f2a:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f2d:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048f30:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048f33:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048f36:	8b 45 10             	mov    0x10(%ebp),%eax
 8048f39:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048f3c:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8048f3f:	c7 45 fc 17 00 00 00 	movl   $0x17,-0x4(%ebp)
 8048f46:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048f49:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048f4c:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048f4f:	cd 2e                	int    $0x2e
 8048f51:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048f54:	b8 27 00 00 00       	mov    $0x27,%eax
 8048f59:	cd 2e                	int    $0x2e
 8048f5b:	89 c2                	mov    %eax,%edx
 8048f5d:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048f63:	89 10                	mov    %edx,(%eax)
 8048f65:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048f68:	c9                   	leave  
 8048f69:	c3                   	ret    

08048f6a <stat>:
 8048f6a:	55                   	push   %ebp
 8048f6b:	89 e5                	mov    %esp,%ebp
 8048f6d:	53                   	push   %ebx
 8048f6e:	83 ec 34             	sub    $0x34,%esp
 8048f71:	e8 32 01 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8048f76:	81 c3 8a 60 00 00    	add    $0x608a,%ebx
 8048f7c:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f7f:	89 04 24             	mov    %eax,(%esp)
 8048f82:	e8 92 03 00 00       	call   8049319 <strlen>
 8048f87:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048f8a:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f8d:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048f90:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048f93:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048f96:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048f99:	c7 45 f4 2f 00 00 00 	movl   $0x2f,-0xc(%ebp)
 8048fa0:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048fa3:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048fa6:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048fa9:	cd 2e                	int    $0x2e
 8048fab:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048fae:	b8 27 00 00 00       	mov    $0x27,%eax
 8048fb3:	cd 2e                	int    $0x2e
 8048fb5:	89 c2                	mov    %eax,%edx
 8048fb7:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8048fbd:	89 10                	mov    %edx,(%eax)
 8048fbf:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048fc2:	83 c4 34             	add    $0x34,%esp
 8048fc5:	5b                   	pop    %ebx
 8048fc6:	5d                   	pop    %ebp
 8048fc7:	c3                   	ret    

08048fc8 <pipe>:
 8048fc8:	55                   	push   %ebp
 8048fc9:	89 e5                	mov    %esp,%ebp
 8048fcb:	83 ec 10             	sub    $0x10,%esp
 8048fce:	e8 d1 00 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 8048fd3:	81 c1 2d 60 00 00    	add    $0x602d,%ecx
 8048fd9:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fdc:	c7 45 fc 12 00 00 00 	movl   $0x12,-0x4(%ebp)
 8048fe3:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048fe6:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048fe9:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048fec:	cd 2e                	int    $0x2e
 8048fee:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048ff1:	b8 27 00 00 00       	mov    $0x27,%eax
 8048ff6:	cd 2e                	int    $0x2e
 8048ff8:	89 c2                	mov    %eax,%edx
 8048ffa:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8049000:	89 10                	mov    %edx,(%eax)
 8049002:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049005:	90                   	nop
 8049006:	c9                   	leave  
 8049007:	c3                   	ret    

08049008 <uname>:
 8049008:	55                   	push   %ebp
 8049009:	89 e5                	mov    %esp,%ebp
 804900b:	83 ec 10             	sub    $0x10,%esp
 804900e:	e8 91 00 00 00       	call   80490a4 <__x86.get_pc_thunk.cx>
 8049013:	81 c1 ed 5f 00 00    	add    $0x5fed,%ecx
 8049019:	8b 45 08             	mov    0x8(%ebp),%eax
 804901c:	c7 45 fc 1c 00 00 00 	movl   $0x1c,-0x4(%ebp)
 8049023:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8049026:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049029:	8b 55 f8             	mov    -0x8(%ebp),%edx
 804902c:	cd 2e                	int    $0x2e
 804902e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049031:	b8 27 00 00 00       	mov    $0x27,%eax
 8049036:	cd 2e                	int    $0x2e
 8049038:	89 c2                	mov    %eax,%edx
 804903a:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8049040:	89 10                	mov    %edx,(%eax)
 8049042:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049045:	90                   	nop
 8049046:	c9                   	leave  
 8049047:	c3                   	ret    

08049048 <debug>:
 8049048:	55                   	push   %ebp
 8049049:	89 e5                	mov    %esp,%ebp
 804904b:	53                   	push   %ebx
 804904c:	83 ec 34             	sub    $0x34,%esp
 804904f:	e8 54 00 00 00       	call   80490a8 <__x86.get_pc_thunk.bx>
 8049054:	81 c3 ac 5f 00 00    	add    $0x5fac,%ebx
 804905a:	8b 45 08             	mov    0x8(%ebp),%eax
 804905d:	89 04 24             	mov    %eax,(%esp)
 8049060:	e8 b4 02 00 00       	call   8049319 <strlen>
 8049065:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8049068:	8b 45 08             	mov    0x8(%ebp),%eax
 804906b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804906e:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8049071:	c7 45 f4 29 23 00 00 	movl   $0x2329,-0xc(%ebp)
 8049078:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804907b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804907e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8049081:	cd 2e                	int    $0x2e
 8049083:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8049086:	b8 27 00 00 00       	mov    $0x27,%eax
 804908b:	cd 2e                	int    $0x2e
 804908d:	89 c2                	mov    %eax,%edx
 804908f:	8d 05 84 f2 04 08    	lea    0x804f284,%eax
 8049095:	89 10                	mov    %edx,(%eax)
 8049097:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804909a:	83 c4 34             	add    $0x34,%esp
 804909d:	5b                   	pop    %ebx
 804909e:	5d                   	pop    %ebp
 804909f:	c3                   	ret    

080490a0 <__x86.get_pc_thunk.ax>:
 80490a0:	8b 04 24             	mov    (%esp),%eax
 80490a3:	c3                   	ret    

080490a4 <__x86.get_pc_thunk.cx>:
 80490a4:	8b 0c 24             	mov    (%esp),%ecx
 80490a7:	c3                   	ret    

080490a8 <__x86.get_pc_thunk.bx>:
 80490a8:	8b 1c 24             	mov    (%esp),%ebx
 80490ab:	c3                   	ret    

080490ac <memcmp>:
 80490ac:	55                   	push   %ebp
 80490ad:	89 e5                	mov    %esp,%ebp
 80490af:	83 ec 10             	sub    $0x10,%esp
 80490b2:	e8 e9 ff ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 80490b7:	05 49 5f 00 00       	add    $0x5f49,%eax
 80490bc:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
 80490c0:	8b 45 08             	mov    0x8(%ebp),%eax
 80490c3:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80490c6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80490c9:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80490cc:	eb 22                	jmp    80490f0 <memcmp+0x44>
 80490ce:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80490d1:	0f b6 10             	movzbl (%eax),%edx
 80490d4:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80490d7:	0f b6 00             	movzbl (%eax),%eax
 80490da:	28 c2                	sub    %al,%dl
 80490dc:	88 d0                	mov    %dl,%al
 80490de:	88 45 f7             	mov    %al,-0x9(%ebp)
 80490e1:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)
 80490e5:	75 11                	jne    80490f8 <memcmp+0x4c>
 80490e7:	ff 45 fc             	incl   -0x4(%ebp)
 80490ea:	ff 45 f8             	incl   -0x8(%ebp)
 80490ed:	ff 4d 10             	decl   0x10(%ebp)
 80490f0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 80490f4:	75 d8                	jne    80490ce <memcmp+0x22>
 80490f6:	eb 01                	jmp    80490f9 <memcmp+0x4d>
 80490f8:	90                   	nop
 80490f9:	0f be 45 f7          	movsbl -0x9(%ebp),%eax
 80490fd:	c9                   	leave  
 80490fe:	c3                   	ret    

080490ff <memcpy>:
 80490ff:	55                   	push   %ebp
 8049100:	89 e5                	mov    %esp,%ebp
 8049102:	83 ec 10             	sub    $0x10,%esp
 8049105:	e8 96 ff ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804910a:	05 f6 5e 00 00       	add    $0x5ef6,%eax
 804910f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049112:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8049115:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049118:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804911b:	eb 17                	jmp    8049134 <memcpy+0x35>
 804911d:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049120:	8d 50 01             	lea    0x1(%eax),%edx
 8049123:	89 55 fc             	mov    %edx,-0x4(%ebp)
 8049126:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8049129:	8d 4a 01             	lea    0x1(%edx),%ecx
 804912c:	89 4d f8             	mov    %ecx,-0x8(%ebp)
 804912f:	0f b6 12             	movzbl (%edx),%edx
 8049132:	88 10                	mov    %dl,(%eax)
 8049134:	8b 45 10             	mov    0x10(%ebp),%eax
 8049137:	8d 50 ff             	lea    -0x1(%eax),%edx
 804913a:	89 55 10             	mov    %edx,0x10(%ebp)
 804913d:	85 c0                	test   %eax,%eax
 804913f:	75 dc                	jne    804911d <memcpy+0x1e>
 8049141:	8b 45 08             	mov    0x8(%ebp),%eax
 8049144:	c9                   	leave  
 8049145:	c3                   	ret    

08049146 <strncmp>:
 8049146:	55                   	push   %ebp
 8049147:	89 e5                	mov    %esp,%ebp
 8049149:	53                   	push   %ebx
 804914a:	e8 51 ff ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804914f:	05 b1 5e 00 00       	add    $0x5eb1,%eax
 8049154:	b3 00                	mov    $0x0,%bl
 8049156:	eb 31                	jmp    8049189 <strncmp+0x43>
 8049158:	8b 45 08             	mov    0x8(%ebp),%eax
 804915b:	0f b6 00             	movzbl (%eax),%eax
 804915e:	88 c1                	mov    %al,%cl
 8049160:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049163:	8d 50 01             	lea    0x1(%eax),%edx
 8049166:	89 55 0c             	mov    %edx,0xc(%ebp)
 8049169:	0f b6 00             	movzbl (%eax),%eax
 804916c:	28 c1                	sub    %al,%cl
 804916e:	88 c8                	mov    %cl,%al
 8049170:	88 c3                	mov    %al,%bl
 8049172:	84 db                	test   %bl,%bl
 8049174:	75 19                	jne    804918f <strncmp+0x49>
 8049176:	8b 45 08             	mov    0x8(%ebp),%eax
 8049179:	8d 50 01             	lea    0x1(%eax),%edx
 804917c:	89 55 08             	mov    %edx,0x8(%ebp)
 804917f:	0f b6 00             	movzbl (%eax),%eax
 8049182:	84 c0                	test   %al,%al
 8049184:	74 09                	je     804918f <strncmp+0x49>
 8049186:	ff 4d 10             	decl   0x10(%ebp)
 8049189:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 804918d:	75 c9                	jne    8049158 <strncmp+0x12>
 804918f:	0f be c3             	movsbl %bl,%eax
 8049192:	5b                   	pop    %ebx
 8049193:	5d                   	pop    %ebp
 8049194:	c3                   	ret    

08049195 <strcmp>:
 8049195:	55                   	push   %ebp
 8049196:	89 e5                	mov    %esp,%ebp
 8049198:	53                   	push   %ebx
 8049199:	e8 02 ff ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804919e:	05 62 5e 00 00       	add    $0x5e62,%eax
 80491a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80491a6:	0f b6 00             	movzbl (%eax),%eax
 80491a9:	88 c1                	mov    %al,%cl
 80491ab:	8b 45 0c             	mov    0xc(%ebp),%eax
 80491ae:	8d 50 01             	lea    0x1(%eax),%edx
 80491b1:	89 55 0c             	mov    %edx,0xc(%ebp)
 80491b4:	0f b6 00             	movzbl (%eax),%eax
 80491b7:	28 c1                	sub    %al,%cl
 80491b9:	88 c8                	mov    %cl,%al
 80491bb:	88 c3                	mov    %al,%bl
 80491bd:	84 db                	test   %bl,%bl
 80491bf:	75 12                	jne    80491d3 <strcmp+0x3e>
 80491c1:	8b 45 08             	mov    0x8(%ebp),%eax
 80491c4:	8d 50 01             	lea    0x1(%eax),%edx
 80491c7:	89 55 08             	mov    %edx,0x8(%ebp)
 80491ca:	0f b6 00             	movzbl (%eax),%eax
 80491cd:	84 c0                	test   %al,%al
 80491cf:	74 02                	je     80491d3 <strcmp+0x3e>
 80491d1:	eb d0                	jmp    80491a3 <strcmp+0xe>
 80491d3:	0f be c3             	movsbl %bl,%eax
 80491d6:	5b                   	pop    %ebx
 80491d7:	5d                   	pop    %ebp
 80491d8:	c3                   	ret    

080491d9 <strcpy>:
 80491d9:	55                   	push   %ebp
 80491da:	89 e5                	mov    %esp,%ebp
 80491dc:	83 ec 10             	sub    $0x10,%esp
 80491df:	e8 bc fe ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 80491e4:	05 1c 5e 00 00       	add    $0x5e1c,%eax
 80491e9:	8b 45 08             	mov    0x8(%ebp),%eax
 80491ec:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80491ef:	90                   	nop
 80491f0:	8b 45 08             	mov    0x8(%ebp),%eax
 80491f3:	8d 50 01             	lea    0x1(%eax),%edx
 80491f6:	89 55 08             	mov    %edx,0x8(%ebp)
 80491f9:	8b 55 0c             	mov    0xc(%ebp),%edx
 80491fc:	8d 4a 01             	lea    0x1(%edx),%ecx
 80491ff:	89 4d 0c             	mov    %ecx,0xc(%ebp)
 8049202:	0f b6 12             	movzbl (%edx),%edx
 8049205:	88 10                	mov    %dl,(%eax)
 8049207:	0f b6 00             	movzbl (%eax),%eax
 804920a:	84 c0                	test   %al,%al
 804920c:	75 e2                	jne    80491f0 <strcpy+0x17>
 804920e:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049211:	c9                   	leave  
 8049212:	c3                   	ret    

08049213 <strncpy>:
 8049213:	55                   	push   %ebp
 8049214:	89 e5                	mov    %esp,%ebp
 8049216:	83 ec 10             	sub    $0x10,%esp
 8049219:	e8 82 fe ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804921e:	05 e2 5d 00 00       	add    $0x5de2,%eax
 8049223:	8b 45 08             	mov    0x8(%ebp),%eax
 8049226:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8049229:	90                   	nop
 804922a:	8b 45 10             	mov    0x10(%ebp),%eax
 804922d:	8d 50 ff             	lea    -0x1(%eax),%edx
 8049230:	89 55 10             	mov    %edx,0x10(%ebp)
 8049233:	85 c0                	test   %eax,%eax
 8049235:	74 1e                	je     8049255 <strncpy+0x42>
 8049237:	8b 45 08             	mov    0x8(%ebp),%eax
 804923a:	8d 50 01             	lea    0x1(%eax),%edx
 804923d:	89 55 08             	mov    %edx,0x8(%ebp)
 8049240:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049243:	8d 4a 01             	lea    0x1(%edx),%ecx
 8049246:	89 4d 0c             	mov    %ecx,0xc(%ebp)
 8049249:	0f b6 12             	movzbl (%edx),%edx
 804924c:	88 10                	mov    %dl,(%eax)
 804924e:	0f b6 00             	movzbl (%eax),%eax
 8049251:	84 c0                	test   %al,%al
 8049253:	75 d5                	jne    804922a <strncpy+0x17>
 8049255:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049258:	c9                   	leave  
 8049259:	c3                   	ret    

0804925a <memset>:
 804925a:	55                   	push   %ebp
 804925b:	89 e5                	mov    %esp,%ebp
 804925d:	83 ec 10             	sub    $0x10,%esp
 8049260:	e8 3b fe ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 8049265:	05 9b 5d 00 00       	add    $0x5d9b,%eax
 804926a:	8b 45 08             	mov    0x8(%ebp),%eax
 804926d:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8049270:	eb 0e                	jmp    8049280 <memset+0x26>
 8049272:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049275:	8d 50 01             	lea    0x1(%eax),%edx
 8049278:	89 55 fc             	mov    %edx,-0x4(%ebp)
 804927b:	8b 55 0c             	mov    0xc(%ebp),%edx
 804927e:	88 10                	mov    %dl,(%eax)
 8049280:	8b 45 10             	mov    0x10(%ebp),%eax
 8049283:	8d 50 ff             	lea    -0x1(%eax),%edx
 8049286:	89 55 10             	mov    %edx,0x10(%ebp)
 8049289:	85 c0                	test   %eax,%eax
 804928b:	75 e5                	jne    8049272 <memset+0x18>
 804928d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049290:	c9                   	leave  
 8049291:	c3                   	ret    

08049292 <strnlen>:
 8049292:	55                   	push   %ebp
 8049293:	89 e5                	mov    %esp,%ebp
 8049295:	83 ec 10             	sub    $0x10,%esp
 8049298:	e8 03 fe ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804929d:	05 63 5d 00 00       	add    $0x5d63,%eax
 80492a2:	8b 45 08             	mov    0x8(%ebp),%eax
 80492a5:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80492a8:	eb 03                	jmp    80492ad <strnlen+0x1b>
 80492aa:	ff 45 fc             	incl   -0x4(%ebp)
 80492ad:	8b 45 0c             	mov    0xc(%ebp),%eax
 80492b0:	8d 50 ff             	lea    -0x1(%eax),%edx
 80492b3:	89 55 0c             	mov    %edx,0xc(%ebp)
 80492b6:	85 c0                	test   %eax,%eax
 80492b8:	74 0a                	je     80492c4 <strnlen+0x32>
 80492ba:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80492bd:	0f b6 00             	movzbl (%eax),%eax
 80492c0:	84 c0                	test   %al,%al
 80492c2:	75 e6                	jne    80492aa <strnlen+0x18>
 80492c4:	8b 55 fc             	mov    -0x4(%ebp),%edx
 80492c7:	8b 45 08             	mov    0x8(%ebp),%eax
 80492ca:	29 c2                	sub    %eax,%edx
 80492cc:	89 d0                	mov    %edx,%eax
 80492ce:	c9                   	leave  
 80492cf:	c3                   	ret    

080492d0 <strcat>:
 80492d0:	55                   	push   %ebp
 80492d1:	89 e5                	mov    %esp,%ebp
 80492d3:	83 ec 10             	sub    $0x10,%esp
 80492d6:	e8 c5 fd ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 80492db:	05 25 5d 00 00       	add    $0x5d25,%eax
 80492e0:	8b 45 08             	mov    0x8(%ebp),%eax
 80492e3:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80492e6:	eb 03                	jmp    80492eb <strcat+0x1b>
 80492e8:	ff 45 08             	incl   0x8(%ebp)
 80492eb:	8b 45 08             	mov    0x8(%ebp),%eax
 80492ee:	0f b6 00             	movzbl (%eax),%eax
 80492f1:	84 c0                	test   %al,%al
 80492f3:	75 f3                	jne    80492e8 <strcat+0x18>
 80492f5:	90                   	nop
 80492f6:	8b 45 08             	mov    0x8(%ebp),%eax
 80492f9:	8d 50 01             	lea    0x1(%eax),%edx
 80492fc:	89 55 08             	mov    %edx,0x8(%ebp)
 80492ff:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049302:	8d 4a 01             	lea    0x1(%edx),%ecx
 8049305:	89 4d 0c             	mov    %ecx,0xc(%ebp)
 8049308:	0f b6 12             	movzbl (%edx),%edx
 804930b:	88 10                	mov    %dl,(%eax)
 804930d:	0f b6 00             	movzbl (%eax),%eax
 8049310:	84 c0                	test   %al,%al
 8049312:	75 e2                	jne    80492f6 <strcat+0x26>
 8049314:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049317:	c9                   	leave  
 8049318:	c3                   	ret    

08049319 <strlen>:
 8049319:	55                   	push   %ebp
 804931a:	89 e5                	mov    %esp,%ebp
 804931c:	83 ec 10             	sub    $0x10,%esp
 804931f:	e8 7c fd ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 8049324:	05 dc 5c 00 00       	add    $0x5cdc,%eax
 8049329:	8b 45 08             	mov    0x8(%ebp),%eax
 804932c:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804932f:	eb 03                	jmp    8049334 <strlen+0x1b>
 8049331:	ff 45 fc             	incl   -0x4(%ebp)
 8049334:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049337:	0f b6 00             	movzbl (%eax),%eax
 804933a:	84 c0                	test   %al,%al
 804933c:	75 f3                	jne    8049331 <strlen+0x18>
 804933e:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8049341:	8b 45 08             	mov    0x8(%ebp),%eax
 8049344:	29 c2                	sub    %eax,%edx
 8049346:	89 d0                	mov    %edx,%eax
 8049348:	c9                   	leave  
 8049349:	c3                   	ret    

0804934a <strchr>:
 804934a:	55                   	push   %ebp
 804934b:	89 e5                	mov    %esp,%ebp
 804934d:	e8 4e fd ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 8049352:	05 ae 5c 00 00       	add    $0x5cae,%eax
 8049357:	eb 14                	jmp    804936d <strchr+0x23>
 8049359:	8b 45 08             	mov    0x8(%ebp),%eax
 804935c:	0f b6 00             	movzbl (%eax),%eax
 804935f:	84 c0                	test   %al,%al
 8049361:	75 07                	jne    804936a <strchr+0x20>
 8049363:	b8 00 00 00 00       	mov    $0x0,%eax
 8049368:	eb 13                	jmp    804937d <strchr+0x33>
 804936a:	ff 45 08             	incl   0x8(%ebp)
 804936d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049370:	0f b6 00             	movzbl (%eax),%eax
 8049373:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049376:	38 d0                	cmp    %dl,%al
 8049378:	75 df                	jne    8049359 <strchr+0xf>
 804937a:	8b 45 08             	mov    0x8(%ebp),%eax
 804937d:	5d                   	pop    %ebp
 804937e:	c3                   	ret    

0804937f <strrchr>:
 804937f:	55                   	push   %ebp
 8049380:	89 e5                	mov    %esp,%ebp
 8049382:	83 ec 10             	sub    $0x10,%esp
 8049385:	e8 16 fd ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804938a:	05 76 5c 00 00       	add    $0x5c76,%eax
 804938f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8049396:	eb 16                	jmp    80493ae <strrchr+0x2f>
 8049398:	8b 45 08             	mov    0x8(%ebp),%eax
 804939b:	0f b6 00             	movzbl (%eax),%eax
 804939e:	8b 55 0c             	mov    0xc(%ebp),%edx
 80493a1:	38 d0                	cmp    %dl,%al
 80493a3:	75 06                	jne    80493ab <strrchr+0x2c>
 80493a5:	8b 45 08             	mov    0x8(%ebp),%eax
 80493a8:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80493ab:	ff 45 08             	incl   0x8(%ebp)
 80493ae:	8b 45 08             	mov    0x8(%ebp),%eax
 80493b1:	0f b6 00             	movzbl (%eax),%eax
 80493b4:	84 c0                	test   %al,%al
 80493b6:	75 e0                	jne    8049398 <strrchr+0x19>
 80493b8:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80493bb:	c9                   	leave  
 80493bc:	c3                   	ret    

080493bd <strstr>:
 80493bd:	55                   	push   %ebp
 80493be:	89 e5                	mov    %esp,%ebp
 80493c0:	53                   	push   %ebx
 80493c1:	83 ec 24             	sub    $0x24,%esp
 80493c4:	e8 df fc ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 80493c9:	81 c3 37 5c 00 00    	add    $0x5c37,%ebx
 80493cf:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493d2:	89 04 24             	mov    %eax,(%esp)
 80493d5:	e8 3f ff ff ff       	call   8049319 <strlen>
 80493da:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80493dd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 80493e1:	75 05                	jne    80493e8 <strstr+0x2b>
 80493e3:	8b 45 08             	mov    0x8(%ebp),%eax
 80493e6:	eb 45                	jmp    804942d <strstr+0x70>
 80493e8:	8b 45 08             	mov    0x8(%ebp),%eax
 80493eb:	89 04 24             	mov    %eax,(%esp)
 80493ee:	e8 26 ff ff ff       	call   8049319 <strlen>
 80493f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80493f6:	eb 28                	jmp    8049420 <strstr+0x63>
 80493f8:	ff 4d f4             	decl   -0xc(%ebp)
 80493fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80493fe:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049402:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049405:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049409:	8b 45 08             	mov    0x8(%ebp),%eax
 804940c:	89 04 24             	mov    %eax,(%esp)
 804940f:	e8 98 fc ff ff       	call   80490ac <memcmp>
 8049414:	85 c0                	test   %eax,%eax
 8049416:	75 05                	jne    804941d <strstr+0x60>
 8049418:	8b 45 08             	mov    0x8(%ebp),%eax
 804941b:	eb 10                	jmp    804942d <strstr+0x70>
 804941d:	ff 45 08             	incl   0x8(%ebp)
 8049420:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049423:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 8049426:	7d d0                	jge    80493f8 <strstr+0x3b>
 8049428:	b8 00 00 00 00       	mov    $0x0,%eax
 804942d:	83 c4 24             	add    $0x24,%esp
 8049430:	5b                   	pop    %ebx
 8049431:	5d                   	pop    %ebp
 8049432:	c3                   	ret    

08049433 <strdup>:
 8049433:	55                   	push   %ebp
 8049434:	89 e5                	mov    %esp,%ebp
 8049436:	e8 65 fc ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804943b:	05 c5 5b 00 00       	add    $0x5bc5,%eax
 8049440:	b8 00 00 00 00       	mov    $0x0,%eax
 8049445:	5d                   	pop    %ebp
 8049446:	c3                   	ret    

08049447 <strpbrk>:
 8049447:	55                   	push   %ebp
 8049448:	89 e5                	mov    %esp,%ebp
 804944a:	83 ec 10             	sub    $0x10,%esp
 804944d:	e8 4e fc ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 8049452:	05 ae 5b 00 00       	add    $0x5bae,%eax
 8049457:	8b 45 0c             	mov    0xc(%ebp),%eax
 804945a:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804945d:	eb 03                	jmp    8049462 <strpbrk+0x1b>
 804945f:	ff 45 fc             	incl   -0x4(%ebp)
 8049462:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049465:	0f b6 00             	movzbl (%eax),%eax
 8049468:	84 c0                	test   %al,%al
 804946a:	74 10                	je     804947c <strpbrk+0x35>
 804946c:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804946f:	0f b6 10             	movzbl (%eax),%edx
 8049472:	8b 45 08             	mov    0x8(%ebp),%eax
 8049475:	0f b6 00             	movzbl (%eax),%eax
 8049478:	38 c2                	cmp    %al,%dl
 804947a:	75 e3                	jne    804945f <strpbrk+0x18>
 804947c:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804947f:	0f b6 00             	movzbl (%eax),%eax
 8049482:	84 c0                	test   %al,%al
 8049484:	74 05                	je     804948b <strpbrk+0x44>
 8049486:	8b 45 08             	mov    0x8(%ebp),%eax
 8049489:	eb 15                	jmp    80494a0 <strpbrk+0x59>
 804948b:	8b 45 08             	mov    0x8(%ebp),%eax
 804948e:	8d 50 01             	lea    0x1(%eax),%edx
 8049491:	89 55 08             	mov    %edx,0x8(%ebp)
 8049494:	0f b6 00             	movzbl (%eax),%eax
 8049497:	84 c0                	test   %al,%al
 8049499:	75 bc                	jne    8049457 <strpbrk+0x10>
 804949b:	b8 00 00 00 00       	mov    $0x0,%eax
 80494a0:	c9                   	leave  
 80494a1:	c3                   	ret    

080494a2 <strspn>:
 80494a2:	55                   	push   %ebp
 80494a3:	89 e5                	mov    %esp,%ebp
 80494a5:	83 ec 10             	sub    $0x10,%esp
 80494a8:	e8 f3 fb ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 80494ad:	05 53 5b 00 00       	add    $0x5b53,%eax
 80494b2:	8b 45 08             	mov    0x8(%ebp),%eax
 80494b5:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80494b8:	eb 32                	jmp    80494ec <strspn+0x4a>
 80494ba:	8b 45 0c             	mov    0xc(%ebp),%eax
 80494bd:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80494c0:	eb 03                	jmp    80494c5 <strspn+0x23>
 80494c2:	ff 45 fc             	incl   -0x4(%ebp)
 80494c5:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80494c8:	0f b6 00             	movzbl (%eax),%eax
 80494cb:	84 c0                	test   %al,%al
 80494cd:	74 10                	je     80494df <strspn+0x3d>
 80494cf:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80494d2:	0f b6 10             	movzbl (%eax),%edx
 80494d5:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80494d8:	0f b6 00             	movzbl (%eax),%eax
 80494db:	38 c2                	cmp    %al,%dl
 80494dd:	75 e3                	jne    80494c2 <strspn+0x20>
 80494df:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80494e2:	0f b6 00             	movzbl (%eax),%eax
 80494e5:	84 c0                	test   %al,%al
 80494e7:	74 0f                	je     80494f8 <strspn+0x56>
 80494e9:	ff 45 f8             	incl   -0x8(%ebp)
 80494ec:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80494ef:	0f b6 00             	movzbl (%eax),%eax
 80494f2:	84 c0                	test   %al,%al
 80494f4:	75 c4                	jne    80494ba <strspn+0x18>
 80494f6:	eb 01                	jmp    80494f9 <strspn+0x57>
 80494f8:	90                   	nop
 80494f9:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80494fc:	8b 45 08             	mov    0x8(%ebp),%eax
 80494ff:	29 c2                	sub    %eax,%edx
 8049501:	89 d0                	mov    %edx,%eax
 8049503:	c9                   	leave  
 8049504:	c3                   	ret    

08049505 <strtok>:
 8049505:	55                   	push   %ebp
 8049506:	89 e5                	mov    %esp,%ebp
 8049508:	53                   	push   %ebx
 8049509:	83 ec 24             	sub    $0x24,%esp
 804950c:	e8 97 fb ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 8049511:	81 c3 ef 5a 00 00    	add    $0x5aef,%ebx
 8049517:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804951b:	75 08                	jne    8049525 <strtok+0x20>
 804951d:	8b 83 24 02 00 00    	mov    0x224(%ebx),%eax
 8049523:	eb 03                	jmp    8049528 <strtok+0x23>
 8049525:	8b 45 08             	mov    0x8(%ebp),%eax
 8049528:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804952b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804952f:	75 07                	jne    8049538 <strtok+0x33>
 8049531:	b8 00 00 00 00       	mov    $0x0,%eax
 8049536:	eb 69                	jmp    80495a1 <strtok+0x9c>
 8049538:	8b 45 0c             	mov    0xc(%ebp),%eax
 804953b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804953f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049542:	89 04 24             	mov    %eax,(%esp)
 8049545:	e8 58 ff ff ff       	call   80494a2 <strspn>
 804954a:	89 c2                	mov    %eax,%edx
 804954c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804954f:	01 d0                	add    %edx,%eax
 8049551:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8049554:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049557:	0f b6 00             	movzbl (%eax),%eax
 804955a:	84 c0                	test   %al,%al
 804955c:	75 07                	jne    8049565 <strtok+0x60>
 804955e:	b8 00 00 00 00       	mov    $0x0,%eax
 8049563:	eb 3c                	jmp    80495a1 <strtok+0x9c>
 8049565:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049568:	89 44 24 04          	mov    %eax,0x4(%esp)
 804956c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804956f:	89 04 24             	mov    %eax,(%esp)
 8049572:	e8 d0 fe ff ff       	call   8049447 <strpbrk>
 8049577:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804957a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 804957e:	75 0c                	jne    804958c <strtok+0x87>
 8049580:	c7 83 24 02 00 00 00 	movl   $0x0,0x224(%ebx)
 8049587:	00 00 00 
 804958a:	eb 12                	jmp    804959e <strtok+0x99>
 804958c:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804958f:	c6 00 00             	movb   $0x0,(%eax)
 8049592:	ff 45 ec             	incl   -0x14(%ebp)
 8049595:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049598:	89 83 24 02 00 00    	mov    %eax,0x224(%ebx)
 804959e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80495a1:	83 c4 24             	add    $0x24,%esp
 80495a4:	5b                   	pop    %ebx
 80495a5:	5d                   	pop    %ebp
 80495a6:	c3                   	ret    

080495a7 <strerror>:
 80495a7:	55                   	push   %ebp
 80495a8:	89 e5                	mov    %esp,%ebp
 80495aa:	e8 f1 fa ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 80495af:	05 51 5a 00 00       	add    $0x5a51,%eax
 80495b4:	81 7d 08 83 00 00 00 	cmpl   $0x83,0x8(%ebp)
 80495bb:	0f 87 e8 04 00 00    	ja     8049aa9 <.L90>
 80495c1:	8b 55 08             	mov    0x8(%ebp),%edx
 80495c4:	c1 e2 02             	shl    $0x2,%edx
 80495c7:	8b 94 02 b8 eb ff ff 	mov    -0x1448(%edx,%eax,1),%edx
 80495ce:	01 c2                	add    %eax,%edx
 80495d0:	ff e2                	jmp    *%edx

080495d2 <.L91>:
 80495d2:	8d 80 fc e0 ff ff    	lea    -0x1f04(%eax),%eax
 80495d8:	e9 d1 04 00 00       	jmp    8049aae <.L90+0x5>

080495dd <.L93>:
 80495dd:	8d 80 0b e1 ff ff    	lea    -0x1ef5(%eax),%eax
 80495e3:	e9 c6 04 00 00       	jmp    8049aae <.L90+0x5>

080495e8 <.L94>:
 80495e8:	8d 80 25 e1 ff ff    	lea    -0x1edb(%eax),%eax
 80495ee:	e9 bb 04 00 00       	jmp    8049aae <.L90+0x5>

080495f3 <.L95>:
 80495f3:	8d 80 35 e1 ff ff    	lea    -0x1ecb(%eax),%eax
 80495f9:	e9 b0 04 00 00       	jmp    8049aae <.L90+0x5>

080495fe <.L96>:
 80495fe:	8d 80 4d e1 ff ff    	lea    -0x1eb3(%eax),%eax
 8049604:	e9 a5 04 00 00       	jmp    8049aae <.L90+0x5>

08049609 <.L97>:
 8049609:	8d 80 57 e1 ff ff    	lea    -0x1ea9(%eax),%eax
 804960f:	e9 9a 04 00 00       	jmp    8049aae <.L90+0x5>

08049614 <.L98>:
 8049614:	8d 80 71 e1 ff ff    	lea    -0x1e8f(%eax),%eax
 804961a:	e9 8f 04 00 00       	jmp    8049aae <.L90+0x5>

0804961f <.L99>:
 804961f:	8d 80 83 e1 ff ff    	lea    -0x1e7d(%eax),%eax
 8049625:	e9 84 04 00 00       	jmp    8049aae <.L90+0x5>

0804962a <.L100>:
 804962a:	8d 80 95 e1 ff ff    	lea    -0x1e6b(%eax),%eax
 8049630:	e9 79 04 00 00       	jmp    8049aae <.L90+0x5>

08049635 <.L101>:
 8049635:	8d 80 a5 e1 ff ff    	lea    -0x1e5b(%eax),%eax
 804963b:	e9 6e 04 00 00       	jmp    8049aae <.L90+0x5>

08049640 <.L102>:
 8049640:	8d 80 b4 e1 ff ff    	lea    -0x1e4c(%eax),%eax
 8049646:	e9 63 04 00 00       	jmp    8049aae <.L90+0x5>

0804964b <.L103>:
 804964b:	8d 80 d5 e1 ff ff    	lea    -0x1e2b(%eax),%eax
 8049651:	e9 58 04 00 00       	jmp    8049aae <.L90+0x5>

08049656 <.L104>:
 8049656:	8d 80 e5 e1 ff ff    	lea    -0x1e1b(%eax),%eax
 804965c:	e9 4d 04 00 00       	jmp    8049aae <.L90+0x5>

08049661 <.L105>:
 8049661:	8d 80 f7 e1 ff ff    	lea    -0x1e09(%eax),%eax
 8049667:	e9 42 04 00 00       	jmp    8049aae <.L90+0x5>

0804966c <.L106>:
 804966c:	8d 80 03 e2 ff ff    	lea    -0x1dfd(%eax),%eax
 8049672:	e9 37 04 00 00       	jmp    8049aae <.L90+0x5>

08049677 <.L107>:
 8049677:	8d 80 19 e2 ff ff    	lea    -0x1de7(%eax),%eax
 804967d:	e9 2c 04 00 00       	jmp    8049aae <.L90+0x5>

08049682 <.L108>:
 8049682:	8d 80 2b e2 ff ff    	lea    -0x1dd5(%eax),%eax
 8049688:	e9 21 04 00 00       	jmp    8049aae <.L90+0x5>

0804968d <.L109>:
 804968d:	8d 80 37 e2 ff ff    	lea    -0x1dc9(%eax),%eax
 8049693:	e9 16 04 00 00       	jmp    8049aae <.L90+0x5>

08049698 <.L110>:
 8049698:	8d 80 49 e2 ff ff    	lea    -0x1db7(%eax),%eax
 804969e:	e9 0b 04 00 00       	jmp    8049aae <.L90+0x5>

080496a3 <.L111>:
 80496a3:	8d 80 58 e2 ff ff    	lea    -0x1da8(%eax),%eax
 80496a9:	e9 00 04 00 00       	jmp    8049aae <.L90+0x5>

080496ae <.L112>:
 80496ae:	8d 80 68 e2 ff ff    	lea    -0x1d98(%eax),%eax
 80496b4:	e9 f5 03 00 00       	jmp    8049aae <.L90+0x5>

080496b9 <.L113>:
 80496b9:	8d 80 77 e2 ff ff    	lea    -0x1d89(%eax),%eax
 80496bf:	e9 ea 03 00 00       	jmp    8049aae <.L90+0x5>

080496c4 <.L114>:
 80496c4:	8d 80 88 e2 ff ff    	lea    -0x1d78(%eax),%eax
 80496ca:	e9 df 03 00 00       	jmp    8049aae <.L90+0x5>

080496cf <.L115>:
 80496cf:	8d 80 9c e2 ff ff    	lea    -0x1d64(%eax),%eax
 80496d5:	e9 d4 03 00 00       	jmp    8049aae <.L90+0x5>

080496da <.L116>:
 80496da:	8d 80 b0 e2 ff ff    	lea    -0x1d50(%eax),%eax
 80496e0:	e9 c9 03 00 00       	jmp    8049aae <.L90+0x5>

080496e5 <.L117>:
 80496e5:	8d 80 cf e2 ff ff    	lea    -0x1d31(%eax),%eax
 80496eb:	e9 be 03 00 00       	jmp    8049aae <.L90+0x5>

080496f0 <.L118>:
 80496f0:	8d 80 de e2 ff ff    	lea    -0x1d22(%eax),%eax
 80496f6:	e9 b3 03 00 00       	jmp    8049aae <.L90+0x5>

080496fb <.L119>:
 80496fb:	8d 80 ed e2 ff ff    	lea    -0x1d13(%eax),%eax
 8049701:	e9 a8 03 00 00       	jmp    8049aae <.L90+0x5>

08049706 <.L120>:
 8049706:	8d 80 05 e3 ff ff    	lea    -0x1cfb(%eax),%eax
 804970c:	e9 9d 03 00 00       	jmp    8049aae <.L90+0x5>

08049711 <.L121>:
 8049711:	8d 80 12 e3 ff ff    	lea    -0x1cee(%eax),%eax
 8049717:	e9 92 03 00 00       	jmp    8049aae <.L90+0x5>

0804971c <.L122>:
 804971c:	8d 80 28 e3 ff ff    	lea    -0x1cd8(%eax),%eax
 8049722:	e9 87 03 00 00       	jmp    8049aae <.L90+0x5>

08049727 <.L123>:
 8049727:	8d 80 37 e3 ff ff    	lea    -0x1cc9(%eax),%eax
 804972d:	e9 7c 03 00 00       	jmp    8049aae <.L90+0x5>

08049732 <.L124>:
 8049732:	8d 80 44 e3 ff ff    	lea    -0x1cbc(%eax),%eax
 8049738:	e9 71 03 00 00       	jmp    8049aae <.L90+0x5>

0804973d <.L125>:
 804973d:	8d 80 63 e3 ff ff    	lea    -0x1c9d(%eax),%eax
 8049743:	e9 66 03 00 00       	jmp    8049aae <.L90+0x5>

08049748 <.L132>:
 8049748:	8d 80 81 e3 ff ff    	lea    -0x1c7f(%eax),%eax
 804974e:	e9 5b 03 00 00       	jmp    8049aae <.L90+0x5>

08049753 <.L133>:
 8049753:	8d 80 9c e3 ff ff    	lea    -0x1c64(%eax),%eax
 8049759:	e9 50 03 00 00       	jmp    8049aae <.L90+0x5>

0804975e <.L134>:
 804975e:	8d 80 af e3 ff ff    	lea    -0x1c51(%eax),%eax
 8049764:	e9 45 03 00 00       	jmp    8049aae <.L90+0x5>

08049769 <.L135>:
 8049769:	8d 80 cb e3 ff ff    	lea    -0x1c35(%eax),%eax
 804976f:	e9 3a 03 00 00       	jmp    8049aae <.L90+0x5>

08049774 <.L136>:
 8049774:	8d 80 e4 e3 ff ff    	lea    -0x1c1c(%eax),%eax
 804977a:	e9 2f 03 00 00       	jmp    8049aae <.L90+0x5>

0804977f <.L137>:
 804977f:	8d 80 f3 e3 ff ff    	lea    -0x1c0d(%eax),%eax
 8049785:	e9 24 03 00 00       	jmp    8049aae <.L90+0x5>

0804978a <.L138>:
 804978a:	8d 80 01 e4 ff ff    	lea    -0x1bff(%eax),%eax
 8049790:	e9 19 03 00 00       	jmp    8049aae <.L90+0x5>

08049795 <.L139>:
 8049795:	8d 80 1a e4 ff ff    	lea    -0x1be6(%eax),%eax
 804979b:	e9 0e 03 00 00       	jmp    8049aae <.L90+0x5>

080497a0 <.L140>:
 80497a0:	8d 80 37 e4 ff ff    	lea    -0x1bc9(%eax),%eax
 80497a6:	e9 03 03 00 00       	jmp    8049aae <.L90+0x5>

080497ab <.L141>:
 80497ab:	8d 80 52 e4 ff ff    	lea    -0x1bae(%eax),%eax
 80497b1:	e9 f8 02 00 00       	jmp    8049aae <.L90+0x5>

080497b6 <.L126>:
 80497b6:	8d 80 61 e4 ff ff    	lea    -0x1b9f(%eax),%eax
 80497bc:	e9 ed 02 00 00       	jmp    8049aae <.L90+0x5>

080497c1 <.L128>:
 80497c1:	8d 80 75 e4 ff ff    	lea    -0x1b8b(%eax),%eax
 80497c7:	e9 e2 02 00 00       	jmp    8049aae <.L90+0x5>

080497cc <.L206>:
 80497cc:	8d 80 90 e4 ff ff    	lea    -0x1b70(%eax),%eax
 80497d2:	e9 d7 02 00 00       	jmp    8049aae <.L90+0x5>

080497d7 <.L183>:
 80497d7:	8d 80 a3 e4 ff ff    	lea    -0x1b5d(%eax),%eax
 80497dd:	e9 cc 02 00 00       	jmp    8049aae <.L90+0x5>

080497e2 <.L205>:
 80497e2:	8d 80 bb e4 ff ff    	lea    -0x1b45(%eax),%eax
 80497e8:	e9 c1 02 00 00       	jmp    8049aae <.L90+0x5>

080497ed <.L142>:
 80497ed:	8d 80 cf e4 ff ff    	lea    -0x1b31(%eax),%eax
 80497f3:	e9 b6 02 00 00       	jmp    8049aae <.L90+0x5>

080497f8 <.L143>:
 80497f8:	8d 80 e0 e4 ff ff    	lea    -0x1b20(%eax),%eax
 80497fe:	e9 ab 02 00 00       	jmp    8049aae <.L90+0x5>

08049803 <.L144>:
 8049803:	8d 80 fb e4 ff ff    	lea    -0x1b05(%eax),%eax
 8049809:	e9 a0 02 00 00       	jmp    8049aae <.L90+0x5>

0804980e <.L145>:
 804980e:	8d 80 09 e5 ff ff    	lea    -0x1af7(%eax),%eax
 8049814:	e9 95 02 00 00       	jmp    8049aae <.L90+0x5>

08049819 <.L146>:
 8049819:	8d 80 12 e5 ff ff    	lea    -0x1aee(%eax),%eax
 804981f:	e9 8a 02 00 00       	jmp    8049aae <.L90+0x5>

08049824 <.L147>:
 8049824:	8d 80 27 e5 ff ff    	lea    -0x1ad9(%eax),%eax
 804982a:	e9 7f 02 00 00       	jmp    8049aae <.L90+0x5>

0804982f <.L148>:
 804982f:	8d 80 34 e5 ff ff    	lea    -0x1acc(%eax),%eax
 8049835:	e9 74 02 00 00       	jmp    8049aae <.L90+0x5>

0804983a <.L207>:
 804983a:	8d 80 46 e5 ff ff    	lea    -0x1aba(%eax),%eax
 8049840:	e9 69 02 00 00       	jmp    8049aae <.L90+0x5>

08049845 <.L208>:
 8049845:	8d 80 61 e5 ff ff    	lea    -0x1a9f(%eax),%eax
 804984b:	e9 5e 02 00 00       	jmp    8049aae <.L90+0x5>

08049850 <.L149>:
 8049850:	8d 80 79 e5 ff ff    	lea    -0x1a87(%eax),%eax
 8049856:	e9 53 02 00 00       	jmp    8049aae <.L90+0x5>

0804985b <.L150>:
 804985b:	8d 80 8d e5 ff ff    	lea    -0x1a73(%eax),%eax
 8049861:	e9 48 02 00 00       	jmp    8049aae <.L90+0x5>

08049866 <.L151>:
 8049866:	8d 80 a7 e5 ff ff    	lea    -0x1a59(%eax),%eax
 804986c:	e9 3d 02 00 00       	jmp    8049aae <.L90+0x5>

08049871 <.L152>:
 8049871:	8d 80 b5 e5 ff ff    	lea    -0x1a4b(%eax),%eax
 8049877:	e9 32 02 00 00       	jmp    8049aae <.L90+0x5>

0804987c <.L153>:
 804987c:	8d 80 ce e5 ff ff    	lea    -0x1a32(%eax),%eax
 8049882:	e9 27 02 00 00       	jmp    8049aae <.L90+0x5>

08049887 <.L154>:
 8049887:	8d 80 ec e5 ff ff    	lea    -0x1a14(%eax),%eax
 804988d:	e9 1c 02 00 00       	jmp    8049aae <.L90+0x5>

08049892 <.L155>:
 8049892:	8d 80 02 e6 ff ff    	lea    -0x19fe(%eax),%eax
 8049898:	e9 11 02 00 00       	jmp    8049aae <.L90+0x5>

0804989d <.L156>:
 804989d:	8d 80 17 e6 ff ff    	lea    -0x19e9(%eax),%eax
 80498a3:	e9 06 02 00 00       	jmp    8049aae <.L90+0x5>

080498a8 <.L157>:
 80498a8:	8d 80 31 e6 ff ff    	lea    -0x19cf(%eax),%eax
 80498ae:	e9 fb 01 00 00       	jmp    8049aae <.L90+0x5>

080498b3 <.L158>:
 80498b3:	8d 80 41 e6 ff ff    	lea    -0x19bf(%eax),%eax
 80498b9:	e9 f0 01 00 00       	jmp    8049aae <.L90+0x5>

080498be <.L159>:
 80498be:	8d 80 4f e6 ff ff    	lea    -0x19b1(%eax),%eax
 80498c4:	e9 e5 01 00 00       	jmp    8049aae <.L90+0x5>

080498c9 <.L160>:
 80498c9:	8d 80 6b e6 ff ff    	lea    -0x1995(%eax),%eax
 80498cf:	e9 da 01 00 00       	jmp    8049aae <.L90+0x5>

080498d4 <.L161>:
 80498d4:	8d 80 7a e6 ff ff    	lea    -0x1986(%eax),%eax
 80498da:	e9 cf 01 00 00       	jmp    8049aae <.L90+0x5>

080498df <.L162>:
 80498df:	8d 80 90 e6 ff ff    	lea    -0x1970(%eax),%eax
 80498e5:	e9 c4 01 00 00       	jmp    8049aae <.L90+0x5>

080498ea <.L127>:
 80498ea:	8d 80 b2 e6 ff ff    	lea    -0x194e(%eax),%eax
 80498f0:	e9 b9 01 00 00       	jmp    8049aae <.L90+0x5>

080498f5 <.L163>:
 80498f5:	8d 80 c8 e6 ff ff    	lea    -0x1938(%eax),%eax
 80498fb:	e9 ae 01 00 00       	jmp    8049aae <.L90+0x5>

08049900 <.L164>:
 8049900:	8d 80 f2 e6 ff ff    	lea    -0x190e(%eax),%eax
 8049906:	e9 a3 01 00 00       	jmp    8049aae <.L90+0x5>

0804990b <.L165>:
 804990b:	8d 80 10 e7 ff ff    	lea    -0x18f0(%eax),%eax
 8049911:	e9 98 01 00 00       	jmp    8049aae <.L90+0x5>

08049916 <.L166>:
 8049916:	8d 80 30 e7 ff ff    	lea    -0x18d0(%eax),%eax
 804991c:	e9 8d 01 00 00       	jmp    8049aae <.L90+0x5>

08049921 <.L167>:
 8049921:	8d 80 48 e7 ff ff    	lea    -0x18b8(%eax),%eax
 8049927:	e9 82 01 00 00       	jmp    8049aae <.L90+0x5>

0804992c <.L168>:
 804992c:	8d 80 6c e7 ff ff    	lea    -0x1894(%eax),%eax
 8049932:	e9 77 01 00 00       	jmp    8049aae <.L90+0x5>

08049937 <.L169>:
 8049937:	8d 80 90 e7 ff ff    	lea    -0x1870(%eax),%eax
 804993d:	e9 6c 01 00 00       	jmp    8049aae <.L90+0x5>

08049942 <.L170>:
 8049942:	8d 80 b4 e7 ff ff    	lea    -0x184c(%eax),%eax
 8049948:	e9 61 01 00 00       	jmp    8049aae <.L90+0x5>

0804994d <.L171>:
 804994d:	8d 80 dc e7 ff ff    	lea    -0x1824(%eax),%eax
 8049953:	e9 56 01 00 00       	jmp    8049aae <.L90+0x5>

08049958 <.L172>:
 8049958:	8d 80 01 e8 ff ff    	lea    -0x17ff(%eax),%eax
 804995e:	e9 4b 01 00 00       	jmp    8049aae <.L90+0x5>

08049963 <.L129>:
 8049963:	8d 80 18 e8 ff ff    	lea    -0x17e8(%eax),%eax
 8049969:	e9 40 01 00 00       	jmp    8049aae <.L90+0x5>

0804996e <.L131>:
 804996e:	8d 80 3a e8 ff ff    	lea    -0x17c6(%eax),%eax
 8049974:	e9 35 01 00 00       	jmp    8049aae <.L90+0x5>

08049979 <.L173>:
 8049979:	8d 80 4d e8 ff ff    	lea    -0x17b3(%eax),%eax
 804997f:	e9 2a 01 00 00       	jmp    8049aae <.L90+0x5>

08049984 <.L174>:
 8049984:	8d 80 68 e8 ff ff    	lea    -0x1798(%eax),%eax
 804998a:	e9 1f 01 00 00       	jmp    8049aae <.L90+0x5>

0804998f <.L130>:
 804998f:	8d 80 91 e8 ff ff    	lea    -0x176f(%eax),%eax
 8049995:	e9 14 01 00 00       	jmp    8049aae <.L90+0x5>

0804999a <.L175>:
 804999a:	8d 80 a5 e8 ff ff    	lea    -0x175b(%eax),%eax
 80499a0:	e9 09 01 00 00       	jmp    8049aae <.L90+0x5>

080499a5 <.L176>:
 80499a5:	8d 80 c0 e8 ff ff    	lea    -0x1740(%eax),%eax
 80499ab:	e9 fe 00 00 00       	jmp    8049aae <.L90+0x5>

080499b0 <.L177>:
 80499b0:	8d 80 df e8 ff ff    	lea    -0x1721(%eax),%eax
 80499b6:	e9 f3 00 00 00       	jmp    8049aae <.L90+0x5>

080499bb <.L178>:
 80499bb:	8d 80 fc e8 ff ff    	lea    -0x1704(%eax),%eax
 80499c1:	e9 e8 00 00 00       	jmp    8049aae <.L90+0x5>

080499c6 <.L179>:
 80499c6:	8d 80 10 e9 ff ff    	lea    -0x16f0(%eax),%eax
 80499cc:	e9 dd 00 00 00       	jmp    8049aae <.L90+0x5>

080499d1 <.L180>:
 80499d1:	8d 80 2f e9 ff ff    	lea    -0x16d1(%eax),%eax
 80499d7:	e9 d2 00 00 00       	jmp    8049aae <.L90+0x5>

080499dc <.L181>:
 80499dc:	8d 80 46 e9 ff ff    	lea    -0x16ba(%eax),%eax
 80499e2:	e9 c7 00 00 00       	jmp    8049aae <.L90+0x5>

080499e7 <.L182>:
 80499e7:	8d 80 5d e9 ff ff    	lea    -0x16a3(%eax),%eax
 80499ed:	e9 bc 00 00 00       	jmp    8049aae <.L90+0x5>

080499f2 <.L184>:
 80499f2:	8d 80 77 e9 ff ff    	lea    -0x1689(%eax),%eax
 80499f8:	e9 b1 00 00 00       	jmp    8049aae <.L90+0x5>

080499fd <.L185>:
 80499fd:	8d 80 98 e9 ff ff    	lea    -0x1668(%eax),%eax
 8049a03:	e9 a6 00 00 00       	jmp    8049aae <.L90+0x5>

08049a08 <.L186>:
 8049a08:	8d 80 c8 e9 ff ff    	lea    -0x1638(%eax),%eax
 8049a0e:	e9 9b 00 00 00       	jmp    8049aae <.L90+0x5>

08049a13 <.L187>:
 8049a13:	8d 80 e0 e9 ff ff    	lea    -0x1620(%eax),%eax
 8049a19:	e9 90 00 00 00       	jmp    8049aae <.L90+0x5>

08049a1e <.L188>:
 8049a1e:	8d 80 ff e9 ff ff    	lea    -0x1601(%eax),%eax
 8049a24:	e9 85 00 00 00       	jmp    8049aae <.L90+0x5>

08049a29 <.L189>:
 8049a29:	8d 80 0f ea ff ff    	lea    -0x15f1(%eax),%eax
 8049a2f:	eb 7d                	jmp    8049aae <.L90+0x5>

08049a31 <.L190>:
 8049a31:	8d 80 28 ea ff ff    	lea    -0x15d8(%eax),%eax
 8049a37:	eb 75                	jmp    8049aae <.L90+0x5>

08049a39 <.L191>:
 8049a39:	8d 80 54 ea ff ff    	lea    -0x15ac(%eax),%eax
 8049a3f:	eb 6d                	jmp    8049aae <.L90+0x5>

08049a41 <.L192>:
 8049a41:	8d 80 75 ea ff ff    	lea    -0x158b(%eax),%eax
 8049a47:	eb 65                	jmp    8049aae <.L90+0x5>

08049a49 <.L193>:
 8049a49:	8d 80 8e ea ff ff    	lea    -0x1572(%eax),%eax
 8049a4f:	eb 5d                	jmp    8049aae <.L90+0x5>

08049a51 <.L194>:
 8049a51:	8d 80 a8 ea ff ff    	lea    -0x1558(%eax),%eax
 8049a57:	eb 55                	jmp    8049aae <.L90+0x5>

08049a59 <.L195>:
 8049a59:	8d 80 c4 ea ff ff    	lea    -0x153c(%eax),%eax
 8049a5f:	eb 4d                	jmp    8049aae <.L90+0x5>

08049a61 <.L196>:
 8049a61:	8d 80 dc ea ff ff    	lea    -0x1524(%eax),%eax
 8049a67:	eb 45                	jmp    8049aae <.L90+0x5>

08049a69 <.L197>:
 8049a69:	8d 80 00 eb ff ff    	lea    -0x1500(%eax),%eax
 8049a6f:	eb 3d                	jmp    8049aae <.L90+0x5>

08049a71 <.L198>:
 8049a71:	8d 80 22 eb ff ff    	lea    -0x14de(%eax),%eax
 8049a77:	eb 35                	jmp    8049aae <.L90+0x5>

08049a79 <.L199>:
 8049a79:	8d 80 37 eb ff ff    	lea    -0x14c9(%eax),%eax
 8049a7f:	eb 2d                	jmp    8049aae <.L90+0x5>

08049a81 <.L200>:
 8049a81:	8d 80 4a eb ff ff    	lea    -0x14b6(%eax),%eax
 8049a87:	eb 25                	jmp    8049aae <.L90+0x5>

08049a89 <.L201>:
 8049a89:	8d 80 57 eb ff ff    	lea    -0x14a9(%eax),%eax
 8049a8f:	eb 1d                	jmp    8049aae <.L90+0x5>

08049a91 <.L202>:
 8049a91:	8d 80 68 eb ff ff    	lea    -0x1498(%eax),%eax
 8049a97:	eb 15                	jmp    8049aae <.L90+0x5>

08049a99 <.L203>:
 8049a99:	8d 80 86 eb ff ff    	lea    -0x147a(%eax),%eax
 8049a9f:	eb 0d                	jmp    8049aae <.L90+0x5>

08049aa1 <.L204>:
 8049aa1:	8d 80 a0 eb ff ff    	lea    -0x1460(%eax),%eax
 8049aa7:	eb 05                	jmp    8049aae <.L90+0x5>

08049aa9 <.L90>:
 8049aa9:	b8 00 00 00 00       	mov    $0x0,%eax
 8049aae:	5d                   	pop    %ebp
 8049aaf:	c3                   	ret    

08049ab0 <wrterror>:
 8049ab0:	55                   	push   %ebp
 8049ab1:	89 e5                	mov    %esp,%ebp
 8049ab3:	53                   	push   %ebx
 8049ab4:	83 ec 24             	sub    $0x24,%esp
 8049ab7:	e8 ec f5 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 8049abc:	81 c3 44 55 00 00    	add    $0x5544,%ebx
 8049ac2:	8d 83 c9 ed ff ff    	lea    -0x1237(%ebx),%eax
 8049ac8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049acb:	8b 83 28 00 00 00    	mov    0x28(%ebx),%eax
 8049ad1:	89 04 24             	mov    %eax,(%esp)
 8049ad4:	e8 40 f8 ff ff       	call   8049319 <strlen>
 8049ad9:	89 c2                	mov    %eax,%edx
 8049adb:	8b 83 28 00 00 00    	mov    0x28(%ebx),%eax
 8049ae1:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049ae5:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049ae9:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049af0:	e8 2c ee ff ff       	call   8048921 <write>
 8049af5:	8b 83 80 02 00 00    	mov    0x280(%ebx),%eax
 8049afb:	89 04 24             	mov    %eax,(%esp)
 8049afe:	e8 16 f8 ff ff       	call   8049319 <strlen>
 8049b03:	89 c2                	mov    %eax,%edx
 8049b05:	8b 83 80 02 00 00    	mov    0x280(%ebx),%eax
 8049b0b:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049b0f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049b13:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049b1a:	e8 02 ee ff ff       	call   8048921 <write>
 8049b1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049b22:	89 04 24             	mov    %eax,(%esp)
 8049b25:	e8 ef f7 ff ff       	call   8049319 <strlen>
 8049b2a:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049b2e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049b31:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049b35:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049b3c:	e8 e0 ed ff ff       	call   8048921 <write>
 8049b41:	8b 45 08             	mov    0x8(%ebp),%eax
 8049b44:	89 04 24             	mov    %eax,(%esp)
 8049b47:	e8 cd f7 ff ff       	call   8049319 <strlen>
 8049b4c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049b50:	8b 45 08             	mov    0x8(%ebp),%eax
 8049b53:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049b57:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049b5e:	e8 be ed ff ff       	call   8048921 <write>
 8049b63:	c7 83 5c 02 00 00 01 	movl   $0x1,0x25c(%ebx)
 8049b6a:	00 00 00 
 8049b6d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049b74:	e8 c4 e9 ff ff       	call   804853d <exit>
 8049b79:	90                   	nop
 8049b7a:	83 c4 24             	add    $0x24,%esp
 8049b7d:	5b                   	pop    %ebx
 8049b7e:	5d                   	pop    %ebp
 8049b7f:	c3                   	ret    

08049b80 <wrtwarning>:
 8049b80:	55                   	push   %ebp
 8049b81:	89 e5                	mov    %esp,%ebp
 8049b83:	53                   	push   %ebx
 8049b84:	83 ec 24             	sub    $0x24,%esp
 8049b87:	e8 1c f5 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 8049b8c:	81 c3 74 54 00 00    	add    $0x5474,%ebx
 8049b92:	8d 83 d2 ed ff ff    	lea    -0x122e(%ebx),%eax
 8049b98:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049b9b:	8b 83 58 02 00 00    	mov    0x258(%ebx),%eax
 8049ba1:	85 c0                	test   %eax,%eax
 8049ba3:	74 0b                	je     8049bb0 <wrtwarning+0x30>
 8049ba5:	8b 45 08             	mov    0x8(%ebp),%eax
 8049ba8:	89 04 24             	mov    %eax,(%esp)
 8049bab:	e8 00 ff ff ff       	call   8049ab0 <wrterror>
 8049bb0:	8b 83 28 00 00 00    	mov    0x28(%ebx),%eax
 8049bb6:	89 04 24             	mov    %eax,(%esp)
 8049bb9:	e8 5b f7 ff ff       	call   8049319 <strlen>
 8049bbe:	89 c2                	mov    %eax,%edx
 8049bc0:	8b 83 28 00 00 00    	mov    0x28(%ebx),%eax
 8049bc6:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049bca:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049bce:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049bd5:	e8 47 ed ff ff       	call   8048921 <write>
 8049bda:	8b 83 80 02 00 00    	mov    0x280(%ebx),%eax
 8049be0:	89 04 24             	mov    %eax,(%esp)
 8049be3:	e8 31 f7 ff ff       	call   8049319 <strlen>
 8049be8:	89 c2                	mov    %eax,%edx
 8049bea:	8b 83 80 02 00 00    	mov    0x280(%ebx),%eax
 8049bf0:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049bf4:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049bf8:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049bff:	e8 1d ed ff ff       	call   8048921 <write>
 8049c04:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049c07:	89 04 24             	mov    %eax,(%esp)
 8049c0a:	e8 0a f7 ff ff       	call   8049319 <strlen>
 8049c0f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049c13:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049c16:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049c1a:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049c21:	e8 fb ec ff ff       	call   8048921 <write>
 8049c26:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c29:	89 04 24             	mov    %eax,(%esp)
 8049c2c:	e8 e8 f6 ff ff       	call   8049319 <strlen>
 8049c31:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049c35:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c38:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049c3c:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049c43:	e8 d9 ec ff ff       	call   8048921 <write>
 8049c48:	90                   	nop
 8049c49:	83 c4 24             	add    $0x24,%esp
 8049c4c:	5b                   	pop    %ebx
 8049c4d:	5d                   	pop    %ebp
 8049c4e:	c3                   	ret    

08049c4f <map_pages>:
 8049c4f:	55                   	push   %ebp
 8049c50:	89 e5                	mov    %esp,%ebp
 8049c52:	53                   	push   %ebx
 8049c53:	83 ec 24             	sub    $0x24,%esp
 8049c56:	e8 4d f4 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 8049c5b:	81 c3 a5 53 00 00    	add    $0x53a5,%ebx
 8049c61:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049c68:	e8 e1 e6 ff ff       	call   804834e <sbrk>
 8049c6d:	05 ff 0f 00 00       	add    $0xfff,%eax
 8049c72:	25 00 f0 ff ff       	and    $0xfffff000,%eax
 8049c77:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049c7a:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c7d:	c1 e0 0c             	shl    $0xc,%eax
 8049c80:	89 c2                	mov    %eax,%edx
 8049c82:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049c85:	01 d0                	add    %edx,%eax
 8049c87:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8049c8a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049c8d:	89 04 24             	mov    %eax,(%esp)
 8049c90:	e8 82 e7 ff ff       	call   8048417 <brk>
 8049c95:	85 c0                	test   %eax,%eax
 8049c97:	74 07                	je     8049ca0 <map_pages+0x51>
 8049c99:	b8 00 00 00 00       	mov    $0x0,%eax
 8049c9e:	eb 51                	jmp    8049cf1 <map_pages+0xa2>
 8049ca0:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049ca3:	c1 e8 0c             	shr    $0xc,%eax
 8049ca6:	89 c2                	mov    %eax,%edx
 8049ca8:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
 8049cae:	29 c2                	sub    %eax,%edx
 8049cb0:	89 d0                	mov    %edx,%eax
 8049cb2:	48                   	dec    %eax
 8049cb3:	89 83 38 02 00 00    	mov    %eax,0x238(%ebx)
 8049cb9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049cbc:	89 83 78 02 00 00    	mov    %eax,0x278(%ebx)
 8049cc2:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
 8049cc8:	8d 50 01             	lea    0x1(%eax),%edx
 8049ccb:	8b 83 40 02 00 00    	mov    0x240(%ebx),%eax
 8049cd1:	39 c2                	cmp    %eax,%edx
 8049cd3:	72 19                	jb     8049cee <map_pages+0x9f>
 8049cd5:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
 8049cdb:	89 04 24             	mov    %eax,(%esp)
 8049cde:	e8 14 00 00 00       	call   8049cf7 <extend_pgdir>
 8049ce3:	85 c0                	test   %eax,%eax
 8049ce5:	75 07                	jne    8049cee <map_pages+0x9f>
 8049ce7:	b8 00 00 00 00       	mov    $0x0,%eax
 8049cec:	eb 03                	jmp    8049cf1 <map_pages+0xa2>
 8049cee:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049cf1:	83 c4 24             	add    $0x24,%esp
 8049cf4:	5b                   	pop    %ebx
 8049cf5:	5d                   	pop    %ebp
 8049cf6:	c3                   	ret    

08049cf7 <extend_pgdir>:
 8049cf7:	55                   	push   %ebp
 8049cf8:	89 e5                	mov    %esp,%ebp
 8049cfa:	53                   	push   %ebx
 8049cfb:	83 ec 34             	sub    $0x34,%esp
 8049cfe:	e8 a5 f3 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 8049d03:	81 c3 fd 52 00 00    	add    $0x52fd,%ebx
 8049d09:	8b 45 08             	mov    0x8(%ebp),%eax
 8049d0c:	c1 e0 02             	shl    $0x2,%eax
 8049d0f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049d12:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049d15:	c1 e8 0c             	shr    $0xc,%eax
 8049d18:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049d1b:	83 45 f4 02          	addl   $0x2,-0xc(%ebp)
 8049d1f:	8b 83 40 02 00 00    	mov    0x240(%ebx),%eax
 8049d25:	c1 e0 02             	shl    $0x2,%eax
 8049d28:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8049d2b:	8b 83 28 02 00 00    	mov    0x228(%ebx),%eax
 8049d31:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049d34:	c1 e2 0c             	shl    $0xc,%edx
 8049d37:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049d3e:	00 
 8049d3f:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049d43:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)
 8049d4a:	00 
 8049d4b:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 8049d52:	00 
 8049d53:	89 54 24 04          	mov    %edx,0x4(%esp)
 8049d57:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049d5e:	e8 cc e9 ff ff       	call   804872f <mmap>
 8049d63:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8049d66:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
 8049d6a:	75 07                	jne    8049d73 <extend_pgdir+0x7c>
 8049d6c:	b8 00 00 00 00       	mov    $0x0,%eax
 8049d71:	eb 5e                	jmp    8049dd1 <extend_pgdir+0xda>
 8049d73:	8b 83 40 02 00 00    	mov    0x240(%ebx),%eax
 8049d79:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8049d80:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 8049d86:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049d8a:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049d8e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049d91:	89 04 24             	mov    %eax,(%esp)
 8049d94:	e8 66 f3 ff ff       	call   80490ff <memcpy>
 8049d99:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049d9c:	c1 e0 0c             	shl    $0xc,%eax
 8049d9f:	c1 e8 02             	shr    $0x2,%eax
 8049da2:	89 83 40 02 00 00    	mov    %eax,0x240(%ebx)
 8049da8:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 8049dae:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8049db1:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049db4:	89 83 3c 02 00 00    	mov    %eax,0x23c(%ebx)
 8049dba:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049dbd:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049dc1:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8049dc4:	89 04 24             	mov    %eax,(%esp)
 8049dc7:	e8 c6 e9 ff ff       	call   8048792 <munmap>
 8049dcc:	b8 01 00 00 00       	mov    $0x1,%eax
 8049dd1:	83 c4 34             	add    $0x34,%esp
 8049dd4:	5b                   	pop    %ebx
 8049dd5:	5d                   	pop    %ebp
 8049dd6:	c3                   	ret    

08049dd7 <malloc_init>:
 8049dd7:	55                   	push   %ebp
 8049dd8:	89 e5                	mov    %esp,%ebp
 8049dda:	53                   	push   %ebx
 8049ddb:	83 ec 34             	sub    $0x34,%esp
 8049dde:	e8 c5 f2 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 8049de3:	81 c3 1d 52 00 00    	add    $0x521d,%ebx
 8049de9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8049df0:	00 
 8049df1:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
 8049df8:	00 
 8049df9:	8d 83 dd ed ff ff    	lea    -0x1223(%ebx),%eax
 8049dff:	89 04 24             	mov    %eax,(%esp)
 8049e02:	e8 14 ea ff ff       	call   804881b <open>
 8049e07:	89 83 28 02 00 00    	mov    %eax,0x228(%ebx)
 8049e0d:	8b 83 28 02 00 00    	mov    0x228(%ebx),%eax
 8049e13:	83 f8 ff             	cmp    $0xffffffff,%eax
 8049e16:	75 0e                	jne    8049e26 <malloc_init+0x4f>
 8049e18:	8d 83 e7 ed ff ff    	lea    -0x1219(%ebx),%eax
 8049e1e:	89 04 24             	mov    %eax,(%esp)
 8049e21:	e8 8a fc ff ff       	call   8049ab0 <wrterror>
 8049e26:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8049e2d:	e9 7c 01 00 00       	jmp    8049fae <.L18+0x45>
 8049e32:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 8049e36:	75 0c                	jne    8049e44 <malloc_init+0x6d>
 8049e38:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049e3f:	e9 53 01 00 00       	jmp    8049f97 <.L18+0x2e>
 8049e44:	83 7d f0 01          	cmpl   $0x1,-0x10(%ebp)
 8049e48:	75 0c                	jne    8049e56 <malloc_init+0x7f>
 8049e4a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049e51:	e9 41 01 00 00       	jmp    8049f97 <.L18+0x2e>
 8049e56:	8d 05 88 f2 04 08    	lea    0x804f288,%eax
 8049e5c:	8b 00                	mov    (%eax),%eax
 8049e5e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049e61:	e9 31 01 00 00       	jmp    8049f97 <.L18+0x2e>
 8049e66:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049e69:	0f b6 00             	movzbl (%eax),%eax
 8049e6c:	0f be c0             	movsbl %al,%eax
 8049e6f:	83 e8 3c             	sub    $0x3c,%eax
 8049e72:	83 f8 3e             	cmp    $0x3e,%eax
 8049e75:	0f 87 ee 00 00 00    	ja     8049f69 <.L18>
 8049e7b:	c1 e0 02             	shl    $0x2,%eax
 8049e7e:	8b 84 18 3c ee ff ff 	mov    -0x11c4(%eax,%ebx,1),%eax
 8049e85:	01 d8                	add    %ebx,%eax
 8049e87:	ff e0                	jmp    *%eax

08049e89 <.L21>:
 8049e89:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 8049e8f:	01 c0                	add    %eax,%eax
 8049e91:	89 83 24 00 00 00    	mov    %eax,0x24(%ebx)
 8049e97:	e9 f8 00 00 00       	jmp    8049f94 <.L18+0x2b>

08049e9c <.L19>:
 8049e9c:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 8049ea2:	d1 e8                	shr    %eax
 8049ea4:	89 83 24 00 00 00    	mov    %eax,0x24(%ebx)
 8049eaa:	e9 e5 00 00 00       	jmp    8049f94 <.L18+0x2b>

08049eaf <.L29>:
 8049eaf:	c7 83 58 02 00 00 00 	movl   $0x0,0x258(%ebx)
 8049eb6:	00 00 00 
 8049eb9:	e9 d6 00 00 00       	jmp    8049f94 <.L18+0x2b>

08049ebe <.L22>:
 8049ebe:	c7 83 58 02 00 00 01 	movl   $0x1,0x258(%ebx)
 8049ec5:	00 00 00 
 8049ec8:	e9 c7 00 00 00       	jmp    8049f94 <.L18+0x2b>

08049ecd <.L30>:
 8049ecd:	c7 83 64 02 00 00 00 	movl   $0x0,0x264(%ebx)
 8049ed4:	00 00 00 
 8049ed7:	e9 b8 00 00 00       	jmp    8049f94 <.L18+0x2b>

08049edc <.L23>:
 8049edc:	c7 83 64 02 00 00 01 	movl   $0x1,0x264(%ebx)
 8049ee3:	00 00 00 
 8049ee6:	e9 a9 00 00 00       	jmp    8049f94 <.L18+0x2b>

08049eeb <.L32>:
 8049eeb:	c7 83 60 02 00 00 00 	movl   $0x0,0x260(%ebx)
 8049ef2:	00 00 00 
 8049ef5:	e9 9a 00 00 00       	jmp    8049f94 <.L18+0x2b>

08049efa <.L25>:
 8049efa:	c7 83 60 02 00 00 01 	movl   $0x1,0x260(%ebx)
 8049f01:	00 00 00 
 8049f04:	e9 8b 00 00 00       	jmp    8049f94 <.L18+0x2b>

08049f09 <.L31>:
 8049f09:	c7 83 74 02 00 00 00 	movl   $0x0,0x274(%ebx)
 8049f10:	00 00 00 
 8049f13:	eb 7f                	jmp    8049f94 <.L18+0x2b>

08049f15 <.L24>:
 8049f15:	c7 83 74 02 00 00 01 	movl   $0x1,0x274(%ebx)
 8049f1c:	00 00 00 
 8049f1f:	eb 73                	jmp    8049f94 <.L18+0x2b>

08049f21 <.L33>:
 8049f21:	c7 83 6c 02 00 00 00 	movl   $0x0,0x26c(%ebx)
 8049f28:	00 00 00 
 8049f2b:	eb 67                	jmp    8049f94 <.L18+0x2b>

08049f2d <.L26>:
 8049f2d:	c7 83 6c 02 00 00 01 	movl   $0x1,0x26c(%ebx)
 8049f34:	00 00 00 
 8049f37:	eb 5b                	jmp    8049f94 <.L18+0x2b>

08049f39 <.L34>:
 8049f39:	c7 83 68 02 00 00 00 	movl   $0x0,0x268(%ebx)
 8049f40:	00 00 00 
 8049f43:	eb 4f                	jmp    8049f94 <.L18+0x2b>

08049f45 <.L27>:
 8049f45:	c7 83 68 02 00 00 01 	movl   $0x1,0x268(%ebx)
 8049f4c:	00 00 00 
 8049f4f:	eb 43                	jmp    8049f94 <.L18+0x2b>

08049f51 <.L35>:
 8049f51:	c7 83 70 02 00 00 00 	movl   $0x0,0x270(%ebx)
 8049f58:	00 00 00 
 8049f5b:	eb 37                	jmp    8049f94 <.L18+0x2b>

08049f5d <.L28>:
 8049f5d:	c7 83 70 02 00 00 01 	movl   $0x1,0x270(%ebx)
 8049f64:	00 00 00 
 8049f67:	eb 2b                	jmp    8049f94 <.L18+0x2b>

08049f69 <.L18>:
 8049f69:	8b 83 58 02 00 00    	mov    0x258(%ebx),%eax
 8049f6f:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8049f72:	c7 83 58 02 00 00 00 	movl   $0x0,0x258(%ebx)
 8049f79:	00 00 00 
 8049f7c:	8d 83 fc ed ff ff    	lea    -0x1204(%ebx),%eax
 8049f82:	89 04 24             	mov    %eax,(%esp)
 8049f85:	e8 f6 fb ff ff       	call   8049b80 <wrtwarning>
 8049f8a:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049f8d:	89 83 58 02 00 00    	mov    %eax,0x258(%ebx)
 8049f93:	90                   	nop
 8049f94:	ff 45 f4             	incl   -0xc(%ebp)
 8049f97:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 8049f9b:	74 0e                	je     8049fab <.L18+0x42>
 8049f9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049fa0:	0f b6 00             	movzbl (%eax),%eax
 8049fa3:	84 c0                	test   %al,%al
 8049fa5:	0f 85 bb fe ff ff    	jne    8049e66 <malloc_init+0x8f>
 8049fab:	ff 45 f0             	incl   -0x10(%ebp)
 8049fae:	83 7d f0 02          	cmpl   $0x2,-0x10(%ebp)
 8049fb2:	0f 8e 7a fe ff ff    	jle    8049e32 <malloc_init+0x5b>
 8049fb8:	8b 83 70 02 00 00    	mov    0x270(%ebx),%eax
 8049fbe:	85 c0                	test   %eax,%eax
 8049fc0:	74 0a                	je     8049fcc <.L18+0x63>
 8049fc2:	c7 83 74 02 00 00 01 	movl   $0x1,0x274(%ebx)
 8049fc9:	00 00 00 
 8049fcc:	8b 83 74 02 00 00    	mov    0x274(%ebx),%eax
 8049fd2:	85 c0                	test   %eax,%eax
 8049fd4:	74 0a                	je     8049fe0 <.L18+0x77>
 8049fd6:	c7 83 60 02 00 00 01 	movl   $0x1,0x260(%ebx)
 8049fdd:	00 00 00 
 8049fe0:	8b 83 28 02 00 00    	mov    0x228(%ebx),%eax
 8049fe6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049fed:	00 
 8049fee:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049ff2:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)
 8049ff9:	00 
 8049ffa:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 804a001:	00 
 804a002:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)
 804a009:	00 
 804a00a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804a011:	e8 19 e7 ff ff       	call   804872f <mmap>
 804a016:	89 83 3c 02 00 00    	mov    %eax,0x23c(%ebx)
 804a01c:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a022:	83 f8 ff             	cmp    $0xffffffff,%eax
 804a025:	75 0e                	jne    804a035 <.L18+0xcc>
 804a027:	8d 83 1c ee ff ff    	lea    -0x11e4(%ebx),%eax
 804a02d:	89 04 24             	mov    %eax,(%esp)
 804a030:	e8 7b fa ff ff       	call   8049ab0 <wrterror>
 804a035:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804a03c:	e8 0d e3 ff ff       	call   804834e <sbrk>
 804a041:	05 ff 0f 00 00       	add    $0xfff,%eax
 804a046:	c1 e8 0c             	shr    $0xc,%eax
 804a049:	89 83 34 02 00 00    	mov    %eax,0x234(%ebx)
 804a04f:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
 804a055:	83 e8 0c             	sub    $0xc,%eax
 804a058:	89 83 34 02 00 00    	mov    %eax,0x234(%ebx)
 804a05e:	c7 83 40 02 00 00 00 	movl   $0x400,0x240(%ebx)
 804a065:	04 00 00 
 804a068:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 804a06e:	85 c0                	test   %eax,%eax
 804a070:	75 0d                	jne    804a07f <.L18+0x116>
 804a072:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 804a078:	40                   	inc    %eax
 804a079:	89 83 24 00 00 00    	mov    %eax,0x24(%ebx)
 804a07f:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 804a085:	c1 e0 0c             	shl    $0xc,%eax
 804a088:	89 83 24 00 00 00    	mov    %eax,0x24(%ebx)
 804a08e:	c7 04 24 14 00 00 00 	movl   $0x14,(%esp)
 804a095:	e8 5d 07 00 00       	call   804a7f7 <imalloc>
 804a09a:	89 83 7c 02 00 00    	mov    %eax,0x27c(%ebx)
 804a0a0:	8b 83 2c 02 00 00    	mov    0x22c(%ebx),%eax
 804a0a6:	40                   	inc    %eax
 804a0a7:	89 83 2c 02 00 00    	mov    %eax,0x22c(%ebx)
 804a0ad:	90                   	nop
 804a0ae:	83 c4 34             	add    $0x34,%esp
 804a0b1:	5b                   	pop    %ebx
 804a0b2:	5d                   	pop    %ebp
 804a0b3:	c3                   	ret    

0804a0b4 <malloc_pages>:
 804a0b4:	55                   	push   %ebp
 804a0b5:	89 e5                	mov    %esp,%ebp
 804a0b7:	53                   	push   %ebx
 804a0b8:	83 ec 34             	sub    $0x34,%esp
 804a0bb:	e8 e8 ef ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804a0c0:	81 c3 40 4f 00 00    	add    $0x4f40,%ebx
 804a0c6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804a0cd:	8b 45 08             	mov    0x8(%ebp),%eax
 804a0d0:	05 ff 0f 00 00       	add    $0xfff,%eax
 804a0d5:	25 00 f0 ff ff       	and    $0xfffff000,%eax
 804a0da:	89 45 08             	mov    %eax,0x8(%ebp)
 804a0dd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804a0e4:	8b 83 44 02 00 00    	mov    0x244(%ebx),%eax
 804a0ea:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a0ed:	e9 82 00 00 00       	jmp    804a174 <malloc_pages+0xc0>
 804a0f2:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a0f5:	8b 40 10             	mov    0x10(%eax),%eax
 804a0f8:	3b 45 08             	cmp    0x8(%ebp),%eax
 804a0fb:	73 0a                	jae    804a107 <malloc_pages+0x53>
 804a0fd:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a100:	8b 00                	mov    (%eax),%eax
 804a102:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a105:	eb 6d                	jmp    804a174 <malloc_pages+0xc0>
 804a107:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a10a:	8b 40 10             	mov    0x10(%eax),%eax
 804a10d:	3b 45 08             	cmp    0x8(%ebp),%eax
 804a110:	75 35                	jne    804a147 <malloc_pages+0x93>
 804a112:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a115:	8b 40 08             	mov    0x8(%eax),%eax
 804a118:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a11b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a11e:	8b 00                	mov    (%eax),%eax
 804a120:	85 c0                	test   %eax,%eax
 804a122:	74 0e                	je     804a132 <malloc_pages+0x7e>
 804a124:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a127:	8b 00                	mov    (%eax),%eax
 804a129:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804a12c:	8b 52 04             	mov    0x4(%edx),%edx
 804a12f:	89 50 04             	mov    %edx,0x4(%eax)
 804a132:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a135:	8b 40 04             	mov    0x4(%eax),%eax
 804a138:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804a13b:	8b 12                	mov    (%edx),%edx
 804a13d:	89 10                	mov    %edx,(%eax)
 804a13f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a142:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a145:	eb 37                	jmp    804a17e <malloc_pages+0xca>
 804a147:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a14a:	8b 40 08             	mov    0x8(%eax),%eax
 804a14d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a150:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a153:	8b 50 08             	mov    0x8(%eax),%edx
 804a156:	8b 45 08             	mov    0x8(%ebp),%eax
 804a159:	01 c2                	add    %eax,%edx
 804a15b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a15e:	89 50 08             	mov    %edx,0x8(%eax)
 804a161:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a164:	8b 40 10             	mov    0x10(%eax),%eax
 804a167:	2b 45 08             	sub    0x8(%ebp),%eax
 804a16a:	89 c2                	mov    %eax,%edx
 804a16c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a16f:	89 50 10             	mov    %edx,0x10(%eax)
 804a172:	eb 0a                	jmp    804a17e <malloc_pages+0xca>
 804a174:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 804a178:	0f 85 74 ff ff ff    	jne    804a0f2 <malloc_pages+0x3e>
 804a17e:	c1 6d 08 0c          	shrl   $0xc,0x8(%ebp)
 804a182:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a186:	75 0e                	jne    804a196 <malloc_pages+0xe2>
 804a188:	8b 45 08             	mov    0x8(%ebp),%eax
 804a18b:	89 04 24             	mov    %eax,(%esp)
 804a18e:	e8 bc fa ff ff       	call   8049c4f <map_pages>
 804a193:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a196:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a19a:	74 7d                	je     804a219 <malloc_pages+0x165>
 804a19c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a19f:	c1 e8 0c             	shr    $0xc,%eax
 804a1a2:	89 c2                	mov    %eax,%edx
 804a1a4:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
 804a1aa:	29 c2                	sub    %eax,%edx
 804a1ac:	89 d0                	mov    %edx,%eax
 804a1ae:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804a1b1:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a1b7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804a1ba:	c1 e2 02             	shl    $0x2,%edx
 804a1bd:	01 d0                	add    %edx,%eax
 804a1bf:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
 804a1c5:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 804a1cc:	eb 1c                	jmp    804a1ea <malloc_pages+0x136>
 804a1ce:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a1d4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 804a1d7:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a1da:	01 ca                	add    %ecx,%edx
 804a1dc:	c1 e2 02             	shl    $0x2,%edx
 804a1df:	01 d0                	add    %edx,%eax
 804a1e1:	c7 00 03 00 00 00    	movl   $0x3,(%eax)
 804a1e7:	ff 45 ec             	incl   -0x14(%ebp)
 804a1ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804a1ed:	3b 45 08             	cmp    0x8(%ebp),%eax
 804a1f0:	72 dc                	jb     804a1ce <malloc_pages+0x11a>
 804a1f2:	8b 83 74 02 00 00    	mov    0x274(%ebx),%eax
 804a1f8:	85 c0                	test   %eax,%eax
 804a1fa:	74 1d                	je     804a219 <malloc_pages+0x165>
 804a1fc:	8b 45 08             	mov    0x8(%ebp),%eax
 804a1ff:	c1 e0 0c             	shl    $0xc,%eax
 804a202:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a206:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)
 804a20d:	00 
 804a20e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a211:	89 04 24             	mov    %eax,(%esp)
 804a214:	e8 41 f0 ff ff       	call   804925a <memset>
 804a219:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 804a21d:	74 20                	je     804a23f <malloc_pages+0x18b>
 804a21f:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804a225:	85 c0                	test   %eax,%eax
 804a227:	75 0b                	jne    804a234 <malloc_pages+0x180>
 804a229:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a22c:	89 83 7c 02 00 00    	mov    %eax,0x27c(%ebx)
 804a232:	eb 0b                	jmp    804a23f <malloc_pages+0x18b>
 804a234:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a237:	89 04 24             	mov    %eax,(%esp)
 804a23a:	e8 d7 0e 00 00       	call   804b116 <ifree>
 804a23f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a242:	83 c4 34             	add    $0x34,%esp
 804a245:	5b                   	pop    %ebx
 804a246:	5d                   	pop    %ebp
 804a247:	c3                   	ret    

0804a248 <malloc_make_chunks>:
 804a248:	55                   	push   %ebp
 804a249:	89 e5                	mov    %esp,%ebp
 804a24b:	56                   	push   %esi
 804a24c:	53                   	push   %ebx
 804a24d:	83 ec 30             	sub    $0x30,%esp
 804a250:	e8 53 ee ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804a255:	81 c3 ab 4d 00 00    	add    $0x4dab,%ebx
 804a25b:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)
 804a262:	e8 4d fe ff ff       	call   804a0b4 <malloc_pages>
 804a267:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a26a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 804a26e:	75 0a                	jne    804a27a <malloc_make_chunks+0x32>
 804a270:	b8 00 00 00 00       	mov    $0x0,%eax
 804a275:	e9 f4 01 00 00       	jmp    804a46e <malloc_make_chunks+0x226>
 804a27a:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)
 804a281:	8b 45 08             	mov    0x8(%ebp),%eax
 804a284:	ba 00 10 00 00       	mov    $0x1000,%edx
 804a289:	88 c1                	mov    %al,%cl
 804a28b:	d3 ea                	shr    %cl,%edx
 804a28d:	89 d0                	mov    %edx,%eax
 804a28f:	83 c0 1f             	add    $0x1f,%eax
 804a292:	c1 e8 05             	shr    $0x5,%eax
 804a295:	c1 e0 02             	shl    $0x2,%eax
 804a298:	01 45 ec             	add    %eax,-0x14(%ebp)
 804a29b:	8b 45 08             	mov    0x8(%ebp),%eax
 804a29e:	ba 01 00 00 00       	mov    $0x1,%edx
 804a2a3:	88 c1                	mov    %al,%cl
 804a2a5:	d3 e2                	shl    %cl,%edx
 804a2a7:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804a2aa:	01 c0                	add    %eax,%eax
 804a2ac:	39 c2                	cmp    %eax,%edx
 804a2ae:	77 08                	ja     804a2b8 <malloc_make_chunks+0x70>
 804a2b0:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a2b3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a2b6:	eb 29                	jmp    804a2e1 <malloc_make_chunks+0x99>
 804a2b8:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804a2bb:	89 04 24             	mov    %eax,(%esp)
 804a2be:	e8 34 05 00 00       	call   804a7f7 <imalloc>
 804a2c3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a2c6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a2ca:	75 15                	jne    804a2e1 <malloc_make_chunks+0x99>
 804a2cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a2cf:	89 04 24             	mov    %eax,(%esp)
 804a2d2:	e8 3f 0e 00 00       	call   804b116 <ifree>
 804a2d7:	b8 00 00 00 00       	mov    $0x0,%eax
 804a2dc:	e9 8d 01 00 00       	jmp    804a46e <malloc_make_chunks+0x226>
 804a2e1:	8b 45 08             	mov    0x8(%ebp),%eax
 804a2e4:	ba 01 00 00 00       	mov    $0x1,%edx
 804a2e9:	88 c1                	mov    %al,%cl
 804a2eb:	d3 e2                	shl    %cl,%edx
 804a2ed:	89 d0                	mov    %edx,%eax
 804a2ef:	0f b7 d0             	movzwl %ax,%edx
 804a2f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a2f5:	66 89 50 08          	mov    %dx,0x8(%eax)
 804a2f9:	8b 45 08             	mov    0x8(%ebp),%eax
 804a2fc:	0f b7 d0             	movzwl %ax,%edx
 804a2ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a302:	66 89 50 0a          	mov    %dx,0xa(%eax)
 804a306:	8b 45 08             	mov    0x8(%ebp),%eax
 804a309:	ba 00 10 00 00       	mov    $0x1000,%edx
 804a30e:	88 c1                	mov    %al,%cl
 804a310:	d3 ea                	shr    %cl,%edx
 804a312:	89 d0                	mov    %edx,%eax
 804a314:	0f b7 d0             	movzwl %ax,%edx
 804a317:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a31a:	66 89 50 0c          	mov    %dx,0xc(%eax)
 804a31e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a321:	0f b7 50 0c          	movzwl 0xc(%eax),%edx
 804a325:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a328:	66 89 50 0e          	mov    %dx,0xe(%eax)
 804a32c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a32f:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804a332:	89 50 04             	mov    %edx,0x4(%eax)
 804a335:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a338:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
 804a33c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804a33f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804a346:	eb 19                	jmp    804a361 <malloc_make_chunks+0x119>
 804a348:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a34b:	c1 e8 05             	shr    $0x5,%eax
 804a34e:	89 c2                	mov    %eax,%edx
 804a350:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a353:	83 c2 04             	add    $0x4,%edx
 804a356:	c7 04 90 ff ff ff ff 	movl   $0xffffffff,(%eax,%edx,4)
 804a35d:	83 45 f0 20          	addl   $0x20,-0x10(%ebp)
 804a361:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a364:	2b 45 f0             	sub    -0x10(%ebp),%eax
 804a367:	83 f8 1f             	cmp    $0x1f,%eax
 804a36a:	77 dc                	ja     804a348 <malloc_make_chunks+0x100>
 804a36c:	eb 2c                	jmp    804a39a <malloc_make_chunks+0x152>
 804a36e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a371:	c1 e8 05             	shr    $0x5,%eax
 804a374:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a377:	8d 48 04             	lea    0x4(%eax),%ecx
 804a37a:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
 804a37d:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804a380:	83 e1 1f             	and    $0x1f,%ecx
 804a383:	be 01 00 00 00       	mov    $0x1,%esi
 804a388:	d3 e6                	shl    %cl,%esi
 804a38a:	89 f1                	mov    %esi,%ecx
 804a38c:	09 d1                	or     %edx,%ecx
 804a38e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a391:	83 c0 04             	add    $0x4,%eax
 804a394:	89 0c 82             	mov    %ecx,(%edx,%eax,4)
 804a397:	ff 45 f0             	incl   -0x10(%ebp)
 804a39a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a39d:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 804a3a0:	72 cc                	jb     804a36e <malloc_make_chunks+0x126>
 804a3a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a3a5:	8b 40 04             	mov    0x4(%eax),%eax
 804a3a8:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804a3ab:	75 72                	jne    804a41f <malloc_make_chunks+0x1d7>
 804a3ad:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804a3b4:	eb 63                	jmp    804a419 <malloc_make_chunks+0x1d1>
 804a3b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a3b9:	c1 e8 05             	shr    $0x5,%eax
 804a3bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a3bf:	8d 48 04             	lea    0x4(%eax),%ecx
 804a3c2:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
 804a3c5:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804a3c8:	83 e1 1f             	and    $0x1f,%ecx
 804a3cb:	be 01 00 00 00       	mov    $0x1,%esi
 804a3d0:	d3 e6                	shl    %cl,%esi
 804a3d2:	89 f1                	mov    %esi,%ecx
 804a3d4:	f7 d1                	not    %ecx
 804a3d6:	21 d1                	and    %edx,%ecx
 804a3d8:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a3db:	83 c0 04             	add    $0x4,%eax
 804a3de:	89 0c 82             	mov    %ecx,(%edx,%eax,4)
 804a3e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a3e4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
 804a3e8:	48                   	dec    %eax
 804a3e9:	0f b7 d0             	movzwl %ax,%edx
 804a3ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a3ef:	66 89 50 0c          	mov    %dx,0xc(%eax)
 804a3f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a3f6:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
 804a3fa:	48                   	dec    %eax
 804a3fb:	0f b7 d0             	movzwl %ax,%edx
 804a3fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a401:	66 89 50 0e          	mov    %dx,0xe(%eax)
 804a405:	8b 45 08             	mov    0x8(%ebp),%eax
 804a408:	ba 01 00 00 00       	mov    $0x1,%edx
 804a40d:	88 c1                	mov    %al,%cl
 804a40f:	d3 e2                	shl    %cl,%edx
 804a411:	89 d0                	mov    %edx,%eax
 804a413:	29 45 ec             	sub    %eax,-0x14(%ebp)
 804a416:	ff 45 f0             	incl   -0x10(%ebp)
 804a419:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 804a41d:	75 97                	jne    804a3b6 <malloc_make_chunks+0x16e>
 804a41f:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a425:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804a428:	89 d1                	mov    %edx,%ecx
 804a42a:	c1 e9 0c             	shr    $0xc,%ecx
 804a42d:	8b 93 34 02 00 00    	mov    0x234(%ebx),%edx
 804a433:	29 d1                	sub    %edx,%ecx
 804a435:	89 ca                	mov    %ecx,%edx
 804a437:	c1 e2 02             	shl    $0x2,%edx
 804a43a:	01 c2                	add    %eax,%edx
 804a43c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a43f:	89 02                	mov    %eax,(%edx)
 804a441:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a447:	8b 55 08             	mov    0x8(%ebp),%edx
 804a44a:	c1 e2 02             	shl    $0x2,%edx
 804a44d:	01 d0                	add    %edx,%eax
 804a44f:	8b 10                	mov    (%eax),%edx
 804a451:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a454:	89 10                	mov    %edx,(%eax)
 804a456:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a45c:	8b 55 08             	mov    0x8(%ebp),%edx
 804a45f:	c1 e2 02             	shl    $0x2,%edx
 804a462:	01 c2                	add    %eax,%edx
 804a464:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a467:	89 02                	mov    %eax,(%edx)
 804a469:	b8 01 00 00 00       	mov    $0x1,%eax
 804a46e:	83 c4 30             	add    $0x30,%esp
 804a471:	5b                   	pop    %ebx
 804a472:	5e                   	pop    %esi
 804a473:	5d                   	pop    %ebp
 804a474:	c3                   	ret    

0804a475 <malloc_bytes>:
 804a475:	55                   	push   %ebp
 804a476:	89 e5                	mov    %esp,%ebp
 804a478:	56                   	push   %esi
 804a479:	53                   	push   %ebx
 804a47a:	83 ec 40             	sub    $0x40,%esp
 804a47d:	e8 26 ec ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804a482:	81 c3 7e 4b 00 00    	add    $0x4b7e,%ebx
 804a488:	83 7d 08 0f          	cmpl   $0xf,0x8(%ebp)
 804a48c:	77 07                	ja     804a495 <malloc_bytes+0x20>
 804a48e:	c7 45 08 10 00 00 00 	movl   $0x10,0x8(%ebp)
 804a495:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 804a49c:	8b 45 08             	mov    0x8(%ebp),%eax
 804a49f:	48                   	dec    %eax
 804a4a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a4a3:	eb 03                	jmp    804a4a8 <malloc_bytes+0x33>
 804a4a5:	ff 45 f0             	incl   -0x10(%ebp)
 804a4a8:	d1 7d f4             	sarl   -0xc(%ebp)
 804a4ab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a4af:	75 f4                	jne    804a4a5 <malloc_bytes+0x30>
 804a4b1:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a4b7:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804a4ba:	c1 e2 02             	shl    $0x2,%edx
 804a4bd:	01 d0                	add    %edx,%eax
 804a4bf:	8b 00                	mov    (%eax),%eax
 804a4c1:	85 c0                	test   %eax,%eax
 804a4c3:	0f 85 27 02 00 00    	jne    804a6f0 <malloc_bytes+0x27b>
 804a4c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a4cc:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804a4cf:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)
 804a4d6:	e8 d9 fb ff ff       	call   804a0b4 <malloc_pages>
 804a4db:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804a4de:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 804a4e2:	75 0a                	jne    804a4ee <malloc_bytes+0x79>
 804a4e4:	b8 00 00 00 00       	mov    $0x0,%eax
 804a4e9:	e9 f4 01 00 00       	jmp    804a6e2 <malloc_bytes+0x26d>
 804a4ee:	c7 45 d4 10 00 00 00 	movl   $0x10,-0x2c(%ebp)
 804a4f5:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804a4f8:	ba 00 10 00 00       	mov    $0x1000,%edx
 804a4fd:	88 c1                	mov    %al,%cl
 804a4ff:	d3 ea                	shr    %cl,%edx
 804a501:	89 d0                	mov    %edx,%eax
 804a503:	83 c0 1f             	add    $0x1f,%eax
 804a506:	c1 e8 05             	shr    $0x5,%eax
 804a509:	c1 e0 02             	shl    $0x2,%eax
 804a50c:	01 45 d4             	add    %eax,-0x2c(%ebp)
 804a50f:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804a512:	ba 01 00 00 00       	mov    $0x1,%edx
 804a517:	88 c1                	mov    %al,%cl
 804a519:	d3 e2                	shl    %cl,%edx
 804a51b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a51e:	01 c0                	add    %eax,%eax
 804a520:	39 c2                	cmp    %eax,%edx
 804a522:	77 08                	ja     804a52c <malloc_bytes+0xb7>
 804a524:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804a527:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804a52a:	eb 29                	jmp    804a555 <malloc_bytes+0xe0>
 804a52c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a52f:	89 04 24             	mov    %eax,(%esp)
 804a532:	e8 c0 02 00 00       	call   804a7f7 <imalloc>
 804a537:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804a53a:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
 804a53e:	75 15                	jne    804a555 <malloc_bytes+0xe0>
 804a540:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804a543:	89 04 24             	mov    %eax,(%esp)
 804a546:	e8 cb 0b 00 00       	call   804b116 <ifree>
 804a54b:	b8 00 00 00 00       	mov    $0x0,%eax
 804a550:	e9 8d 01 00 00       	jmp    804a6e2 <malloc_bytes+0x26d>
 804a555:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804a558:	ba 01 00 00 00       	mov    $0x1,%edx
 804a55d:	88 c1                	mov    %al,%cl
 804a55f:	d3 e2                	shl    %cl,%edx
 804a561:	89 d0                	mov    %edx,%eax
 804a563:	0f b7 d0             	movzwl %ax,%edx
 804a566:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a569:	66 89 50 08          	mov    %dx,0x8(%eax)
 804a56d:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804a570:	0f b7 d0             	movzwl %ax,%edx
 804a573:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a576:	66 89 50 0a          	mov    %dx,0xa(%eax)
 804a57a:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804a57d:	ba 00 10 00 00       	mov    $0x1000,%edx
 804a582:	88 c1                	mov    %al,%cl
 804a584:	d3 ea                	shr    %cl,%edx
 804a586:	89 d0                	mov    %edx,%eax
 804a588:	0f b7 d0             	movzwl %ax,%edx
 804a58b:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a58e:	66 89 50 0c          	mov    %dx,0xc(%eax)
 804a592:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a595:	0f b7 50 0c          	movzwl 0xc(%eax),%edx
 804a599:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a59c:	66 89 50 0e          	mov    %dx,0xe(%eax)
 804a5a0:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a5a3:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804a5a6:	89 50 04             	mov    %edx,0x4(%eax)
 804a5a9:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a5ac:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
 804a5b0:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804a5b3:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 804a5ba:	eb 19                	jmp    804a5d5 <malloc_bytes+0x160>
 804a5bc:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804a5bf:	c1 e8 05             	shr    $0x5,%eax
 804a5c2:	89 c2                	mov    %eax,%edx
 804a5c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a5c7:	83 c2 04             	add    $0x4,%edx
 804a5ca:	c7 04 90 ff ff ff ff 	movl   $0xffffffff,(%eax,%edx,4)
 804a5d1:	83 45 c8 20          	addl   $0x20,-0x38(%ebp)
 804a5d5:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804a5d8:	2b 45 c8             	sub    -0x38(%ebp),%eax
 804a5db:	83 f8 1f             	cmp    $0x1f,%eax
 804a5de:	77 dc                	ja     804a5bc <malloc_bytes+0x147>
 804a5e0:	eb 2c                	jmp    804a60e <malloc_bytes+0x199>
 804a5e2:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804a5e5:	c1 e8 05             	shr    $0x5,%eax
 804a5e8:	8b 55 d0             	mov    -0x30(%ebp),%edx
 804a5eb:	8d 48 04             	lea    0x4(%eax),%ecx
 804a5ee:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
 804a5f1:	8b 4d c8             	mov    -0x38(%ebp),%ecx
 804a5f4:	83 e1 1f             	and    $0x1f,%ecx
 804a5f7:	be 01 00 00 00       	mov    $0x1,%esi
 804a5fc:	d3 e6                	shl    %cl,%esi
 804a5fe:	89 f1                	mov    %esi,%ecx
 804a600:	09 d1                	or     %edx,%ecx
 804a602:	8b 55 d0             	mov    -0x30(%ebp),%edx
 804a605:	83 c0 04             	add    $0x4,%eax
 804a608:	89 0c 82             	mov    %ecx,(%edx,%eax,4)
 804a60b:	ff 45 c8             	incl   -0x38(%ebp)
 804a60e:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804a611:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 804a614:	77 cc                	ja     804a5e2 <malloc_bytes+0x16d>
 804a616:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a619:	8b 40 04             	mov    0x4(%eax),%eax
 804a61c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 804a61f:	75 72                	jne    804a693 <malloc_bytes+0x21e>
 804a621:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 804a628:	eb 63                	jmp    804a68d <malloc_bytes+0x218>
 804a62a:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804a62d:	c1 e8 05             	shr    $0x5,%eax
 804a630:	8b 55 d0             	mov    -0x30(%ebp),%edx
 804a633:	8d 48 04             	lea    0x4(%eax),%ecx
 804a636:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
 804a639:	8b 4d c8             	mov    -0x38(%ebp),%ecx
 804a63c:	83 e1 1f             	and    $0x1f,%ecx
 804a63f:	be 01 00 00 00       	mov    $0x1,%esi
 804a644:	d3 e6                	shl    %cl,%esi
 804a646:	89 f1                	mov    %esi,%ecx
 804a648:	f7 d1                	not    %ecx
 804a64a:	21 d1                	and    %edx,%ecx
 804a64c:	8b 55 d0             	mov    -0x30(%ebp),%edx
 804a64f:	83 c0 04             	add    $0x4,%eax
 804a652:	89 0c 82             	mov    %ecx,(%edx,%eax,4)
 804a655:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a658:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
 804a65c:	48                   	dec    %eax
 804a65d:	0f b7 d0             	movzwl %ax,%edx
 804a660:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a663:	66 89 50 0c          	mov    %dx,0xc(%eax)
 804a667:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a66a:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
 804a66e:	48                   	dec    %eax
 804a66f:	0f b7 d0             	movzwl %ax,%edx
 804a672:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a675:	66 89 50 0e          	mov    %dx,0xe(%eax)
 804a679:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804a67c:	ba 01 00 00 00       	mov    $0x1,%edx
 804a681:	88 c1                	mov    %al,%cl
 804a683:	d3 e2                	shl    %cl,%edx
 804a685:	89 d0                	mov    %edx,%eax
 804a687:	29 45 d4             	sub    %eax,-0x2c(%ebp)
 804a68a:	ff 45 c8             	incl   -0x38(%ebp)
 804a68d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804a691:	75 97                	jne    804a62a <malloc_bytes+0x1b5>
 804a693:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a699:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804a69c:	89 d1                	mov    %edx,%ecx
 804a69e:	c1 e9 0c             	shr    $0xc,%ecx
 804a6a1:	8b 93 34 02 00 00    	mov    0x234(%ebx),%edx
 804a6a7:	29 d1                	sub    %edx,%ecx
 804a6a9:	89 ca                	mov    %ecx,%edx
 804a6ab:	c1 e2 02             	shl    $0x2,%edx
 804a6ae:	01 c2                	add    %eax,%edx
 804a6b0:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a6b3:	89 02                	mov    %eax,(%edx)
 804a6b5:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a6bb:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804a6be:	c1 e2 02             	shl    $0x2,%edx
 804a6c1:	01 d0                	add    %edx,%eax
 804a6c3:	8b 10                	mov    (%eax),%edx
 804a6c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a6c8:	89 10                	mov    %edx,(%eax)
 804a6ca:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a6d0:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804a6d3:	c1 e2 02             	shl    $0x2,%edx
 804a6d6:	01 c2                	add    %eax,%edx
 804a6d8:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a6db:	89 02                	mov    %eax,(%edx)
 804a6dd:	b8 01 00 00 00       	mov    $0x1,%eax
 804a6e2:	85 c0                	test   %eax,%eax
 804a6e4:	75 0a                	jne    804a6f0 <malloc_bytes+0x27b>
 804a6e6:	b8 00 00 00 00       	mov    $0x0,%eax
 804a6eb:	e9 00 01 00 00       	jmp    804a7f0 <malloc_bytes+0x37b>
 804a6f0:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a6f6:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804a6f9:	c1 e2 02             	shl    $0x2,%edx
 804a6fc:	01 d0                	add    %edx,%eax
 804a6fe:	8b 00                	mov    (%eax),%eax
 804a700:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804a703:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a706:	83 c0 10             	add    $0x10,%eax
 804a709:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804a70c:	eb 04                	jmp    804a712 <malloc_bytes+0x29d>
 804a70e:	83 45 e4 04          	addl   $0x4,-0x1c(%ebp)
 804a712:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a715:	8b 00                	mov    (%eax),%eax
 804a717:	85 c0                	test   %eax,%eax
 804a719:	74 f3                	je     804a70e <malloc_bytes+0x299>
 804a71b:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 804a722:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 804a729:	eb 0b                	jmp    804a736 <malloc_bytes+0x2c1>
 804a72b:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804a72e:	01 c0                	add    %eax,%eax
 804a730:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804a733:	ff 45 e8             	incl   -0x18(%ebp)
 804a736:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a739:	8b 00                	mov    (%eax),%eax
 804a73b:	23 45 ec             	and    -0x14(%ebp),%eax
 804a73e:	85 c0                	test   %eax,%eax
 804a740:	74 e9                	je     804a72b <malloc_bytes+0x2b6>
 804a742:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a745:	8b 00                	mov    (%eax),%eax
 804a747:	33 45 ec             	xor    -0x14(%ebp),%eax
 804a74a:	89 c2                	mov    %eax,%edx
 804a74c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a74f:	89 10                	mov    %edx,(%eax)
 804a751:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a754:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
 804a758:	48                   	dec    %eax
 804a759:	0f b7 d0             	movzwl %ax,%edx
 804a75c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a75f:	66 89 50 0c          	mov    %dx,0xc(%eax)
 804a763:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a766:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
 804a76a:	85 c0                	test   %eax,%eax
 804a76c:	75 1e                	jne    804a78c <malloc_bytes+0x317>
 804a76e:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a774:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804a777:	c1 e2 02             	shl    $0x2,%edx
 804a77a:	01 c2                	add    %eax,%edx
 804a77c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a77f:	8b 00                	mov    (%eax),%eax
 804a781:	89 02                	mov    %eax,(%edx)
 804a783:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a786:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804a78c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a78f:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804a792:	83 c2 10             	add    $0x10,%edx
 804a795:	29 d0                	sub    %edx,%eax
 804a797:	c1 f8 02             	sar    $0x2,%eax
 804a79a:	c1 e0 05             	shl    $0x5,%eax
 804a79d:	89 c2                	mov    %eax,%edx
 804a79f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a7a2:	01 d0                	add    %edx,%eax
 804a7a4:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a7a7:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a7aa:	0f b7 40 0a          	movzwl 0xa(%eax),%eax
 804a7ae:	88 c1                	mov    %al,%cl
 804a7b0:	d3 65 e8             	shll   %cl,-0x18(%ebp)
 804a7b3:	8b 83 74 02 00 00    	mov    0x274(%ebx),%eax
 804a7b9:	85 c0                	test   %eax,%eax
 804a7bb:	74 28                	je     804a7e5 <malloc_bytes+0x370>
 804a7bd:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a7c0:	0f b7 40 08          	movzwl 0x8(%eax),%eax
 804a7c4:	89 c2                	mov    %eax,%edx
 804a7c6:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a7c9:	8b 48 04             	mov    0x4(%eax),%ecx
 804a7cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a7cf:	01 c8                	add    %ecx,%eax
 804a7d1:	89 54 24 08          	mov    %edx,0x8(%esp)
 804a7d5:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)
 804a7dc:	00 
 804a7dd:	89 04 24             	mov    %eax,(%esp)
 804a7e0:	e8 75 ea ff ff       	call   804925a <memset>
 804a7e5:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a7e8:	8b 50 04             	mov    0x4(%eax),%edx
 804a7eb:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a7ee:	01 d0                	add    %edx,%eax
 804a7f0:	83 c4 40             	add    $0x40,%esp
 804a7f3:	5b                   	pop    %ebx
 804a7f4:	5e                   	pop    %esi
 804a7f5:	5d                   	pop    %ebp
 804a7f6:	c3                   	ret    

0804a7f7 <imalloc>:
 804a7f7:	55                   	push   %ebp
 804a7f8:	89 e5                	mov    %esp,%ebp
 804a7fa:	53                   	push   %ebx
 804a7fb:	83 ec 24             	sub    $0x24,%esp
 804a7fe:	e8 a5 e8 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804a803:	81 c3 fd 47 00 00    	add    $0x47fd,%ebx
 804a809:	8b 83 5c 02 00 00    	mov    0x25c(%ebx),%eax
 804a80f:	85 c0                	test   %eax,%eax
 804a811:	74 0c                	je     804a81f <imalloc+0x28>
 804a813:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804a81a:	e8 1e dd ff ff       	call   804853d <exit>
 804a81f:	8b 45 08             	mov    0x8(%ebp),%eax
 804a822:	05 00 10 00 00       	add    $0x1000,%eax
 804a827:	3b 45 08             	cmp    0x8(%ebp),%eax
 804a82a:	73 09                	jae    804a835 <imalloc+0x3e>
 804a82c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804a833:	eb 27                	jmp    804a85c <imalloc+0x65>
 804a835:	81 7d 08 00 08 00 00 	cmpl   $0x800,0x8(%ebp)
 804a83c:	77 10                	ja     804a84e <imalloc+0x57>
 804a83e:	8b 45 08             	mov    0x8(%ebp),%eax
 804a841:	89 04 24             	mov    %eax,(%esp)
 804a844:	e8 2c fc ff ff       	call   804a475 <malloc_bytes>
 804a849:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a84c:	eb 0e                	jmp    804a85c <imalloc+0x65>
 804a84e:	8b 45 08             	mov    0x8(%ebp),%eax
 804a851:	89 04 24             	mov    %eax,(%esp)
 804a854:	e8 5b f8 ff ff       	call   804a0b4 <malloc_pages>
 804a859:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a85c:	8b 83 58 02 00 00    	mov    0x258(%ebx),%eax
 804a862:	85 c0                	test   %eax,%eax
 804a864:	74 14                	je     804a87a <imalloc+0x83>
 804a866:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a86a:	75 0e                	jne    804a87a <imalloc+0x83>
 804a86c:	8d 83 38 ef ff ff    	lea    -0x10c8(%ebx),%eax
 804a872:	89 04 24             	mov    %eax,(%esp)
 804a875:	e8 36 f2 ff ff       	call   8049ab0 <wrterror>
 804a87a:	8b 83 70 02 00 00    	mov    0x270(%ebx),%eax
 804a880:	85 c0                	test   %eax,%eax
 804a882:	74 20                	je     804a8a4 <imalloc+0xad>
 804a884:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a888:	74 1a                	je     804a8a4 <imalloc+0xad>
 804a88a:	8b 45 08             	mov    0x8(%ebp),%eax
 804a88d:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a891:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804a898:	00 
 804a899:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a89c:	89 04 24             	mov    %eax,(%esp)
 804a89f:	e8 b6 e9 ff ff       	call   804925a <memset>
 804a8a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a8a7:	83 c4 24             	add    $0x24,%esp
 804a8aa:	5b                   	pop    %ebx
 804a8ab:	5d                   	pop    %ebp
 804a8ac:	c3                   	ret    

0804a8ad <irealloc>:
 804a8ad:	55                   	push   %ebp
 804a8ae:	89 e5                	mov    %esp,%ebp
 804a8b0:	56                   	push   %esi
 804a8b1:	53                   	push   %ebx
 804a8b2:	83 ec 30             	sub    $0x30,%esp
 804a8b5:	e8 ee e7 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804a8ba:	81 c3 46 47 00 00    	add    $0x4746,%ebx
 804a8c0:	8b 83 5c 02 00 00    	mov    0x25c(%ebx),%eax
 804a8c6:	85 c0                	test   %eax,%eax
 804a8c8:	74 0c                	je     804a8d6 <irealloc+0x29>
 804a8ca:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804a8d1:	e8 67 dc ff ff       	call   804853d <exit>
 804a8d6:	8b 45 08             	mov    0x8(%ebp),%eax
 804a8d9:	c1 e8 0c             	shr    $0xc,%eax
 804a8dc:	89 c2                	mov    %eax,%edx
 804a8de:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
 804a8e4:	29 c2                	sub    %eax,%edx
 804a8e6:	89 d0                	mov    %edx,%eax
 804a8e8:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804a8eb:	83 7d ec 0b          	cmpl   $0xb,-0x14(%ebp)
 804a8ef:	77 18                	ja     804a909 <irealloc+0x5c>
 804a8f1:	8d 83 4c ef ff ff    	lea    -0x10b4(%ebx),%eax
 804a8f7:	89 04 24             	mov    %eax,(%esp)
 804a8fa:	e8 81 f2 ff ff       	call   8049b80 <wrtwarning>
 804a8ff:	b8 00 00 00 00       	mov    $0x0,%eax
 804a904:	e9 fc 01 00 00       	jmp    804ab05 <irealloc+0x258>
 804a909:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
 804a90f:	39 45 ec             	cmp    %eax,-0x14(%ebp)
 804a912:	76 18                	jbe    804a92c <irealloc+0x7f>
 804a914:	8d 83 74 ef ff ff    	lea    -0x108c(%ebx),%eax
 804a91a:	89 04 24             	mov    %eax,(%esp)
 804a91d:	e8 5e f2 ff ff       	call   8049b80 <wrtwarning>
 804a922:	b8 00 00 00 00       	mov    $0x0,%eax
 804a927:	e9 d9 01 00 00       	jmp    804ab05 <irealloc+0x258>
 804a92c:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804a932:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a935:	c1 e2 02             	shl    $0x2,%edx
 804a938:	01 d0                	add    %edx,%eax
 804a93a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a93d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a940:	8b 00                	mov    (%eax),%eax
 804a942:	83 f8 02             	cmp    $0x2,%eax
 804a945:	75 75                	jne    804a9bc <irealloc+0x10f>
 804a947:	8b 45 08             	mov    0x8(%ebp),%eax
 804a94a:	25 ff 0f 00 00       	and    $0xfff,%eax
 804a94f:	85 c0                	test   %eax,%eax
 804a951:	74 18                	je     804a96b <irealloc+0xbe>
 804a953:	8d 83 9b ef ff ff    	lea    -0x1065(%ebx),%eax
 804a959:	89 04 24             	mov    %eax,(%esp)
 804a95c:	e8 1f f2 ff ff       	call   8049b80 <wrtwarning>
 804a961:	b8 00 00 00 00       	mov    $0x0,%eax
 804a966:	e9 9a 01 00 00       	jmp    804ab05 <irealloc+0x258>
 804a96b:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
 804a972:	eb 07                	jmp    804a97b <irealloc+0xce>
 804a974:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)
 804a97b:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
 804a97f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a982:	8b 00                	mov    (%eax),%eax
 804a984:	83 f8 03             	cmp    $0x3,%eax
 804a987:	74 eb                	je     804a974 <irealloc+0xc7>
 804a989:	8b 83 60 02 00 00    	mov    0x260(%ebx),%eax
 804a98f:	85 c0                	test   %eax,%eax
 804a991:	0f 85 04 01 00 00    	jne    804aa9b <irealloc+0x1ee>
 804a997:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a99a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804a99d:	0f 87 f8 00 00 00    	ja     804aa9b <irealloc+0x1ee>
 804a9a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a9a6:	2d 00 10 00 00       	sub    $0x1000,%eax
 804a9ab:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804a9ae:	0f 83 e7 00 00 00    	jae    804aa9b <irealloc+0x1ee>
 804a9b4:	8b 45 08             	mov    0x8(%ebp),%eax
 804a9b7:	e9 49 01 00 00       	jmp    804ab05 <irealloc+0x258>
 804a9bc:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a9bf:	8b 00                	mov    (%eax),%eax
 804a9c1:	83 f8 03             	cmp    $0x3,%eax
 804a9c4:	0f 86 bc 00 00 00    	jbe    804aa86 <irealloc+0x1d9>
 804a9ca:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a9cd:	8b 00                	mov    (%eax),%eax
 804a9cf:	0f b7 40 08          	movzwl 0x8(%eax),%eax
 804a9d3:	48                   	dec    %eax
 804a9d4:	89 c2                	mov    %eax,%edx
 804a9d6:	8b 45 08             	mov    0x8(%ebp),%eax
 804a9d9:	21 d0                	and    %edx,%eax
 804a9db:	85 c0                	test   %eax,%eax
 804a9dd:	74 18                	je     804a9f7 <irealloc+0x14a>
 804a9df:	8d 83 b6 ef ff ff    	lea    -0x104a(%ebx),%eax
 804a9e5:	89 04 24             	mov    %eax,(%esp)
 804a9e8:	e8 93 f1 ff ff       	call   8049b80 <wrtwarning>
 804a9ed:	b8 00 00 00 00       	mov    $0x0,%eax
 804a9f2:	e9 0e 01 00 00       	jmp    804ab05 <irealloc+0x258>
 804a9f7:	8b 45 08             	mov    0x8(%ebp),%eax
 804a9fa:	25 ff 0f 00 00       	and    $0xfff,%eax
 804a9ff:	89 c2                	mov    %eax,%edx
 804aa01:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804aa04:	8b 00                	mov    (%eax),%eax
 804aa06:	0f b7 40 0a          	movzwl 0xa(%eax),%eax
 804aa0a:	88 c1                	mov    %al,%cl
 804aa0c:	d3 ea                	shr    %cl,%edx
 804aa0e:	89 d0                	mov    %edx,%eax
 804aa10:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804aa13:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804aa16:	8b 00                	mov    (%eax),%eax
 804aa18:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804aa1b:	c1 ea 05             	shr    $0x5,%edx
 804aa1e:	83 c2 04             	add    $0x4,%edx
 804aa21:	8b 04 90             	mov    (%eax,%edx,4),%eax
 804aa24:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804aa27:	83 e2 1f             	and    $0x1f,%edx
 804aa2a:	be 01 00 00 00       	mov    $0x1,%esi
 804aa2f:	88 d1                	mov    %dl,%cl
 804aa31:	d3 e6                	shl    %cl,%esi
 804aa33:	89 f2                	mov    %esi,%edx
 804aa35:	21 d0                	and    %edx,%eax
 804aa37:	85 c0                	test   %eax,%eax
 804aa39:	74 18                	je     804aa53 <irealloc+0x1a6>
 804aa3b:	8d 83 d2 ef ff ff    	lea    -0x102e(%ebx),%eax
 804aa41:	89 04 24             	mov    %eax,(%esp)
 804aa44:	e8 37 f1 ff ff       	call   8049b80 <wrtwarning>
 804aa49:	b8 00 00 00 00       	mov    $0x0,%eax
 804aa4e:	e9 b2 00 00 00       	jmp    804ab05 <irealloc+0x258>
 804aa53:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804aa56:	8b 00                	mov    (%eax),%eax
 804aa58:	0f b7 40 08          	movzwl 0x8(%eax),%eax
 804aa5c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804aa5f:	8b 83 60 02 00 00    	mov    0x260(%ebx),%eax
 804aa65:	85 c0                	test   %eax,%eax
 804aa67:	75 32                	jne    804aa9b <irealloc+0x1ee>
 804aa69:	8b 45 0c             	mov    0xc(%ebp),%eax
 804aa6c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804aa6f:	73 2a                	jae    804aa9b <irealloc+0x1ee>
 804aa71:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804aa74:	d1 e8                	shr    %eax
 804aa76:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804aa79:	72 06                	jb     804aa81 <irealloc+0x1d4>
 804aa7b:	83 7d f4 10          	cmpl   $0x10,-0xc(%ebp)
 804aa7f:	75 1a                	jne    804aa9b <irealloc+0x1ee>
 804aa81:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa84:	eb 7f                	jmp    804ab05 <irealloc+0x258>
 804aa86:	8d 83 ea ef ff ff    	lea    -0x1016(%ebx),%eax
 804aa8c:	89 04 24             	mov    %eax,(%esp)
 804aa8f:	e8 ec f0 ff ff       	call   8049b80 <wrtwarning>
 804aa94:	b8 00 00 00 00       	mov    $0x0,%eax
 804aa99:	eb 6a                	jmp    804ab05 <irealloc+0x258>
 804aa9b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804aa9e:	89 04 24             	mov    %eax,(%esp)
 804aaa1:	e8 51 fd ff ff       	call   804a7f7 <imalloc>
 804aaa6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804aaa9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 804aaad:	74 53                	je     804ab02 <irealloc+0x255>
 804aaaf:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804aab3:	74 42                	je     804aaf7 <irealloc+0x24a>
 804aab5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804aab9:	74 3c                	je     804aaf7 <irealloc+0x24a>
 804aabb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804aabe:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804aac1:	73 1b                	jae    804aade <irealloc+0x231>
 804aac3:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804aac6:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aaca:	8b 45 08             	mov    0x8(%ebp),%eax
 804aacd:	89 44 24 04          	mov    %eax,0x4(%esp)
 804aad1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804aad4:	89 04 24             	mov    %eax,(%esp)
 804aad7:	e8 23 e6 ff ff       	call   80490ff <memcpy>
 804aadc:	eb 19                	jmp    804aaf7 <irealloc+0x24a>
 804aade:	8b 45 0c             	mov    0xc(%ebp),%eax
 804aae1:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aae5:	8b 45 08             	mov    0x8(%ebp),%eax
 804aae8:	89 44 24 04          	mov    %eax,0x4(%esp)
 804aaec:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804aaef:	89 04 24             	mov    %eax,(%esp)
 804aaf2:	e8 08 e6 ff ff       	call   80490ff <memcpy>
 804aaf7:	8b 45 08             	mov    0x8(%ebp),%eax
 804aafa:	89 04 24             	mov    %eax,(%esp)
 804aafd:	e8 14 06 00 00       	call   804b116 <ifree>
 804ab02:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804ab05:	83 c4 30             	add    $0x30,%esp
 804ab08:	5b                   	pop    %ebx
 804ab09:	5e                   	pop    %esi
 804ab0a:	5d                   	pop    %ebp
 804ab0b:	c3                   	ret    

0804ab0c <free_pages>:
 804ab0c:	55                   	push   %ebp
 804ab0d:	89 e5                	mov    %esp,%ebp
 804ab0f:	53                   	push   %ebx
 804ab10:	83 ec 34             	sub    $0x34,%esp
 804ab13:	e8 90 e5 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804ab18:	81 c3 e8 44 00 00    	add    $0x44e8,%ebx
 804ab1e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804ab25:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
 804ab29:	75 13                	jne    804ab3e <free_pages+0x32>
 804ab2b:	8d 83 02 f0 ff ff    	lea    -0xffe(%ebx),%eax
 804ab31:	89 04 24             	mov    %eax,(%esp)
 804ab34:	e8 47 f0 ff ff       	call   8049b80 <wrtwarning>
 804ab39:	e9 db 03 00 00       	jmp    804af19 <free_pages+0x40d>
 804ab3e:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)
 804ab42:	74 13                	je     804ab57 <free_pages+0x4b>
 804ab44:	8d 83 ea ef ff ff    	lea    -0x1016(%ebx),%eax
 804ab4a:	89 04 24             	mov    %eax,(%esp)
 804ab4d:	e8 2e f0 ff ff       	call   8049b80 <wrtwarning>
 804ab52:	e9 c2 03 00 00       	jmp    804af19 <free_pages+0x40d>
 804ab57:	8b 45 08             	mov    0x8(%ebp),%eax
 804ab5a:	25 ff 0f 00 00       	and    $0xfff,%eax
 804ab5f:	85 c0                	test   %eax,%eax
 804ab61:	74 13                	je     804ab76 <free_pages+0x6a>
 804ab63:	8d 83 9b ef ff ff    	lea    -0x1065(%ebx),%eax
 804ab69:	89 04 24             	mov    %eax,(%esp)
 804ab6c:	e8 0f f0 ff ff       	call   8049b80 <wrtwarning>
 804ab71:	e9 a3 03 00 00       	jmp    804af19 <free_pages+0x40d>
 804ab76:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804ab7c:	8b 55 0c             	mov    0xc(%ebp),%edx
 804ab7f:	c1 e2 02             	shl    $0x2,%edx
 804ab82:	01 d0                	add    %edx,%eax
 804ab84:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
 804ab8a:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 804ab91:	eb 1c                	jmp    804abaf <free_pages+0xa3>
 804ab93:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804ab99:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804ab9c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804ab9f:	01 ca                	add    %ecx,%edx
 804aba1:	c1 e2 02             	shl    $0x2,%edx
 804aba4:	01 d0                	add    %edx,%eax
 804aba6:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
 804abac:	ff 45 f4             	incl   -0xc(%ebp)
 804abaf:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804abb5:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804abb8:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804abbb:	01 ca                	add    %ecx,%edx
 804abbd:	c1 e2 02             	shl    $0x2,%edx
 804abc0:	01 d0                	add    %edx,%eax
 804abc2:	8b 00                	mov    (%eax),%eax
 804abc4:	83 f8 03             	cmp    $0x3,%eax
 804abc7:	74 ca                	je     804ab93 <free_pages+0x87>
 804abc9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804abcc:	c1 e0 0c             	shl    $0xc,%eax
 804abcf:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804abd2:	8b 83 74 02 00 00    	mov    0x274(%ebx),%eax
 804abd8:	85 c0                	test   %eax,%eax
 804abda:	74 1a                	je     804abf6 <free_pages+0xea>
 804abdc:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804abdf:	89 44 24 08          	mov    %eax,0x8(%esp)
 804abe3:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)
 804abea:	00 
 804abeb:	8b 45 08             	mov    0x8(%ebp),%eax
 804abee:	89 04 24             	mov    %eax,(%esp)
 804abf1:	e8 64 e6 ff ff       	call   804925a <memset>
 804abf6:	8b 55 08             	mov    0x8(%ebp),%edx
 804abf9:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804abfc:	01 d0                	add    %edx,%eax
 804abfe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804ac01:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ac07:	85 c0                	test   %eax,%eax
 804ac09:	75 12                	jne    804ac1d <free_pages+0x111>
 804ac0b:	c7 04 24 14 00 00 00 	movl   $0x14,(%esp)
 804ac12:	e8 e0 fb ff ff       	call   804a7f7 <imalloc>
 804ac17:	89 83 7c 02 00 00    	mov    %eax,0x27c(%ebx)
 804ac1d:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ac23:	8b 55 08             	mov    0x8(%ebp),%edx
 804ac26:	89 50 08             	mov    %edx,0x8(%eax)
 804ac29:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ac2f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804ac32:	89 50 0c             	mov    %edx,0xc(%eax)
 804ac35:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ac3b:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804ac3e:	89 50 10             	mov    %edx,0x10(%eax)
 804ac41:	8b 83 44 02 00 00    	mov    0x244(%ebx),%eax
 804ac47:	85 c0                	test   %eax,%eax
 804ac49:	75 41                	jne    804ac8c <free_pages+0x180>
 804ac4b:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ac51:	8b 93 44 02 00 00    	mov    0x244(%ebx),%edx
 804ac57:	89 10                	mov    %edx,(%eax)
 804ac59:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ac5f:	8d 93 44 02 00 00    	lea    0x244(%ebx),%edx
 804ac65:	89 50 04             	mov    %edx,0x4(%eax)
 804ac68:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ac6e:	89 83 44 02 00 00    	mov    %eax,0x244(%ebx)
 804ac74:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ac7a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804ac7d:	c7 83 7c 02 00 00 00 	movl   $0x0,0x27c(%ebx)
 804ac84:	00 00 00 
 804ac87:	e9 a2 01 00 00       	jmp    804ae2e <free_pages+0x322>
 804ac8c:	8b 55 08             	mov    0x8(%ebp),%edx
 804ac8f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ac92:	01 d0                	add    %edx,%eax
 804ac94:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804ac97:	8b 83 44 02 00 00    	mov    0x244(%ebx),%eax
 804ac9d:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804aca0:	eb 08                	jmp    804acaa <free_pages+0x19e>
 804aca2:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804aca5:	8b 00                	mov    (%eax),%eax
 804aca7:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804acaa:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804acad:	8b 40 0c             	mov    0xc(%eax),%eax
 804acb0:	3b 45 08             	cmp    0x8(%ebp),%eax
 804acb3:	73 09                	jae    804acbe <free_pages+0x1b2>
 804acb5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804acb8:	8b 00                	mov    (%eax),%eax
 804acba:	85 c0                	test   %eax,%eax
 804acbc:	75 e4                	jne    804aca2 <free_pages+0x196>
 804acbe:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804acc1:	8b 40 08             	mov    0x8(%eax),%eax
 804acc4:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 804acc7:	76 4f                	jbe    804ad18 <free_pages+0x20c>
 804acc9:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804accf:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804acd2:	89 10                	mov    %edx,(%eax)
 804acd4:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804acda:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804acdd:	8b 52 04             	mov    0x4(%edx),%edx
 804ace0:	89 50 04             	mov    %edx,0x4(%eax)
 804ace3:	8b 93 7c 02 00 00    	mov    0x27c(%ebx),%edx
 804ace9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804acec:	89 50 04             	mov    %edx,0x4(%eax)
 804acef:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804acf5:	8b 40 04             	mov    0x4(%eax),%eax
 804acf8:	8b 93 7c 02 00 00    	mov    0x27c(%ebx),%edx
 804acfe:	89 10                	mov    %edx,(%eax)
 804ad00:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ad06:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804ad09:	c7 83 7c 02 00 00 00 	movl   $0x0,0x27c(%ebx)
 804ad10:	00 00 00 
 804ad13:	e9 16 01 00 00       	jmp    804ae2e <free_pages+0x322>
 804ad18:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad1b:	8b 40 0c             	mov    0xc(%eax),%eax
 804ad1e:	3b 45 08             	cmp    0x8(%ebp),%eax
 804ad21:	0f 85 91 00 00 00    	jne    804adb8 <free_pages+0x2ac>
 804ad27:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad2a:	8b 50 0c             	mov    0xc(%eax),%edx
 804ad2d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ad30:	01 c2                	add    %eax,%edx
 804ad32:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad35:	89 50 0c             	mov    %edx,0xc(%eax)
 804ad38:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad3b:	8b 50 10             	mov    0x10(%eax),%edx
 804ad3e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ad41:	01 c2                	add    %eax,%edx
 804ad43:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad46:	89 50 10             	mov    %edx,0x10(%eax)
 804ad49:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad4c:	8b 00                	mov    (%eax),%eax
 804ad4e:	85 c0                	test   %eax,%eax
 804ad50:	0f 84 d8 00 00 00    	je     804ae2e <free_pages+0x322>
 804ad56:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad59:	8b 50 0c             	mov    0xc(%eax),%edx
 804ad5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad5f:	8b 00                	mov    (%eax),%eax
 804ad61:	8b 40 08             	mov    0x8(%eax),%eax
 804ad64:	39 c2                	cmp    %eax,%edx
 804ad66:	0f 85 c2 00 00 00    	jne    804ae2e <free_pages+0x322>
 804ad6c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad6f:	8b 00                	mov    (%eax),%eax
 804ad71:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804ad74:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804ad77:	8b 50 0c             	mov    0xc(%eax),%edx
 804ad7a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad7d:	89 50 0c             	mov    %edx,0xc(%eax)
 804ad80:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad83:	8b 50 10             	mov    0x10(%eax),%edx
 804ad86:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804ad89:	8b 40 10             	mov    0x10(%eax),%eax
 804ad8c:	01 c2                	add    %eax,%edx
 804ad8e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad91:	89 50 10             	mov    %edx,0x10(%eax)
 804ad94:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804ad97:	8b 10                	mov    (%eax),%edx
 804ad99:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad9c:	89 10                	mov    %edx,(%eax)
 804ad9e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ada1:	8b 00                	mov    (%eax),%eax
 804ada3:	85 c0                	test   %eax,%eax
 804ada5:	0f 84 83 00 00 00    	je     804ae2e <free_pages+0x322>
 804adab:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804adae:	8b 00                	mov    (%eax),%eax
 804adb0:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804adb3:	89 50 04             	mov    %edx,0x4(%eax)
 804adb6:	eb 76                	jmp    804ae2e <free_pages+0x322>
 804adb8:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804adbb:	8b 40 08             	mov    0x8(%eax),%eax
 804adbe:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 804adc1:	75 1c                	jne    804addf <free_pages+0x2d3>
 804adc3:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804adc6:	8b 50 10             	mov    0x10(%eax),%edx
 804adc9:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804adcc:	01 c2                	add    %eax,%edx
 804adce:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804add1:	89 50 10             	mov    %edx,0x10(%eax)
 804add4:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804add7:	8b 55 08             	mov    0x8(%ebp),%edx
 804adda:	89 50 08             	mov    %edx,0x8(%eax)
 804addd:	eb 4f                	jmp    804ae2e <free_pages+0x322>
 804addf:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ade2:	8b 00                	mov    (%eax),%eax
 804ade4:	85 c0                	test   %eax,%eax
 804ade6:	75 38                	jne    804ae20 <free_pages+0x314>
 804ade8:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804adee:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804adf4:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804adfa:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804adfd:	89 50 04             	mov    %edx,0x4(%eax)
 804ae00:	8b 93 7c 02 00 00    	mov    0x27c(%ebx),%edx
 804ae06:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ae09:	89 10                	mov    %edx,(%eax)
 804ae0b:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804ae11:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804ae14:	c7 83 7c 02 00 00 00 	movl   $0x0,0x27c(%ebx)
 804ae1b:	00 00 00 
 804ae1e:	eb 0e                	jmp    804ae2e <free_pages+0x322>
 804ae20:	8d 83 19 f0 ff ff    	lea    -0xfe7(%ebx),%eax
 804ae26:	89 04 24             	mov    %eax,(%esp)
 804ae29:	e8 82 ec ff ff       	call   8049ab0 <wrterror>
 804ae2e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ae31:	8b 00                	mov    (%eax),%eax
 804ae33:	85 c0                	test   %eax,%eax
 804ae35:	0f 85 cd 00 00 00    	jne    804af08 <free_pages+0x3fc>
 804ae3b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ae3e:	8b 50 10             	mov    0x10(%eax),%edx
 804ae41:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 804ae47:	39 c2                	cmp    %eax,%edx
 804ae49:	0f 86 b9 00 00 00    	jbe    804af08 <free_pages+0x3fc>
 804ae4f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ae52:	8b 50 0c             	mov    0xc(%eax),%edx
 804ae55:	8b 83 78 02 00 00    	mov    0x278(%ebx),%eax
 804ae5b:	39 c2                	cmp    %eax,%edx
 804ae5d:	0f 85 a5 00 00 00    	jne    804af08 <free_pages+0x3fc>
 804ae63:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804ae6a:	e8 df d4 ff ff       	call   804834e <sbrk>
 804ae6f:	89 c2                	mov    %eax,%edx
 804ae71:	8b 83 78 02 00 00    	mov    0x278(%ebx),%eax
 804ae77:	39 c2                	cmp    %eax,%edx
 804ae79:	0f 85 89 00 00 00    	jne    804af08 <free_pages+0x3fc>
 804ae7f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ae82:	8b 50 08             	mov    0x8(%eax),%edx
 804ae85:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 804ae8b:	01 c2                	add    %eax,%edx
 804ae8d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ae90:	89 50 0c             	mov    %edx,0xc(%eax)
 804ae93:	8b 93 24 00 00 00    	mov    0x24(%ebx),%edx
 804ae99:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ae9c:	89 50 10             	mov    %edx,0x10(%eax)
 804ae9f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804aea2:	8b 40 0c             	mov    0xc(%eax),%eax
 804aea5:	89 04 24             	mov    %eax,(%esp)
 804aea8:	e8 6a d5 ff ff       	call   8048417 <brk>
 804aead:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804aeb0:	8b 40 0c             	mov    0xc(%eax),%eax
 804aeb3:	89 83 78 02 00 00    	mov    %eax,0x278(%ebx)
 804aeb9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804aebc:	8b 40 0c             	mov    0xc(%eax),%eax
 804aebf:	c1 e8 0c             	shr    $0xc,%eax
 804aec2:	89 c2                	mov    %eax,%edx
 804aec4:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
 804aeca:	29 c2                	sub    %eax,%edx
 804aecc:	89 d0                	mov    %edx,%eax
 804aece:	89 45 0c             	mov    %eax,0xc(%ebp)
 804aed1:	8b 45 0c             	mov    0xc(%ebp),%eax
 804aed4:	48                   	dec    %eax
 804aed5:	89 83 38 02 00 00    	mov    %eax,0x238(%ebx)
 804aedb:	8b 45 0c             	mov    0xc(%ebp),%eax
 804aede:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804aee1:	eb 1a                	jmp    804aefd <free_pages+0x3f1>
 804aee3:	8b 8b 3c 02 00 00    	mov    0x23c(%ebx),%ecx
 804aee9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804aeec:	8d 50 01             	lea    0x1(%eax),%edx
 804aeef:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804aef2:	c1 e0 02             	shl    $0x2,%eax
 804aef5:	01 c8                	add    %ecx,%eax
 804aef7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804aefd:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
 804af03:	39 45 f4             	cmp    %eax,-0xc(%ebp)
 804af06:	76 db                	jbe    804aee3 <free_pages+0x3d7>
 804af08:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 804af0c:	74 0b                	je     804af19 <free_pages+0x40d>
 804af0e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804af11:	89 04 24             	mov    %eax,(%esp)
 804af14:	e8 fd 01 00 00       	call   804b116 <ifree>
 804af19:	83 c4 34             	add    $0x34,%esp
 804af1c:	5b                   	pop    %ebx
 804af1d:	5d                   	pop    %ebp
 804af1e:	c3                   	ret    

0804af1f <free_bytes>:
 804af1f:	55                   	push   %ebp
 804af20:	89 e5                	mov    %esp,%ebp
 804af22:	56                   	push   %esi
 804af23:	53                   	push   %ebx
 804af24:	83 ec 20             	sub    $0x20,%esp
 804af27:	e8 7c e1 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804af2c:	81 c3 d4 40 00 00    	add    $0x40d4,%ebx
 804af32:	8b 45 08             	mov    0x8(%ebp),%eax
 804af35:	25 ff 0f 00 00       	and    $0xfff,%eax
 804af3a:	89 c2                	mov    %eax,%edx
 804af3c:	8b 45 10             	mov    0x10(%ebp),%eax
 804af3f:	0f b7 40 0a          	movzwl 0xa(%eax),%eax
 804af43:	88 c1                	mov    %al,%cl
 804af45:	d3 ea                	shr    %cl,%edx
 804af47:	89 d0                	mov    %edx,%eax
 804af49:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804af4c:	8b 45 10             	mov    0x10(%ebp),%eax
 804af4f:	0f b7 40 08          	movzwl 0x8(%eax),%eax
 804af53:	48                   	dec    %eax
 804af54:	89 c2                	mov    %eax,%edx
 804af56:	8b 45 08             	mov    0x8(%ebp),%eax
 804af59:	21 d0                	and    %edx,%eax
 804af5b:	85 c0                	test   %eax,%eax
 804af5d:	74 13                	je     804af72 <free_bytes+0x53>
 804af5f:	8d 83 b6 ef ff ff    	lea    -0x104a(%ebx),%eax
 804af65:	89 04 24             	mov    %eax,(%esp)
 804af68:	e8 13 ec ff ff       	call   8049b80 <wrtwarning>
 804af6d:	e9 9d 01 00 00       	jmp    804b10f <free_bytes+0x1f0>
 804af72:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804af75:	c1 e8 05             	shr    $0x5,%eax
 804af78:	89 c2                	mov    %eax,%edx
 804af7a:	8b 45 10             	mov    0x10(%ebp),%eax
 804af7d:	83 c2 04             	add    $0x4,%edx
 804af80:	8b 04 90             	mov    (%eax,%edx,4),%eax
 804af83:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804af86:	83 e2 1f             	and    $0x1f,%edx
 804af89:	be 01 00 00 00       	mov    $0x1,%esi
 804af8e:	88 d1                	mov    %dl,%cl
 804af90:	d3 e6                	shl    %cl,%esi
 804af92:	89 f2                	mov    %esi,%edx
 804af94:	21 d0                	and    %edx,%eax
 804af96:	85 c0                	test   %eax,%eax
 804af98:	74 13                	je     804afad <free_bytes+0x8e>
 804af9a:	8d 83 d2 ef ff ff    	lea    -0x102e(%ebx),%eax
 804afa0:	89 04 24             	mov    %eax,(%esp)
 804afa3:	e8 d8 eb ff ff       	call   8049b80 <wrtwarning>
 804afa8:	e9 62 01 00 00       	jmp    804b10f <free_bytes+0x1f0>
 804afad:	8b 83 74 02 00 00    	mov    0x274(%ebx),%eax
 804afb3:	85 c0                	test   %eax,%eax
 804afb5:	74 1e                	je     804afd5 <free_bytes+0xb6>
 804afb7:	8b 45 10             	mov    0x10(%ebp),%eax
 804afba:	0f b7 40 08          	movzwl 0x8(%eax),%eax
 804afbe:	89 44 24 08          	mov    %eax,0x8(%esp)
 804afc2:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)
 804afc9:	00 
 804afca:	8b 45 08             	mov    0x8(%ebp),%eax
 804afcd:	89 04 24             	mov    %eax,(%esp)
 804afd0:	e8 85 e2 ff ff       	call   804925a <memset>
 804afd5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804afd8:	c1 e8 05             	shr    $0x5,%eax
 804afdb:	8b 55 10             	mov    0x10(%ebp),%edx
 804afde:	8d 48 04             	lea    0x4(%eax),%ecx
 804afe1:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
 804afe4:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804afe7:	83 e1 1f             	and    $0x1f,%ecx
 804afea:	be 01 00 00 00       	mov    $0x1,%esi
 804afef:	d3 e6                	shl    %cl,%esi
 804aff1:	89 f1                	mov    %esi,%ecx
 804aff3:	09 d1                	or     %edx,%ecx
 804aff5:	8b 55 10             	mov    0x10(%ebp),%edx
 804aff8:	83 c0 04             	add    $0x4,%eax
 804affb:	89 0c 82             	mov    %ecx,(%edx,%eax,4)
 804affe:	8b 45 10             	mov    0x10(%ebp),%eax
 804b001:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
 804b005:	40                   	inc    %eax
 804b006:	0f b7 d0             	movzwl %ax,%edx
 804b009:	8b 45 10             	mov    0x10(%ebp),%eax
 804b00c:	66 89 50 0c          	mov    %dx,0xc(%eax)
 804b010:	8b 93 3c 02 00 00    	mov    0x23c(%ebx),%edx
 804b016:	8b 45 10             	mov    0x10(%ebp),%eax
 804b019:	0f b7 40 0a          	movzwl 0xa(%eax),%eax
 804b01d:	c1 e0 02             	shl    $0x2,%eax
 804b020:	01 d0                	add    %edx,%eax
 804b022:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804b025:	8b 45 10             	mov    0x10(%ebp),%eax
 804b028:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
 804b02c:	83 f8 01             	cmp    $0x1,%eax
 804b02f:	75 5e                	jne    804b08f <free_bytes+0x170>
 804b031:	8b 93 3c 02 00 00    	mov    0x23c(%ebx),%edx
 804b037:	8b 45 10             	mov    0x10(%ebp),%eax
 804b03a:	0f b7 40 0a          	movzwl 0xa(%eax),%eax
 804b03e:	c1 e0 02             	shl    $0x2,%eax
 804b041:	01 d0                	add    %edx,%eax
 804b043:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804b046:	eb 08                	jmp    804b050 <free_bytes+0x131>
 804b048:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b04b:	8b 00                	mov    (%eax),%eax
 804b04d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804b050:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b053:	8b 00                	mov    (%eax),%eax
 804b055:	85 c0                	test   %eax,%eax
 804b057:	74 1f                	je     804b078 <free_bytes+0x159>
 804b059:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b05c:	8b 00                	mov    (%eax),%eax
 804b05e:	8b 00                	mov    (%eax),%eax
 804b060:	85 c0                	test   %eax,%eax
 804b062:	74 14                	je     804b078 <free_bytes+0x159>
 804b064:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b067:	8b 00                	mov    (%eax),%eax
 804b069:	8b 00                	mov    (%eax),%eax
 804b06b:	8b 50 04             	mov    0x4(%eax),%edx
 804b06e:	8b 45 10             	mov    0x10(%ebp),%eax
 804b071:	8b 40 04             	mov    0x4(%eax),%eax
 804b074:	39 c2                	cmp    %eax,%edx
 804b076:	72 d0                	jb     804b048 <free_bytes+0x129>
 804b078:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b07b:	8b 10                	mov    (%eax),%edx
 804b07d:	8b 45 10             	mov    0x10(%ebp),%eax
 804b080:	89 10                	mov    %edx,(%eax)
 804b082:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b085:	8b 55 10             	mov    0x10(%ebp),%edx
 804b088:	89 10                	mov    %edx,(%eax)
 804b08a:	e9 80 00 00 00       	jmp    804b10f <free_bytes+0x1f0>
 804b08f:	8b 45 10             	mov    0x10(%ebp),%eax
 804b092:	0f b7 50 0c          	movzwl 0xc(%eax),%edx
 804b096:	8b 45 10             	mov    0x10(%ebp),%eax
 804b099:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
 804b09d:	39 c2                	cmp    %eax,%edx
 804b09f:	75 6d                	jne    804b10e <free_bytes+0x1ef>
 804b0a1:	eb 08                	jmp    804b0ab <free_bytes+0x18c>
 804b0a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b0a6:	8b 00                	mov    (%eax),%eax
 804b0a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804b0ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b0ae:	8b 00                	mov    (%eax),%eax
 804b0b0:	3b 45 10             	cmp    0x10(%ebp),%eax
 804b0b3:	75 ee                	jne    804b0a3 <free_bytes+0x184>
 804b0b5:	8b 45 10             	mov    0x10(%ebp),%eax
 804b0b8:	8b 10                	mov    (%eax),%edx
 804b0ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b0bd:	89 10                	mov    %edx,(%eax)
 804b0bf:	8b 93 3c 02 00 00    	mov    0x23c(%ebx),%edx
 804b0c5:	8b 45 10             	mov    0x10(%ebp),%eax
 804b0c8:	8b 40 04             	mov    0x4(%eax),%eax
 804b0cb:	c1 e8 0c             	shr    $0xc,%eax
 804b0ce:	89 c1                	mov    %eax,%ecx
 804b0d0:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
 804b0d6:	29 c1                	sub    %eax,%ecx
 804b0d8:	89 c8                	mov    %ecx,%eax
 804b0da:	c1 e0 02             	shl    $0x2,%eax
 804b0dd:	01 d0                	add    %edx,%eax
 804b0df:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
 804b0e5:	8b 45 10             	mov    0x10(%ebp),%eax
 804b0e8:	8b 40 04             	mov    0x4(%eax),%eax
 804b0eb:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804b0ee:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804b0f1:	3b 45 10             	cmp    0x10(%ebp),%eax
 804b0f4:	74 0b                	je     804b101 <free_bytes+0x1e2>
 804b0f6:	8b 45 10             	mov    0x10(%ebp),%eax
 804b0f9:	89 04 24             	mov    %eax,(%esp)
 804b0fc:	e8 15 00 00 00       	call   804b116 <ifree>
 804b101:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804b104:	89 04 24             	mov    %eax,(%esp)
 804b107:	e8 0a 00 00 00       	call   804b116 <ifree>
 804b10c:	eb 01                	jmp    804b10f <free_bytes+0x1f0>
 804b10e:	90                   	nop
 804b10f:	83 c4 20             	add    $0x20,%esp
 804b112:	5b                   	pop    %ebx
 804b113:	5e                   	pop    %esi
 804b114:	5d                   	pop    %ebp
 804b115:	c3                   	ret    

0804b116 <ifree>:
 804b116:	55                   	push   %ebp
 804b117:	89 e5                	mov    %esp,%ebp
 804b119:	56                   	push   %esi
 804b11a:	53                   	push   %ebx
 804b11b:	83 ec 50             	sub    $0x50,%esp
 804b11e:	e8 85 df ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804b123:	81 c3 dd 3e 00 00    	add    $0x3edd,%ebx
 804b129:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804b12d:	0f 84 9c 06 00 00    	je     804b7cf <ifree+0x6b9>
 804b133:	8b 83 2c 02 00 00    	mov    0x22c(%ebx),%eax
 804b139:	85 c0                	test   %eax,%eax
 804b13b:	75 13                	jne    804b150 <ifree+0x3a>
 804b13d:	8d 83 34 f0 ff ff    	lea    -0xfcc(%ebx),%eax
 804b143:	89 04 24             	mov    %eax,(%esp)
 804b146:	e8 35 ea ff ff       	call   8049b80 <wrtwarning>
 804b14b:	e9 86 06 00 00       	jmp    804b7d6 <ifree+0x6c0>
 804b150:	8b 83 5c 02 00 00    	mov    0x25c(%ebx),%eax
 804b156:	85 c0                	test   %eax,%eax
 804b158:	0f 85 74 06 00 00    	jne    804b7d2 <ifree+0x6bc>
 804b15e:	8b 45 08             	mov    0x8(%ebp),%eax
 804b161:	c1 e8 0c             	shr    $0xc,%eax
 804b164:	89 c2                	mov    %eax,%edx
 804b166:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
 804b16c:	29 c2                	sub    %eax,%edx
 804b16e:	89 d0                	mov    %edx,%eax
 804b170:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804b173:	83 7d f4 0b          	cmpl   $0xb,-0xc(%ebp)
 804b177:	77 13                	ja     804b18c <ifree+0x76>
 804b179:	8d 83 4c ef ff ff    	lea    -0x10b4(%ebx),%eax
 804b17f:	89 04 24             	mov    %eax,(%esp)
 804b182:	e8 f9 e9 ff ff       	call   8049b80 <wrtwarning>
 804b187:	e9 4a 06 00 00       	jmp    804b7d6 <ifree+0x6c0>
 804b18c:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
 804b192:	39 45 f4             	cmp    %eax,-0xc(%ebp)
 804b195:	76 13                	jbe    804b1aa <ifree+0x94>
 804b197:	8d 83 74 ef ff ff    	lea    -0x108c(%ebx),%eax
 804b19d:	89 04 24             	mov    %eax,(%esp)
 804b1a0:	e8 db e9 ff ff       	call   8049b80 <wrtwarning>
 804b1a5:	e9 2c 06 00 00       	jmp    804b7d6 <ifree+0x6c0>
 804b1aa:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804b1b0:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804b1b3:	c1 e2 02             	shl    $0x2,%edx
 804b1b6:	01 d0                	add    %edx,%eax
 804b1b8:	8b 00                	mov    (%eax),%eax
 804b1ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804b1bd:	83 7d f0 03          	cmpl   $0x3,-0x10(%ebp)
 804b1c1:	0f 87 19 04 00 00    	ja     804b5e0 <ifree+0x4ca>
 804b1c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b1ca:	8b 55 08             	mov    0x8(%ebp),%edx
 804b1cd:	89 55 e8             	mov    %edx,-0x18(%ebp)
 804b1d0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804b1d3:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804b1d6:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804b1d9:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804b1e0:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
 804b1e4:	75 13                	jne    804b1f9 <ifree+0xe3>
 804b1e6:	8d 83 02 f0 ff ff    	lea    -0xffe(%ebx),%eax
 804b1ec:	89 04 24             	mov    %eax,(%esp)
 804b1ef:	e8 8c e9 ff ff       	call   8049b80 <wrtwarning>
 804b1f4:	e9 dc 05 00 00       	jmp    804b7d5 <ifree+0x6bf>
 804b1f9:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
 804b1fd:	74 13                	je     804b212 <ifree+0xfc>
 804b1ff:	8d 83 ea ef ff ff    	lea    -0x1016(%ebx),%eax
 804b205:	89 04 24             	mov    %eax,(%esp)
 804b208:	e8 73 e9 ff ff       	call   8049b80 <wrtwarning>
 804b20d:	e9 c3 05 00 00       	jmp    804b7d5 <ifree+0x6bf>
 804b212:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804b215:	25 ff 0f 00 00       	and    $0xfff,%eax
 804b21a:	85 c0                	test   %eax,%eax
 804b21c:	74 13                	je     804b231 <ifree+0x11b>
 804b21e:	8d 83 9b ef ff ff    	lea    -0x1065(%ebx),%eax
 804b224:	89 04 24             	mov    %eax,(%esp)
 804b227:	e8 54 e9 ff ff       	call   8049b80 <wrtwarning>
 804b22c:	e9 a4 05 00 00       	jmp    804b7d5 <ifree+0x6bf>
 804b231:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804b237:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804b23a:	c1 e2 02             	shl    $0x2,%edx
 804b23d:	01 d0                	add    %edx,%eax
 804b23f:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
 804b245:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 804b24c:	eb 1c                	jmp    804b26a <ifree+0x154>
 804b24e:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804b254:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 804b257:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804b25a:	01 ca                	add    %ecx,%edx
 804b25c:	c1 e2 02             	shl    $0x2,%edx
 804b25f:	01 d0                	add    %edx,%eax
 804b261:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
 804b267:	ff 45 d8             	incl   -0x28(%ebp)
 804b26a:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
 804b270:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 804b273:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804b276:	01 ca                	add    %ecx,%edx
 804b278:	c1 e2 02             	shl    $0x2,%edx
 804b27b:	01 d0                	add    %edx,%eax
 804b27d:	8b 00                	mov    (%eax),%eax
 804b27f:	83 f8 03             	cmp    $0x3,%eax
 804b282:	74 ca                	je     804b24e <ifree+0x138>
 804b284:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804b287:	c1 e0 0c             	shl    $0xc,%eax
 804b28a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804b28d:	8b 83 74 02 00 00    	mov    0x274(%ebx),%eax
 804b293:	85 c0                	test   %eax,%eax
 804b295:	74 1a                	je     804b2b1 <ifree+0x19b>
 804b297:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804b29a:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b29e:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)
 804b2a5:	00 
 804b2a6:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804b2a9:	89 04 24             	mov    %eax,(%esp)
 804b2ac:	e8 a9 df ff ff       	call   804925a <memset>
 804b2b1:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804b2b4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804b2b7:	01 d0                	add    %edx,%eax
 804b2b9:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804b2bc:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b2c2:	85 c0                	test   %eax,%eax
 804b2c4:	75 12                	jne    804b2d8 <ifree+0x1c2>
 804b2c6:	c7 04 24 14 00 00 00 	movl   $0x14,(%esp)
 804b2cd:	e8 25 f5 ff ff       	call   804a7f7 <imalloc>
 804b2d2:	89 83 7c 02 00 00    	mov    %eax,0x27c(%ebx)
 804b2d8:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b2de:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804b2e1:	89 50 08             	mov    %edx,0x8(%eax)
 804b2e4:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b2ea:	8b 55 d0             	mov    -0x30(%ebp),%edx
 804b2ed:	89 50 0c             	mov    %edx,0xc(%eax)
 804b2f0:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b2f6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804b2f9:	89 50 10             	mov    %edx,0x10(%eax)
 804b2fc:	8b 83 44 02 00 00    	mov    0x244(%ebx),%eax
 804b302:	85 c0                	test   %eax,%eax
 804b304:	75 41                	jne    804b347 <ifree+0x231>
 804b306:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b30c:	8b 93 44 02 00 00    	mov    0x244(%ebx),%edx
 804b312:	89 10                	mov    %edx,(%eax)
 804b314:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b31a:	8d 93 44 02 00 00    	lea    0x244(%ebx),%edx
 804b320:	89 50 04             	mov    %edx,0x4(%eax)
 804b323:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b329:	89 83 44 02 00 00    	mov    %eax,0x244(%ebx)
 804b32f:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b335:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804b338:	c7 83 7c 02 00 00 00 	movl   $0x0,0x27c(%ebx)
 804b33f:	00 00 00 
 804b342:	e9 a5 01 00 00       	jmp    804b4ec <ifree+0x3d6>
 804b347:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804b34a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804b34d:	01 d0                	add    %edx,%eax
 804b34f:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804b352:	8b 83 44 02 00 00    	mov    0x244(%ebx),%eax
 804b358:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804b35b:	eb 08                	jmp    804b365 <ifree+0x24f>
 804b35d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b360:	8b 00                	mov    (%eax),%eax
 804b362:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804b365:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b368:	8b 40 0c             	mov    0xc(%eax),%eax
 804b36b:	39 45 e8             	cmp    %eax,-0x18(%ebp)
 804b36e:	76 09                	jbe    804b379 <ifree+0x263>
 804b370:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b373:	8b 00                	mov    (%eax),%eax
 804b375:	85 c0                	test   %eax,%eax
 804b377:	75 e4                	jne    804b35d <ifree+0x247>
 804b379:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b37c:	8b 40 08             	mov    0x8(%eax),%eax
 804b37f:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 804b382:	73 4f                	jae    804b3d3 <ifree+0x2bd>
 804b384:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b38a:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804b38d:	89 10                	mov    %edx,(%eax)
 804b38f:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b395:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804b398:	8b 52 04             	mov    0x4(%edx),%edx
 804b39b:	89 50 04             	mov    %edx,0x4(%eax)
 804b39e:	8b 93 7c 02 00 00    	mov    0x27c(%ebx),%edx
 804b3a4:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b3a7:	89 50 04             	mov    %edx,0x4(%eax)
 804b3aa:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b3b0:	8b 40 04             	mov    0x4(%eax),%eax
 804b3b3:	8b 93 7c 02 00 00    	mov    0x27c(%ebx),%edx
 804b3b9:	89 10                	mov    %edx,(%eax)
 804b3bb:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b3c1:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804b3c4:	c7 83 7c 02 00 00 00 	movl   $0x0,0x27c(%ebx)
 804b3cb:	00 00 00 
 804b3ce:	e9 19 01 00 00       	jmp    804b4ec <ifree+0x3d6>
 804b3d3:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b3d6:	8b 40 0c             	mov    0xc(%eax),%eax
 804b3d9:	39 45 e8             	cmp    %eax,-0x18(%ebp)
 804b3dc:	0f 85 91 00 00 00    	jne    804b473 <ifree+0x35d>
 804b3e2:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b3e5:	8b 50 0c             	mov    0xc(%eax),%edx
 804b3e8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804b3eb:	01 c2                	add    %eax,%edx
 804b3ed:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b3f0:	89 50 0c             	mov    %edx,0xc(%eax)
 804b3f3:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b3f6:	8b 50 10             	mov    0x10(%eax),%edx
 804b3f9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804b3fc:	01 c2                	add    %eax,%edx
 804b3fe:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b401:	89 50 10             	mov    %edx,0x10(%eax)
 804b404:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b407:	8b 00                	mov    (%eax),%eax
 804b409:	85 c0                	test   %eax,%eax
 804b40b:	0f 84 da 00 00 00    	je     804b4eb <ifree+0x3d5>
 804b411:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b414:	8b 50 0c             	mov    0xc(%eax),%edx
 804b417:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b41a:	8b 00                	mov    (%eax),%eax
 804b41c:	8b 40 08             	mov    0x8(%eax),%eax
 804b41f:	39 c2                	cmp    %eax,%edx
 804b421:	0f 85 c4 00 00 00    	jne    804b4eb <ifree+0x3d5>
 804b427:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b42a:	8b 00                	mov    (%eax),%eax
 804b42c:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804b42f:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804b432:	8b 50 0c             	mov    0xc(%eax),%edx
 804b435:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b438:	89 50 0c             	mov    %edx,0xc(%eax)
 804b43b:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b43e:	8b 50 10             	mov    0x10(%eax),%edx
 804b441:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804b444:	8b 40 10             	mov    0x10(%eax),%eax
 804b447:	01 c2                	add    %eax,%edx
 804b449:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b44c:	89 50 10             	mov    %edx,0x10(%eax)
 804b44f:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804b452:	8b 10                	mov    (%eax),%edx
 804b454:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b457:	89 10                	mov    %edx,(%eax)
 804b459:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b45c:	8b 00                	mov    (%eax),%eax
 804b45e:	85 c0                	test   %eax,%eax
 804b460:	0f 84 85 00 00 00    	je     804b4eb <ifree+0x3d5>
 804b466:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b469:	8b 00                	mov    (%eax),%eax
 804b46b:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804b46e:	89 50 04             	mov    %edx,0x4(%eax)
 804b471:	eb 79                	jmp    804b4ec <ifree+0x3d6>
 804b473:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b476:	8b 40 08             	mov    0x8(%eax),%eax
 804b479:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 804b47c:	75 1c                	jne    804b49a <ifree+0x384>
 804b47e:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b481:	8b 50 10             	mov    0x10(%eax),%edx
 804b484:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804b487:	01 c2                	add    %eax,%edx
 804b489:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b48c:	89 50 10             	mov    %edx,0x10(%eax)
 804b48f:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b492:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804b495:	89 50 08             	mov    %edx,0x8(%eax)
 804b498:	eb 52                	jmp    804b4ec <ifree+0x3d6>
 804b49a:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b49d:	8b 00                	mov    (%eax),%eax
 804b49f:	85 c0                	test   %eax,%eax
 804b4a1:	75 38                	jne    804b4db <ifree+0x3c5>
 804b4a3:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b4a9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804b4af:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b4b5:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804b4b8:	89 50 04             	mov    %edx,0x4(%eax)
 804b4bb:	8b 93 7c 02 00 00    	mov    0x27c(%ebx),%edx
 804b4c1:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b4c4:	89 10                	mov    %edx,(%eax)
 804b4c6:	8b 83 7c 02 00 00    	mov    0x27c(%ebx),%eax
 804b4cc:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804b4cf:	c7 83 7c 02 00 00 00 	movl   $0x0,0x27c(%ebx)
 804b4d6:	00 00 00 
 804b4d9:	eb 11                	jmp    804b4ec <ifree+0x3d6>
 804b4db:	8d 83 19 f0 ff ff    	lea    -0xfe7(%ebx),%eax
 804b4e1:	89 04 24             	mov    %eax,(%esp)
 804b4e4:	e8 c7 e5 ff ff       	call   8049ab0 <wrterror>
 804b4e9:	eb 01                	jmp    804b4ec <ifree+0x3d6>
 804b4eb:	90                   	nop
 804b4ec:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b4ef:	8b 00                	mov    (%eax),%eax
 804b4f1:	85 c0                	test   %eax,%eax
 804b4f3:	0f 85 cd 00 00 00    	jne    804b5c6 <ifree+0x4b0>
 804b4f9:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b4fc:	8b 50 10             	mov    0x10(%eax),%edx
 804b4ff:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 804b505:	39 c2                	cmp    %eax,%edx
 804b507:	0f 86 b9 00 00 00    	jbe    804b5c6 <ifree+0x4b0>
 804b50d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b510:	8b 50 0c             	mov    0xc(%eax),%edx
 804b513:	8b 83 78 02 00 00    	mov    0x278(%ebx),%eax
 804b519:	39 c2                	cmp    %eax,%edx
 804b51b:	0f 85 a5 00 00 00    	jne    804b5c6 <ifree+0x4b0>
 804b521:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804b528:	e8 21 ce ff ff       	call   804834e <sbrk>
 804b52d:	89 c2                	mov    %eax,%edx
 804b52f:	8b 83 78 02 00 00    	mov    0x278(%ebx),%eax
 804b535:	39 c2                	cmp    %eax,%edx
 804b537:	0f 85 89 00 00 00    	jne    804b5c6 <ifree+0x4b0>
 804b53d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b540:	8b 50 08             	mov    0x8(%eax),%edx
 804b543:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 804b549:	01 c2                	add    %eax,%edx
 804b54b:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b54e:	89 50 0c             	mov    %edx,0xc(%eax)
 804b551:	8b 93 24 00 00 00    	mov    0x24(%ebx),%edx
 804b557:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b55a:	89 50 10             	mov    %edx,0x10(%eax)
 804b55d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b560:	8b 40 0c             	mov    0xc(%eax),%eax
 804b563:	89 04 24             	mov    %eax,(%esp)
 804b566:	e8 ac ce ff ff       	call   8048417 <brk>
 804b56b:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b56e:	8b 40 0c             	mov    0xc(%eax),%eax
 804b571:	89 83 78 02 00 00    	mov    %eax,0x278(%ebx)
 804b577:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b57a:	8b 40 0c             	mov    0xc(%eax),%eax
 804b57d:	c1 e8 0c             	shr    $0xc,%eax
 804b580:	89 c2                	mov    %eax,%edx
 804b582:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
 804b588:	29 c2                	sub    %eax,%edx
 804b58a:	89 d0                	mov    %edx,%eax
 804b58c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804b58f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804b592:	48                   	dec    %eax
 804b593:	89 83 38 02 00 00    	mov    %eax,0x238(%ebx)
 804b599:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804b59c:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804b59f:	eb 1a                	jmp    804b5bb <ifree+0x4a5>
 804b5a1:	8b 8b 3c 02 00 00    	mov    0x23c(%ebx),%ecx
 804b5a7:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804b5aa:	8d 50 01             	lea    0x1(%eax),%edx
 804b5ad:	89 55 d8             	mov    %edx,-0x28(%ebp)
 804b5b0:	c1 e0 02             	shl    $0x2,%eax
 804b5b3:	01 c8                	add    %ecx,%eax
 804b5b5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804b5bb:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
 804b5c1:	39 45 d8             	cmp    %eax,-0x28(%ebp)
 804b5c4:	76 db                	jbe    804b5a1 <ifree+0x48b>
 804b5c6:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 804b5ca:	0f 84 05 02 00 00    	je     804b7d5 <ifree+0x6bf>
 804b5d0:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804b5d3:	89 04 24             	mov    %eax,(%esp)
 804b5d6:	e8 3b fb ff ff       	call   804b116 <ifree>
 804b5db:	e9 f5 01 00 00       	jmp    804b7d5 <ifree+0x6bf>
 804b5e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b5e3:	8b 55 08             	mov    0x8(%ebp),%edx
 804b5e6:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804b5e9:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804b5ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804b5ef:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804b5f2:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804b5f5:	25 ff 0f 00 00       	and    $0xfff,%eax
 804b5fa:	89 c2                	mov    %eax,%edx
 804b5fc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b5ff:	0f b7 40 0a          	movzwl 0xa(%eax),%eax
 804b603:	88 c1                	mov    %al,%cl
 804b605:	d3 ea                	shr    %cl,%edx
 804b607:	89 d0                	mov    %edx,%eax
 804b609:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804b60c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b60f:	0f b7 40 08          	movzwl 0x8(%eax),%eax
 804b613:	48                   	dec    %eax
 804b614:	89 c2                	mov    %eax,%edx
 804b616:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804b619:	21 d0                	and    %edx,%eax
 804b61b:	85 c0                	test   %eax,%eax
 804b61d:	74 13                	je     804b632 <ifree+0x51c>
 804b61f:	8d 83 b6 ef ff ff    	lea    -0x104a(%ebx),%eax
 804b625:	89 04 24             	mov    %eax,(%esp)
 804b628:	e8 53 e5 ff ff       	call   8049b80 <wrtwarning>
 804b62d:	e9 a3 01 00 00       	jmp    804b7d5 <ifree+0x6bf>
 804b632:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804b635:	c1 e8 05             	shr    $0x5,%eax
 804b638:	89 c2                	mov    %eax,%edx
 804b63a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b63d:	83 c2 04             	add    $0x4,%edx
 804b640:	8b 04 90             	mov    (%eax,%edx,4),%eax
 804b643:	8b 55 c0             	mov    -0x40(%ebp),%edx
 804b646:	83 e2 1f             	and    $0x1f,%edx
 804b649:	be 01 00 00 00       	mov    $0x1,%esi
 804b64e:	88 d1                	mov    %dl,%cl
 804b650:	d3 e6                	shl    %cl,%esi
 804b652:	89 f2                	mov    %esi,%edx
 804b654:	21 d0                	and    %edx,%eax
 804b656:	85 c0                	test   %eax,%eax
 804b658:	74 13                	je     804b66d <ifree+0x557>
 804b65a:	8d 83 d2 ef ff ff    	lea    -0x102e(%ebx),%eax
 804b660:	89 04 24             	mov    %eax,(%esp)
 804b663:	e8 18 e5 ff ff       	call   8049b80 <wrtwarning>
 804b668:	e9 68 01 00 00       	jmp    804b7d5 <ifree+0x6bf>
 804b66d:	8b 83 74 02 00 00    	mov    0x274(%ebx),%eax
 804b673:	85 c0                	test   %eax,%eax
 804b675:	74 1e                	je     804b695 <ifree+0x57f>
 804b677:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b67a:	0f b7 40 08          	movzwl 0x8(%eax),%eax
 804b67e:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b682:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)
 804b689:	00 
 804b68a:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804b68d:	89 04 24             	mov    %eax,(%esp)
 804b690:	e8 c5 db ff ff       	call   804925a <memset>
 804b695:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804b698:	c1 e8 05             	shr    $0x5,%eax
 804b69b:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804b69e:	8d 48 04             	lea    0x4(%eax),%ecx
 804b6a1:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
 804b6a4:	8b 4d c0             	mov    -0x40(%ebp),%ecx
 804b6a7:	83 e1 1f             	and    $0x1f,%ecx
 804b6aa:	be 01 00 00 00       	mov    $0x1,%esi
 804b6af:	d3 e6                	shl    %cl,%esi
 804b6b1:	89 f1                	mov    %esi,%ecx
 804b6b3:	09 d1                	or     %edx,%ecx
 804b6b5:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804b6b8:	83 c0 04             	add    $0x4,%eax
 804b6bb:	89 0c 82             	mov    %ecx,(%edx,%eax,4)
 804b6be:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b6c1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
 804b6c5:	40                   	inc    %eax
 804b6c6:	0f b7 d0             	movzwl %ax,%edx
 804b6c9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b6cc:	66 89 50 0c          	mov    %dx,0xc(%eax)
 804b6d0:	8b 93 3c 02 00 00    	mov    0x23c(%ebx),%edx
 804b6d6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b6d9:	0f b7 40 0a          	movzwl 0xa(%eax),%eax
 804b6dd:	c1 e0 02             	shl    $0x2,%eax
 804b6e0:	01 d0                	add    %edx,%eax
 804b6e2:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804b6e5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b6e8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
 804b6ec:	83 f8 01             	cmp    $0x1,%eax
 804b6ef:	75 5e                	jne    804b74f <ifree+0x639>
 804b6f1:	8b 93 3c 02 00 00    	mov    0x23c(%ebx),%edx
 804b6f7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b6fa:	0f b7 40 0a          	movzwl 0xa(%eax),%eax
 804b6fe:	c1 e0 02             	shl    $0x2,%eax
 804b701:	01 d0                	add    %edx,%eax
 804b703:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804b706:	eb 08                	jmp    804b710 <ifree+0x5fa>
 804b708:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b70b:	8b 00                	mov    (%eax),%eax
 804b70d:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804b710:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b713:	8b 00                	mov    (%eax),%eax
 804b715:	85 c0                	test   %eax,%eax
 804b717:	74 1f                	je     804b738 <ifree+0x622>
 804b719:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b71c:	8b 00                	mov    (%eax),%eax
 804b71e:	8b 00                	mov    (%eax),%eax
 804b720:	85 c0                	test   %eax,%eax
 804b722:	74 14                	je     804b738 <ifree+0x622>
 804b724:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b727:	8b 00                	mov    (%eax),%eax
 804b729:	8b 00                	mov    (%eax),%eax
 804b72b:	8b 50 04             	mov    0x4(%eax),%edx
 804b72e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b731:	8b 40 04             	mov    0x4(%eax),%eax
 804b734:	39 c2                	cmp    %eax,%edx
 804b736:	72 d0                	jb     804b708 <ifree+0x5f2>
 804b738:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b73b:	8b 10                	mov    (%eax),%edx
 804b73d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b740:	89 10                	mov    %edx,(%eax)
 804b742:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b745:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804b748:	89 10                	mov    %edx,(%eax)
 804b74a:	e9 86 00 00 00       	jmp    804b7d5 <ifree+0x6bf>
 804b74f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b752:	0f b7 50 0c          	movzwl 0xc(%eax),%edx
 804b756:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b759:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
 804b75d:	39 c2                	cmp    %eax,%edx
 804b75f:	75 74                	jne    804b7d5 <ifree+0x6bf>
 804b761:	eb 08                	jmp    804b76b <ifree+0x655>
 804b763:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b766:	8b 00                	mov    (%eax),%eax
 804b768:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804b76b:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b76e:	8b 00                	mov    (%eax),%eax
 804b770:	39 45 c4             	cmp    %eax,-0x3c(%ebp)
 804b773:	75 ee                	jne    804b763 <ifree+0x64d>
 804b775:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b778:	8b 10                	mov    (%eax),%edx
 804b77a:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b77d:	89 10                	mov    %edx,(%eax)
 804b77f:	8b 93 3c 02 00 00    	mov    0x23c(%ebx),%edx
 804b785:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b788:	8b 40 04             	mov    0x4(%eax),%eax
 804b78b:	c1 e8 0c             	shr    $0xc,%eax
 804b78e:	89 c1                	mov    %eax,%ecx
 804b790:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
 804b796:	29 c1                	sub    %eax,%ecx
 804b798:	89 c8                	mov    %ecx,%eax
 804b79a:	c1 e0 02             	shl    $0x2,%eax
 804b79d:	01 d0                	add    %edx,%eax
 804b79f:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
 804b7a5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b7a8:	8b 40 04             	mov    0x4(%eax),%eax
 804b7ab:	89 45 b8             	mov    %eax,-0x48(%ebp)
 804b7ae:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b7b1:	3b 45 b8             	cmp    -0x48(%ebp),%eax
 804b7b4:	74 0b                	je     804b7c1 <ifree+0x6ab>
 804b7b6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b7b9:	89 04 24             	mov    %eax,(%esp)
 804b7bc:	e8 55 f9 ff ff       	call   804b116 <ifree>
 804b7c1:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804b7c4:	89 04 24             	mov    %eax,(%esp)
 804b7c7:	e8 4a f9 ff ff       	call   804b116 <ifree>
 804b7cc:	90                   	nop
 804b7cd:	eb 06                	jmp    804b7d5 <ifree+0x6bf>
 804b7cf:	90                   	nop
 804b7d0:	eb 04                	jmp    804b7d6 <ifree+0x6c0>
 804b7d2:	90                   	nop
 804b7d3:	eb 01                	jmp    804b7d6 <ifree+0x6c0>
 804b7d5:	90                   	nop
 804b7d6:	83 c4 50             	add    $0x50,%esp
 804b7d9:	5b                   	pop    %ebx
 804b7da:	5e                   	pop    %esi
 804b7db:	5d                   	pop    %ebp
 804b7dc:	c3                   	ret    

0804b7dd <malloc>:
 804b7dd:	55                   	push   %ebp
 804b7de:	89 e5                	mov    %esp,%ebp
 804b7e0:	56                   	push   %esi
 804b7e1:	53                   	push   %ebx
 804b7e2:	83 ec 10             	sub    $0x10,%esp
 804b7e5:	e8 be d8 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804b7ea:	81 c3 16 38 00 00    	add    $0x3816,%ebx
 804b7f0:	8d 83 55 f0 ff ff    	lea    -0xfab(%ebx),%eax
 804b7f6:	89 83 80 02 00 00    	mov    %eax,0x280(%ebx)
 804b7fc:	8b 83 30 02 00 00    	mov    0x230(%ebx),%eax
 804b802:	8d 50 01             	lea    0x1(%eax),%edx
 804b805:	89 93 30 02 00 00    	mov    %edx,0x230(%ebx)
 804b80b:	85 c0                	test   %eax,%eax
 804b80d:	74 22                	je     804b831 <malloc+0x54>
 804b80f:	8d 83 63 f0 ff ff    	lea    -0xf9d(%ebx),%eax
 804b815:	89 04 24             	mov    %eax,(%esp)
 804b818:	e8 63 e3 ff ff       	call   8049b80 <wrtwarning>
 804b81d:	8b 83 30 02 00 00    	mov    0x230(%ebx),%eax
 804b823:	48                   	dec    %eax
 804b824:	89 83 30 02 00 00    	mov    %eax,0x230(%ebx)
 804b82a:	b8 00 00 00 00       	mov    $0x0,%eax
 804b82f:	eb 5e                	jmp    804b88f <malloc+0xb2>
 804b831:	8b 83 2c 02 00 00    	mov    0x22c(%ebx),%eax
 804b837:	85 c0                	test   %eax,%eax
 804b839:	75 05                	jne    804b840 <malloc+0x63>
 804b83b:	e8 97 e5 ff ff       	call   8049dd7 <malloc_init>
 804b840:	8b 83 6c 02 00 00    	mov    0x26c(%ebx),%eax
 804b846:	85 c0                	test   %eax,%eax
 804b848:	74 0d                	je     804b857 <malloc+0x7a>
 804b84a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804b84e:	75 07                	jne    804b857 <malloc+0x7a>
 804b850:	be 00 00 00 00       	mov    $0x0,%esi
 804b855:	eb 0d                	jmp    804b864 <malloc+0x87>
 804b857:	8b 45 08             	mov    0x8(%ebp),%eax
 804b85a:	89 04 24             	mov    %eax,(%esp)
 804b85d:	e8 95 ef ff ff       	call   804a7f7 <imalloc>
 804b862:	89 c6                	mov    %eax,%esi
 804b864:	8b 83 30 02 00 00    	mov    0x230(%ebx),%eax
 804b86a:	48                   	dec    %eax
 804b86b:	89 83 30 02 00 00    	mov    %eax,0x230(%ebx)
 804b871:	8b 83 68 02 00 00    	mov    0x268(%ebx),%eax
 804b877:	85 c0                	test   %eax,%eax
 804b879:	74 12                	je     804b88d <malloc+0xb0>
 804b87b:	85 f6                	test   %esi,%esi
 804b87d:	75 0e                	jne    804b88d <malloc+0xb0>
 804b87f:	8d 83 74 f0 ff ff    	lea    -0xf8c(%ebx),%eax
 804b885:	89 04 24             	mov    %eax,(%esp)
 804b888:	e8 23 e2 ff ff       	call   8049ab0 <wrterror>
 804b88d:	89 f0                	mov    %esi,%eax
 804b88f:	83 c4 10             	add    $0x10,%esp
 804b892:	5b                   	pop    %ebx
 804b893:	5e                   	pop    %esi
 804b894:	5d                   	pop    %ebp
 804b895:	c3                   	ret    

0804b896 <free>:
 804b896:	55                   	push   %ebp
 804b897:	89 e5                	mov    %esp,%ebp
 804b899:	53                   	push   %ebx
 804b89a:	83 ec 14             	sub    $0x14,%esp
 804b89d:	e8 06 d8 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804b8a2:	81 c3 5e 37 00 00    	add    $0x375e,%ebx
 804b8a8:	8d 83 84 f0 ff ff    	lea    -0xf7c(%ebx),%eax
 804b8ae:	89 83 80 02 00 00    	mov    %eax,0x280(%ebx)
 804b8b4:	8b 83 30 02 00 00    	mov    0x230(%ebx),%eax
 804b8ba:	8d 50 01             	lea    0x1(%eax),%edx
 804b8bd:	89 93 30 02 00 00    	mov    %edx,0x230(%ebx)
 804b8c3:	85 c0                	test   %eax,%eax
 804b8c5:	74 1d                	je     804b8e4 <free+0x4e>
 804b8c7:	8d 83 63 f0 ff ff    	lea    -0xf9d(%ebx),%eax
 804b8cd:	89 04 24             	mov    %eax,(%esp)
 804b8d0:	e8 ab e2 ff ff       	call   8049b80 <wrtwarning>
 804b8d5:	8b 83 30 02 00 00    	mov    0x230(%ebx),%eax
 804b8db:	48                   	dec    %eax
 804b8dc:	89 83 30 02 00 00    	mov    %eax,0x230(%ebx)
 804b8e2:	eb 19                	jmp    804b8fd <free+0x67>
 804b8e4:	8b 45 08             	mov    0x8(%ebp),%eax
 804b8e7:	89 04 24             	mov    %eax,(%esp)
 804b8ea:	e8 27 f8 ff ff       	call   804b116 <ifree>
 804b8ef:	8b 83 30 02 00 00    	mov    0x230(%ebx),%eax
 804b8f5:	48                   	dec    %eax
 804b8f6:	89 83 30 02 00 00    	mov    %eax,0x230(%ebx)
 804b8fc:	90                   	nop
 804b8fd:	83 c4 14             	add    $0x14,%esp
 804b900:	5b                   	pop    %ebx
 804b901:	5d                   	pop    %ebp
 804b902:	c3                   	ret    

0804b903 <realloc>:
 804b903:	55                   	push   %ebp
 804b904:	89 e5                	mov    %esp,%ebp
 804b906:	56                   	push   %esi
 804b907:	53                   	push   %ebx
 804b908:	83 ec 10             	sub    $0x10,%esp
 804b90b:	e8 98 d7 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804b910:	81 c3 f0 36 00 00    	add    $0x36f0,%ebx
 804b916:	8d 83 90 f0 ff ff    	lea    -0xf70(%ebx),%eax
 804b91c:	89 83 80 02 00 00    	mov    %eax,0x280(%ebx)
 804b922:	8b 83 30 02 00 00    	mov    0x230(%ebx),%eax
 804b928:	8d 50 01             	lea    0x1(%eax),%edx
 804b92b:	89 93 30 02 00 00    	mov    %edx,0x230(%ebx)
 804b931:	85 c0                	test   %eax,%eax
 804b933:	74 25                	je     804b95a <realloc+0x57>
 804b935:	8d 83 63 f0 ff ff    	lea    -0xf9d(%ebx),%eax
 804b93b:	89 04 24             	mov    %eax,(%esp)
 804b93e:	e8 3d e2 ff ff       	call   8049b80 <wrtwarning>
 804b943:	8b 83 30 02 00 00    	mov    0x230(%ebx),%eax
 804b949:	48                   	dec    %eax
 804b94a:	89 83 30 02 00 00    	mov    %eax,0x230(%ebx)
 804b950:	b8 00 00 00 00       	mov    $0x0,%eax
 804b955:	e9 aa 00 00 00       	jmp    804ba04 <realloc+0x101>
 804b95a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804b95e:	74 1f                	je     804b97f <realloc+0x7c>
 804b960:	8b 83 2c 02 00 00    	mov    0x22c(%ebx),%eax
 804b966:	85 c0                	test   %eax,%eax
 804b968:	75 15                	jne    804b97f <realloc+0x7c>
 804b96a:	8d 83 34 f0 ff ff    	lea    -0xfcc(%ebx),%eax
 804b970:	89 04 24             	mov    %eax,(%esp)
 804b973:	e8 08 e2 ff ff       	call   8049b80 <wrtwarning>
 804b978:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)
 804b97f:	8b 83 2c 02 00 00    	mov    0x22c(%ebx),%eax
 804b985:	85 c0                	test   %eax,%eax
 804b987:	75 05                	jne    804b98e <realloc+0x8b>
 804b989:	e8 49 e4 ff ff       	call   8049dd7 <malloc_init>
 804b98e:	8b 83 6c 02 00 00    	mov    0x26c(%ebx),%eax
 804b994:	85 c0                	test   %eax,%eax
 804b996:	74 18                	je     804b9b0 <realloc+0xad>
 804b998:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804b99c:	75 12                	jne    804b9b0 <realloc+0xad>
 804b99e:	8b 45 08             	mov    0x8(%ebp),%eax
 804b9a1:	89 04 24             	mov    %eax,(%esp)
 804b9a4:	e8 6d f7 ff ff       	call   804b116 <ifree>
 804b9a9:	be 00 00 00 00       	mov    $0x0,%esi
 804b9ae:	eb 29                	jmp    804b9d9 <realloc+0xd6>
 804b9b0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804b9b4:	75 0f                	jne    804b9c5 <realloc+0xc2>
 804b9b6:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b9b9:	89 04 24             	mov    %eax,(%esp)
 804b9bc:	e8 36 ee ff ff       	call   804a7f7 <imalloc>
 804b9c1:	89 c6                	mov    %eax,%esi
 804b9c3:	eb 14                	jmp    804b9d9 <realloc+0xd6>
 804b9c5:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b9c8:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b9cc:	8b 45 08             	mov    0x8(%ebp),%eax
 804b9cf:	89 04 24             	mov    %eax,(%esp)
 804b9d2:	e8 d6 ee ff ff       	call   804a8ad <irealloc>
 804b9d7:	89 c6                	mov    %eax,%esi
 804b9d9:	8b 83 30 02 00 00    	mov    0x230(%ebx),%eax
 804b9df:	48                   	dec    %eax
 804b9e0:	89 83 30 02 00 00    	mov    %eax,0x230(%ebx)
 804b9e6:	8b 83 68 02 00 00    	mov    0x268(%ebx),%eax
 804b9ec:	85 c0                	test   %eax,%eax
 804b9ee:	74 12                	je     804ba02 <realloc+0xff>
 804b9f0:	85 f6                	test   %esi,%esi
 804b9f2:	75 0e                	jne    804ba02 <realloc+0xff>
 804b9f4:	8d 83 74 f0 ff ff    	lea    -0xf8c(%ebx),%eax
 804b9fa:	89 04 24             	mov    %eax,(%esp)
 804b9fd:	e8 ae e0 ff ff       	call   8049ab0 <wrterror>
 804ba02:	89 f0                	mov    %esi,%eax
 804ba04:	83 c4 10             	add    $0x10,%esp
 804ba07:	5b                   	pop    %ebx
 804ba08:	5e                   	pop    %esi
 804ba09:	5d                   	pop    %ebp
 804ba0a:	c3                   	ret    

0804ba0b <calloc>:
 804ba0b:	55                   	push   %ebp
 804ba0c:	89 e5                	mov    %esp,%ebp
 804ba0e:	53                   	push   %ebx
 804ba0f:	83 ec 24             	sub    $0x24,%esp
 804ba12:	e8 91 d6 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804ba17:	81 c3 e9 35 00 00    	add    $0x35e9,%ebx
 804ba1d:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba20:	0f af 45 0c          	imul   0xc(%ebp),%eax
 804ba24:	89 04 24             	mov    %eax,(%esp)
 804ba27:	e8 b1 fd ff ff       	call   804b7dd <malloc>
 804ba2c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804ba2f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804ba33:	75 07                	jne    804ba3c <calloc+0x31>
 804ba35:	b8 00 00 00 00       	mov    $0x0,%eax
 804ba3a:	eb 21                	jmp    804ba5d <calloc+0x52>
 804ba3c:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba3f:	0f af 45 0c          	imul   0xc(%ebp),%eax
 804ba43:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ba47:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804ba4e:	00 
 804ba4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ba52:	89 04 24             	mov    %eax,(%esp)
 804ba55:	e8 00 d8 ff ff       	call   804925a <memset>
 804ba5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ba5d:	83 c4 24             	add    $0x24,%esp
 804ba60:	5b                   	pop    %ebx
 804ba61:	5d                   	pop    %ebp
 804ba62:	c3                   	ret    

0804ba63 <printf>:
 804ba63:	55                   	push   %ebp
 804ba64:	89 e5                	mov    %esp,%ebp
 804ba66:	53                   	push   %ebx
 804ba67:	83 ec 24             	sub    $0x24,%esp
 804ba6a:	e8 31 d6 ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804ba6f:	05 91 35 00 00       	add    $0x3591,%eax
 804ba74:	8d 55 0c             	lea    0xc(%ebp),%edx
 804ba77:	89 55 f0             	mov    %edx,-0x10(%ebp)
 804ba7a:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804ba7d:	89 54 24 04          	mov    %edx,0x4(%esp)
 804ba81:	8b 55 08             	mov    0x8(%ebp),%edx
 804ba84:	89 14 24             	mov    %edx,(%esp)
 804ba87:	89 c3                	mov    %eax,%ebx
 804ba89:	e8 cd 00 00 00       	call   804bb5b <vprintf>
 804ba8e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804ba91:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ba94:	83 c4 24             	add    $0x24,%esp
 804ba97:	5b                   	pop    %ebx
 804ba98:	5d                   	pop    %ebp
 804ba99:	c3                   	ret    

0804ba9a <fprintf>:
 804ba9a:	55                   	push   %ebp
 804ba9b:	89 e5                	mov    %esp,%ebp
 804ba9d:	53                   	push   %ebx
 804ba9e:	83 ec 24             	sub    $0x24,%esp
 804baa1:	e8 fa d5 ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804baa6:	05 5a 35 00 00       	add    $0x355a,%eax
 804baab:	8d 55 10             	lea    0x10(%ebp),%edx
 804baae:	89 55 f0             	mov    %edx,-0x10(%ebp)
 804bab1:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804bab4:	89 54 24 08          	mov    %edx,0x8(%esp)
 804bab8:	8b 55 0c             	mov    0xc(%ebp),%edx
 804babb:	89 54 24 04          	mov    %edx,0x4(%esp)
 804babf:	8b 55 08             	mov    0x8(%ebp),%edx
 804bac2:	89 14 24             	mov    %edx,(%esp)
 804bac5:	89 c3                	mov    %eax,%ebx
 804bac7:	e8 c6 00 00 00       	call   804bb92 <vfprintf>
 804bacc:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804bacf:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804bad2:	83 c4 24             	add    $0x24,%esp
 804bad5:	5b                   	pop    %ebx
 804bad6:	5d                   	pop    %ebp
 804bad7:	c3                   	ret    

0804bad8 <sprintf>:
 804bad8:	55                   	push   %ebp
 804bad9:	89 e5                	mov    %esp,%ebp
 804badb:	53                   	push   %ebx
 804badc:	83 ec 24             	sub    $0x24,%esp
 804badf:	e8 bc d5 ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804bae4:	05 1c 35 00 00       	add    $0x351c,%eax
 804bae9:	8d 55 10             	lea    0x10(%ebp),%edx
 804baec:	89 55 f0             	mov    %edx,-0x10(%ebp)
 804baef:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804baf2:	89 54 24 08          	mov    %edx,0x8(%esp)
 804baf6:	8b 55 0c             	mov    0xc(%ebp),%edx
 804baf9:	89 54 24 04          	mov    %edx,0x4(%esp)
 804bafd:	8b 55 08             	mov    0x8(%ebp),%edx
 804bb00:	89 14 24             	mov    %edx,(%esp)
 804bb03:	89 c3                	mov    %eax,%ebx
 804bb05:	e8 f4 00 00 00       	call   804bbfe <vsprintf>
 804bb0a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804bb0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804bb10:	83 c4 24             	add    $0x24,%esp
 804bb13:	5b                   	pop    %ebx
 804bb14:	5d                   	pop    %ebp
 804bb15:	c3                   	ret    

0804bb16 <snprintf>:
 804bb16:	55                   	push   %ebp
 804bb17:	89 e5                	mov    %esp,%ebp
 804bb19:	53                   	push   %ebx
 804bb1a:	83 ec 24             	sub    $0x24,%esp
 804bb1d:	e8 7e d5 ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804bb22:	05 de 34 00 00       	add    $0x34de,%eax
 804bb27:	8d 55 14             	lea    0x14(%ebp),%edx
 804bb2a:	89 55 f0             	mov    %edx,-0x10(%ebp)
 804bb2d:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804bb30:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804bb34:	8b 55 10             	mov    0x10(%ebp),%edx
 804bb37:	89 54 24 08          	mov    %edx,0x8(%esp)
 804bb3b:	8b 55 0c             	mov    0xc(%ebp),%edx
 804bb3e:	89 54 24 04          	mov    %edx,0x4(%esp)
 804bb42:	8b 55 08             	mov    0x8(%ebp),%edx
 804bb45:	89 14 24             	mov    %edx,(%esp)
 804bb48:	89 c3                	mov    %eax,%ebx
 804bb4a:	e8 8b 05 00 00       	call   804c0da <vsnprintf>
 804bb4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804bb52:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804bb55:	83 c4 24             	add    $0x24,%esp
 804bb58:	5b                   	pop    %ebx
 804bb59:	5d                   	pop    %ebp
 804bb5a:	c3                   	ret    

0804bb5b <vprintf>:
 804bb5b:	55                   	push   %ebp
 804bb5c:	89 e5                	mov    %esp,%ebp
 804bb5e:	53                   	push   %ebx
 804bb5f:	83 ec 14             	sub    $0x14,%esp
 804bb62:	e8 39 d5 ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804bb67:	05 99 34 00 00       	add    $0x3499,%eax
 804bb6c:	8d 15 3c f0 04 08    	lea    0x804f03c,%edx
 804bb72:	8b 12                	mov    (%edx),%edx
 804bb74:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804bb77:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804bb7b:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804bb7e:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 804bb82:	89 14 24             	mov    %edx,(%esp)
 804bb85:	89 c3                	mov    %eax,%ebx
 804bb87:	e8 06 00 00 00       	call   804bb92 <vfprintf>
 804bb8c:	83 c4 14             	add    $0x14,%esp
 804bb8f:	5b                   	pop    %ebx
 804bb90:	5d                   	pop    %ebp
 804bb91:	c3                   	ret    

0804bb92 <vfprintf>:
 804bb92:	55                   	push   %ebp
 804bb93:	89 e5                	mov    %esp,%ebp
 804bb95:	53                   	push   %ebx
 804bb96:	81 ec 24 04 00 00    	sub    $0x424,%esp
 804bb9c:	e8 07 d5 ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804bba1:	81 c3 5f 34 00 00    	add    $0x345f,%ebx
 804bba7:	8b 45 10             	mov    0x10(%ebp),%eax
 804bbaa:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804bbae:	8b 45 0c             	mov    0xc(%ebp),%eax
 804bbb1:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bbb5:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
 804bbbc:	00 
 804bbbd:	8d 85 f4 fb ff ff    	lea    -0x40c(%ebp),%eax
 804bbc3:	89 04 24             	mov    %eax,(%esp)
 804bbc6:	e8 0f 05 00 00       	call   804c0da <vsnprintf>
 804bbcb:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804bbce:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804bbd2:	7e 1e                	jle    804bbf2 <vfprintf+0x60>
 804bbd4:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804bbd7:	8b 45 08             	mov    0x8(%ebp),%eax
 804bbda:	8b 00                	mov    (%eax),%eax
 804bbdc:	89 54 24 08          	mov    %edx,0x8(%esp)
 804bbe0:	8d 95 f4 fb ff ff    	lea    -0x40c(%ebp),%edx
 804bbe6:	89 54 24 04          	mov    %edx,0x4(%esp)
 804bbea:	89 04 24             	mov    %eax,(%esp)
 804bbed:	e8 2f cd ff ff       	call   8048921 <write>
 804bbf2:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804bbf5:	81 c4 24 04 00 00    	add    $0x424,%esp
 804bbfb:	5b                   	pop    %ebx
 804bbfc:	5d                   	pop    %ebp
 804bbfd:	c3                   	ret    

0804bbfe <vsprintf>:
 804bbfe:	55                   	push   %ebp
 804bbff:	89 e5                	mov    %esp,%ebp
 804bc01:	53                   	push   %ebx
 804bc02:	83 ec 14             	sub    $0x14,%esp
 804bc05:	e8 96 d4 ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804bc0a:	05 f6 33 00 00       	add    $0x33f6,%eax
 804bc0f:	8b 55 10             	mov    0x10(%ebp),%edx
 804bc12:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804bc16:	8b 55 0c             	mov    0xc(%ebp),%edx
 804bc19:	89 54 24 08          	mov    %edx,0x8(%esp)
 804bc1d:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%esp)
 804bc24:	ff 
 804bc25:	8b 55 08             	mov    0x8(%ebp),%edx
 804bc28:	89 14 24             	mov    %edx,(%esp)
 804bc2b:	89 c3                	mov    %eax,%ebx
 804bc2d:	e8 a8 04 00 00       	call   804c0da <vsnprintf>
 804bc32:	83 c4 14             	add    $0x14,%esp
 804bc35:	5b                   	pop    %ebx
 804bc36:	5d                   	pop    %ebp
 804bc37:	c3                   	ret    

0804bc38 <fflush>:
 804bc38:	55                   	push   %ebp
 804bc39:	89 e5                	mov    %esp,%ebp
 804bc3b:	e8 60 d4 ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804bc40:	05 c0 33 00 00       	add    $0x33c0,%eax
 804bc45:	b8 00 00 00 00       	mov    $0x0,%eax
 804bc4a:	5d                   	pop    %ebp
 804bc4b:	c3                   	ret    

0804bc4c <__tolower>:
 804bc4c:	55                   	push   %ebp
 804bc4d:	89 e5                	mov    %esp,%ebp
 804bc4f:	83 ec 04             	sub    $0x4,%esp
 804bc52:	e8 66 0a 00 00       	call   804c6bd <__x86.get_pc_thunk.dx>
 804bc57:	81 c2 a9 33 00 00    	add    $0x33a9,%edx
 804bc5d:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc60:	88 45 fc             	mov    %al,-0x4(%ebp)
 804bc63:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax
 804bc67:	0f b6 84 02 60 00 00 	movzbl 0x60(%edx,%eax,1),%eax
 804bc6e:	00 
 804bc6f:	0f b6 c0             	movzbl %al,%eax
 804bc72:	83 e0 01             	and    $0x1,%eax
 804bc75:	85 c0                	test   %eax,%eax
 804bc77:	74 04                	je     804bc7d <__tolower+0x31>
 804bc79:	80 45 fc 20          	addb   $0x20,-0x4(%ebp)
 804bc7d:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax
 804bc81:	c9                   	leave  
 804bc82:	c3                   	ret    

0804bc83 <__toupper>:
 804bc83:	55                   	push   %ebp
 804bc84:	89 e5                	mov    %esp,%ebp
 804bc86:	83 ec 04             	sub    $0x4,%esp
 804bc89:	e8 2f 0a 00 00       	call   804c6bd <__x86.get_pc_thunk.dx>
 804bc8e:	81 c2 72 33 00 00    	add    $0x3372,%edx
 804bc94:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc97:	88 45 fc             	mov    %al,-0x4(%ebp)
 804bc9a:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax
 804bc9e:	0f b6 84 02 60 00 00 	movzbl 0x60(%edx,%eax,1),%eax
 804bca5:	00 
 804bca6:	0f b6 c0             	movzbl %al,%eax
 804bca9:	83 e0 02             	and    $0x2,%eax
 804bcac:	85 c0                	test   %eax,%eax
 804bcae:	74 04                	je     804bcb4 <__toupper+0x31>
 804bcb0:	80 6d fc 20          	subb   $0x20,-0x4(%ebp)
 804bcb4:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax
 804bcb8:	c9                   	leave  
 804bcb9:	c3                   	ret    

0804bcba <skip_atoi>:
 804bcba:	55                   	push   %ebp
 804bcbb:	89 e5                	mov    %esp,%ebp
 804bcbd:	56                   	push   %esi
 804bcbe:	53                   	push   %ebx
 804bcbf:	83 ec 10             	sub    $0x10,%esp
 804bcc2:	e8 dd d3 ff ff       	call   80490a4 <__x86.get_pc_thunk.cx>
 804bcc7:	81 c1 39 33 00 00    	add    $0x3339,%ecx
 804bccd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804bcd4:	eb 29                	jmp    804bcff <skip_atoi+0x45>
 804bcd6:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804bcd9:	89 d0                	mov    %edx,%eax
 804bcdb:	c1 e0 02             	shl    $0x2,%eax
 804bcde:	01 d0                	add    %edx,%eax
 804bce0:	01 c0                	add    %eax,%eax
 804bce2:	89 c6                	mov    %eax,%esi
 804bce4:	8b 45 08             	mov    0x8(%ebp),%eax
 804bce7:	8b 00                	mov    (%eax),%eax
 804bce9:	8d 58 01             	lea    0x1(%eax),%ebx
 804bcec:	8b 55 08             	mov    0x8(%ebp),%edx
 804bcef:	89 1a                	mov    %ebx,(%edx)
 804bcf1:	0f b6 00             	movzbl (%eax),%eax
 804bcf4:	0f be c0             	movsbl %al,%eax
 804bcf7:	01 f0                	add    %esi,%eax
 804bcf9:	83 e8 30             	sub    $0x30,%eax
 804bcfc:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804bcff:	8b 45 08             	mov    0x8(%ebp),%eax
 804bd02:	8b 00                	mov    (%eax),%eax
 804bd04:	0f b6 00             	movzbl (%eax),%eax
 804bd07:	0f b6 c0             	movzbl %al,%eax
 804bd0a:	0f b6 84 01 60 00 00 	movzbl 0x60(%ecx,%eax,1),%eax
 804bd11:	00 
 804bd12:	0f b6 c0             	movzbl %al,%eax
 804bd15:	83 e0 04             	and    $0x4,%eax
 804bd18:	85 c0                	test   %eax,%eax
 804bd1a:	75 ba                	jne    804bcd6 <skip_atoi+0x1c>
 804bd1c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804bd1f:	83 c4 10             	add    $0x10,%esp
 804bd22:	5b                   	pop    %ebx
 804bd23:	5e                   	pop    %esi
 804bd24:	5d                   	pop    %ebp
 804bd25:	c3                   	ret    

0804bd26 <number>:
 804bd26:	55                   	push   %ebp
 804bd27:	89 e5                	mov    %esp,%ebp
 804bd29:	57                   	push   %edi
 804bd2a:	56                   	push   %esi
 804bd2b:	53                   	push   %ebx
 804bd2c:	81 ec dc 00 00 00    	sub    $0xdc,%esp
 804bd32:	e8 8a 09 00 00       	call   804c6c1 <__x86.get_pc_thunk.si>
 804bd37:	81 c6 c9 32 00 00    	add    $0x32c9,%esi
 804bd3d:	8b 45 10             	mov    0x10(%ebp),%eax
 804bd40:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 804bd46:	8b 45 14             	mov    0x14(%ebp),%eax
 804bd49:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 804bd4f:	8d 85 65 ff ff ff    	lea    -0x9b(%ebp),%eax
 804bd55:	8d 96 a0 f0 ff ff    	lea    -0xf60(%esi),%edx
 804bd5b:	bb 25 00 00 00       	mov    $0x25,%ebx
 804bd60:	89 c1                	mov    %eax,%ecx
 804bd62:	83 e1 01             	and    $0x1,%ecx
 804bd65:	85 c9                	test   %ecx,%ecx
 804bd67:	74 0c                	je     804bd75 <number+0x4f>
 804bd69:	0f b6 0a             	movzbl (%edx),%ecx
 804bd6c:	88 08                	mov    %cl,(%eax)
 804bd6e:	8d 40 01             	lea    0x1(%eax),%eax
 804bd71:	8d 52 01             	lea    0x1(%edx),%edx
 804bd74:	4b                   	dec    %ebx
 804bd75:	89 c1                	mov    %eax,%ecx
 804bd77:	83 e1 02             	and    $0x2,%ecx
 804bd7a:	85 c9                	test   %ecx,%ecx
 804bd7c:	74 0f                	je     804bd8d <number+0x67>
 804bd7e:	0f b7 0a             	movzwl (%edx),%ecx
 804bd81:	66 89 08             	mov    %cx,(%eax)
 804bd84:	8d 40 02             	lea    0x2(%eax),%eax
 804bd87:	8d 52 02             	lea    0x2(%edx),%edx
 804bd8a:	83 eb 02             	sub    $0x2,%ebx
 804bd8d:	89 df                	mov    %ebx,%edi
 804bd8f:	83 e7 fc             	and    $0xfffffffc,%edi
 804bd92:	89 bd 2c ff ff ff    	mov    %edi,-0xd4(%ebp)
 804bd98:	b9 00 00 00 00       	mov    $0x0,%ecx
 804bd9d:	8b 3c 0a             	mov    (%edx,%ecx,1),%edi
 804bda0:	89 3c 08             	mov    %edi,(%eax,%ecx,1)
 804bda3:	83 c1 04             	add    $0x4,%ecx
 804bda6:	3b 8d 2c ff ff ff    	cmp    -0xd4(%ebp),%ecx
 804bdac:	72 ef                	jb     804bd9d <number+0x77>
 804bdae:	01 c8                	add    %ecx,%eax
 804bdb0:	01 ca                	add    %ecx,%edx
 804bdb2:	b9 00 00 00 00       	mov    $0x0,%ecx
 804bdb7:	89 df                	mov    %ebx,%edi
 804bdb9:	83 e7 02             	and    $0x2,%edi
 804bdbc:	85 ff                	test   %edi,%edi
 804bdbe:	74 0b                	je     804bdcb <number+0xa5>
 804bdc0:	0f b7 3c 0a          	movzwl (%edx,%ecx,1),%edi
 804bdc4:	66 89 3c 08          	mov    %di,(%eax,%ecx,1)
 804bdc8:	83 c1 02             	add    $0x2,%ecx
 804bdcb:	83 e3 01             	and    $0x1,%ebx
 804bdce:	85 db                	test   %ebx,%ebx
 804bdd0:	74 07                	je     804bdd9 <number+0xb3>
 804bdd2:	0f b6 14 0a          	movzbl (%edx,%ecx,1),%edx
 804bdd6:	88 14 08             	mov    %dl,(%eax,%ecx,1)
 804bdd9:	8d 8d 40 ff ff ff    	lea    -0xc0(%ebp),%ecx
 804bddf:	8d 96 c8 f0 ff ff    	lea    -0xf38(%esi),%edx
 804bde5:	b8 25 00 00 00       	mov    $0x25,%eax
 804bdea:	83 e0 fc             	and    $0xfffffffc,%eax
 804bded:	89 c7                	mov    %eax,%edi
 804bdef:	b8 00 00 00 00       	mov    $0x0,%eax
 804bdf4:	8b 9c 06 c8 f0 ff ff 	mov    -0xf38(%esi,%eax,1),%ebx
 804bdfb:	89 9c 05 40 ff ff ff 	mov    %ebx,-0xc0(%ebp,%eax,1)
 804be02:	83 c0 04             	add    $0x4,%eax
 804be05:	39 f8                	cmp    %edi,%eax
 804be07:	72 eb                	jb     804bdf4 <number+0xce>
 804be09:	01 c1                	add    %eax,%ecx
 804be0b:	01 c2                	add    %eax,%edx
 804be0d:	0f b6 02             	movzbl (%edx),%eax
 804be10:	88 01                	mov    %al,(%ecx)
 804be12:	8b 45 24             	mov    0x24(%ebp),%eax
 804be15:	83 e0 40             	and    $0x40,%eax
 804be18:	85 c0                	test   %eax,%eax
 804be1a:	74 08                	je     804be24 <number+0xfe>
 804be1c:	8d 85 40 ff ff ff    	lea    -0xc0(%ebp),%eax
 804be22:	eb 06                	jmp    804be2a <number+0x104>
 804be24:	8d 85 65 ff ff ff    	lea    -0x9b(%ebp),%eax
 804be2a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804be2d:	8b 45 24             	mov    0x24(%ebp),%eax
 804be30:	83 e0 10             	and    $0x10,%eax
 804be33:	85 c0                	test   %eax,%eax
 804be35:	74 04                	je     804be3b <number+0x115>
 804be37:	83 65 24 fe          	andl   $0xfffffffe,0x24(%ebp)
 804be3b:	83 7d 18 01          	cmpl   $0x1,0x18(%ebp)
 804be3f:	7e 06                	jle    804be47 <number+0x121>
 804be41:	83 7d 18 24          	cmpl   $0x24,0x18(%ebp)
 804be45:	7e 08                	jle    804be4f <number+0x129>
 804be47:	8b 45 08             	mov    0x8(%ebp),%eax
 804be4a:	e9 80 02 00 00       	jmp    804c0cf <number+0x3a9>
 804be4f:	8b 45 24             	mov    0x24(%ebp),%eax
 804be52:	83 e0 01             	and    $0x1,%eax
 804be55:	85 c0                	test   %eax,%eax
 804be57:	74 04                	je     804be5d <number+0x137>
 804be59:	b0 30                	mov    $0x30,%al
 804be5b:	eb 02                	jmp    804be5f <number+0x139>
 804be5d:	b0 20                	mov    $0x20,%al
 804be5f:	88 45 d3             	mov    %al,-0x2d(%ebp)
 804be62:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
 804be66:	8b 45 24             	mov    0x24(%ebp),%eax
 804be69:	83 e0 02             	and    $0x2,%eax
 804be6c:	85 c0                	test   %eax,%eax
 804be6e:	74 49                	je     804beb9 <number+0x193>
 804be70:	83 bd 34 ff ff ff 00 	cmpl   $0x0,-0xcc(%ebp)
 804be77:	79 1c                	jns    804be95 <number+0x16f>
 804be79:	c6 45 e7 2d          	movb   $0x2d,-0x19(%ebp)
 804be7d:	f7 9d 30 ff ff ff    	negl   -0xd0(%ebp)
 804be83:	83 95 34 ff ff ff 00 	adcl   $0x0,-0xcc(%ebp)
 804be8a:	f7 9d 34 ff ff ff    	negl   -0xcc(%ebp)
 804be90:	ff 4d 1c             	decl   0x1c(%ebp)
 804be93:	eb 24                	jmp    804beb9 <number+0x193>
 804be95:	8b 45 24             	mov    0x24(%ebp),%eax
 804be98:	83 e0 04             	and    $0x4,%eax
 804be9b:	85 c0                	test   %eax,%eax
 804be9d:	74 09                	je     804bea8 <number+0x182>
 804be9f:	c6 45 e7 2b          	movb   $0x2b,-0x19(%ebp)
 804bea3:	ff 4d 1c             	decl   0x1c(%ebp)
 804bea6:	eb 11                	jmp    804beb9 <number+0x193>
 804bea8:	8b 45 24             	mov    0x24(%ebp),%eax
 804beab:	83 e0 08             	and    $0x8,%eax
 804beae:	85 c0                	test   %eax,%eax
 804beb0:	74 07                	je     804beb9 <number+0x193>
 804beb2:	c6 45 e7 20          	movb   $0x20,-0x19(%ebp)
 804beb6:	ff 4d 1c             	decl   0x1c(%ebp)
 804beb9:	8b 45 24             	mov    0x24(%ebp),%eax
 804bebc:	83 e0 20             	and    $0x20,%eax
 804bebf:	85 c0                	test   %eax,%eax
 804bec1:	74 15                	je     804bed8 <number+0x1b2>
 804bec3:	83 7d 18 10          	cmpl   $0x10,0x18(%ebp)
 804bec7:	75 06                	jne    804becf <number+0x1a9>
 804bec9:	83 6d 1c 02          	subl   $0x2,0x1c(%ebp)
 804becd:	eb 09                	jmp    804bed8 <number+0x1b2>
 804becf:	83 7d 18 08          	cmpl   $0x8,0x18(%ebp)
 804bed3:	75 03                	jne    804bed8 <number+0x1b2>
 804bed5:	ff 4d 1c             	decl   0x1c(%ebp)
 804bed8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 804bedf:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 804bee5:	0b 85 30 ff ff ff    	or     -0xd0(%ebp),%eax
 804beeb:	85 c0                	test   %eax,%eax
 804beed:	75 13                	jne    804bf02 <number+0x1dc>
 804beef:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804bef2:	8d 50 01             	lea    0x1(%eax),%edx
 804bef5:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804bef8:	c6 44 05 8a 30       	movb   $0x30,-0x76(%ebp,%eax,1)
 804befd:	e9 89 00 00 00       	jmp    804bf8b <number+0x265>
 804bf02:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 804bf08:	8b 95 34 ff ff ff    	mov    -0xcc(%ebp),%edx
 804bf0e:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804bf11:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804bf14:	8b 45 18             	mov    0x18(%ebp),%eax
 804bf17:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804bf1a:	eb 65                	jmp    804bf81 <number+0x25b>
 804bf1c:	8b 7d e0             	mov    -0x20(%ebp),%edi
 804bf1f:	8d 47 01             	lea    0x1(%edi),%eax
 804bf22:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804bf25:	8b 4d cc             	mov    -0x34(%ebp),%ecx
 804bf28:	bb 00 00 00 00       	mov    $0x0,%ebx
 804bf2d:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804bf30:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804bf33:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804bf37:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
 804bf3b:	89 04 24             	mov    %eax,(%esp)
 804bf3e:	89 54 24 04          	mov    %edx,0x4(%esp)
 804bf42:	89 f3                	mov    %esi,%ebx
 804bf44:	e8 b9 0f 00 00       	call   804cf02 <__umoddi3>
 804bf49:	89 c2                	mov    %eax,%edx
 804bf4b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804bf4e:	01 d0                	add    %edx,%eax
 804bf50:	0f b6 00             	movzbl (%eax),%eax
 804bf53:	88 44 3d 8a          	mov    %al,-0x76(%ebp,%edi,1)
 804bf57:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804bf5a:	ba 00 00 00 00       	mov    $0x0,%edx
 804bf5f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bf63:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804bf67:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804bf6a:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804bf6d:	89 04 24             	mov    %eax,(%esp)
 804bf70:	89 54 24 04          	mov    %edx,0x4(%esp)
 804bf74:	89 f3                	mov    %esi,%ebx
 804bf76:	e8 2d 0f 00 00       	call   804cea8 <__udivdi3>
 804bf7b:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804bf7e:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804bf81:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804bf84:	0b 45 d8             	or     -0x28(%ebp),%eax
 804bf87:	85 c0                	test   %eax,%eax
 804bf89:	75 91                	jne    804bf1c <number+0x1f6>
 804bf8b:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804bf8e:	3b 45 20             	cmp    0x20(%ebp),%eax
 804bf91:	7e 06                	jle    804bf99 <number+0x273>
 804bf93:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804bf96:	89 45 20             	mov    %eax,0x20(%ebp)
 804bf99:	8b 45 20             	mov    0x20(%ebp),%eax
 804bf9c:	29 45 1c             	sub    %eax,0x1c(%ebp)
 804bf9f:	8b 45 24             	mov    0x24(%ebp),%eax
 804bfa2:	83 e0 11             	and    $0x11,%eax
 804bfa5:	85 c0                	test   %eax,%eax
 804bfa7:	75 20                	jne    804bfc9 <number+0x2a3>
 804bfa9:	eb 11                	jmp    804bfbc <number+0x296>
 804bfab:	8b 45 08             	mov    0x8(%ebp),%eax
 804bfae:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804bfb1:	77 06                	ja     804bfb9 <number+0x293>
 804bfb3:	8b 45 08             	mov    0x8(%ebp),%eax
 804bfb6:	c6 00 20             	movb   $0x20,(%eax)
 804bfb9:	ff 45 08             	incl   0x8(%ebp)
 804bfbc:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804bfbf:	8d 50 ff             	lea    -0x1(%eax),%edx
 804bfc2:	89 55 1c             	mov    %edx,0x1c(%ebp)
 804bfc5:	85 c0                	test   %eax,%eax
 804bfc7:	7f e2                	jg     804bfab <number+0x285>
 804bfc9:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)
 804bfcd:	74 14                	je     804bfe3 <number+0x2bd>
 804bfcf:	8b 45 08             	mov    0x8(%ebp),%eax
 804bfd2:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804bfd5:	77 09                	ja     804bfe0 <number+0x2ba>
 804bfd7:	8b 45 08             	mov    0x8(%ebp),%eax
 804bfda:	0f b6 55 e7          	movzbl -0x19(%ebp),%edx
 804bfde:	88 10                	mov    %dl,(%eax)
 804bfe0:	ff 45 08             	incl   0x8(%ebp)
 804bfe3:	8b 45 24             	mov    0x24(%ebp),%eax
 804bfe6:	83 e0 20             	and    $0x20,%eax
 804bfe9:	85 c0                	test   %eax,%eax
 804bfeb:	74 47                	je     804c034 <number+0x30e>
 804bfed:	83 7d 18 08          	cmpl   $0x8,0x18(%ebp)
 804bff1:	75 13                	jne    804c006 <number+0x2e0>
 804bff3:	8b 45 08             	mov    0x8(%ebp),%eax
 804bff6:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804bff9:	77 06                	ja     804c001 <number+0x2db>
 804bffb:	8b 45 08             	mov    0x8(%ebp),%eax
 804bffe:	c6 00 30             	movb   $0x30,(%eax)
 804c001:	ff 45 08             	incl   0x8(%ebp)
 804c004:	eb 2e                	jmp    804c034 <number+0x30e>
 804c006:	83 7d 18 10          	cmpl   $0x10,0x18(%ebp)
 804c00a:	75 28                	jne    804c034 <number+0x30e>
 804c00c:	8b 45 08             	mov    0x8(%ebp),%eax
 804c00f:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804c012:	77 06                	ja     804c01a <number+0x2f4>
 804c014:	8b 45 08             	mov    0x8(%ebp),%eax
 804c017:	c6 00 30             	movb   $0x30,(%eax)
 804c01a:	ff 45 08             	incl   0x8(%ebp)
 804c01d:	8b 45 08             	mov    0x8(%ebp),%eax
 804c020:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804c023:	77 0c                	ja     804c031 <number+0x30b>
 804c025:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804c028:	0f b6 50 21          	movzbl 0x21(%eax),%edx
 804c02c:	8b 45 08             	mov    0x8(%ebp),%eax
 804c02f:	88 10                	mov    %dl,(%eax)
 804c031:	ff 45 08             	incl   0x8(%ebp)
 804c034:	8b 45 24             	mov    0x24(%ebp),%eax
 804c037:	83 e0 10             	and    $0x10,%eax
 804c03a:	85 c0                	test   %eax,%eax
 804c03c:	75 36                	jne    804c074 <number+0x34e>
 804c03e:	eb 14                	jmp    804c054 <number+0x32e>
 804c040:	8b 45 08             	mov    0x8(%ebp),%eax
 804c043:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804c046:	77 09                	ja     804c051 <number+0x32b>
 804c048:	8b 45 08             	mov    0x8(%ebp),%eax
 804c04b:	0f b6 55 d3          	movzbl -0x2d(%ebp),%edx
 804c04f:	88 10                	mov    %dl,(%eax)
 804c051:	ff 45 08             	incl   0x8(%ebp)
 804c054:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804c057:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c05a:	89 55 1c             	mov    %edx,0x1c(%ebp)
 804c05d:	85 c0                	test   %eax,%eax
 804c05f:	7f df                	jg     804c040 <number+0x31a>
 804c061:	eb 11                	jmp    804c074 <number+0x34e>
 804c063:	8b 45 08             	mov    0x8(%ebp),%eax
 804c066:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804c069:	77 06                	ja     804c071 <number+0x34b>
 804c06b:	8b 45 08             	mov    0x8(%ebp),%eax
 804c06e:	c6 00 30             	movb   $0x30,(%eax)
 804c071:	ff 45 08             	incl   0x8(%ebp)
 804c074:	8b 45 20             	mov    0x20(%ebp),%eax
 804c077:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c07a:	89 55 20             	mov    %edx,0x20(%ebp)
 804c07d:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c080:	7f e1                	jg     804c063 <number+0x33d>
 804c082:	eb 1b                	jmp    804c09f <number+0x379>
 804c084:	8b 45 08             	mov    0x8(%ebp),%eax
 804c087:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804c08a:	77 10                	ja     804c09c <number+0x376>
 804c08c:	8d 55 8a             	lea    -0x76(%ebp),%edx
 804c08f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c092:	01 d0                	add    %edx,%eax
 804c094:	0f b6 10             	movzbl (%eax),%edx
 804c097:	8b 45 08             	mov    0x8(%ebp),%eax
 804c09a:	88 10                	mov    %dl,(%eax)
 804c09c:	ff 45 08             	incl   0x8(%ebp)
 804c09f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c0a2:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c0a5:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804c0a8:	85 c0                	test   %eax,%eax
 804c0aa:	7f d8                	jg     804c084 <number+0x35e>
 804c0ac:	eb 11                	jmp    804c0bf <number+0x399>
 804c0ae:	8b 45 08             	mov    0x8(%ebp),%eax
 804c0b1:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804c0b4:	77 06                	ja     804c0bc <number+0x396>
 804c0b6:	8b 45 08             	mov    0x8(%ebp),%eax
 804c0b9:	c6 00 20             	movb   $0x20,(%eax)
 804c0bc:	ff 45 08             	incl   0x8(%ebp)
 804c0bf:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804c0c2:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c0c5:	89 55 1c             	mov    %edx,0x1c(%ebp)
 804c0c8:	85 c0                	test   %eax,%eax
 804c0ca:	7f e2                	jg     804c0ae <number+0x388>
 804c0cc:	8b 45 08             	mov    0x8(%ebp),%eax
 804c0cf:	81 c4 dc 00 00 00    	add    $0xdc,%esp
 804c0d5:	5b                   	pop    %ebx
 804c0d6:	5e                   	pop    %esi
 804c0d7:	5f                   	pop    %edi
 804c0d8:	5d                   	pop    %ebp
 804c0d9:	c3                   	ret    

0804c0da <vsnprintf>:
 804c0da:	55                   	push   %ebp
 804c0db:	89 e5                	mov    %esp,%ebp
 804c0dd:	53                   	push   %ebx
 804c0de:	83 ec 64             	sub    $0x64,%esp
 804c0e1:	e8 c2 cf ff ff       	call   80490a8 <__x86.get_pc_thunk.bx>
 804c0e6:	81 c3 1a 2f 00 00    	add    $0x2f1a,%ebx
 804c0ec:	8b 45 08             	mov    0x8(%ebp),%eax
 804c0ef:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c0f2:	8b 45 0c             	mov    0xc(%ebp),%eax
 804c0f5:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c0f8:	8b 45 08             	mov    0x8(%ebp),%eax
 804c0fb:	01 d0                	add    %edx,%eax
 804c0fd:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804c100:	8b 45 08             	mov    0x8(%ebp),%eax
 804c103:	48                   	dec    %eax
 804c104:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c107:	0f 86 76 05 00 00    	jbe    804c683 <.L138+0x116>
 804c10d:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
 804c114:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804c117:	8b 45 08             	mov    0x8(%ebp),%eax
 804c11a:	29 c2                	sub    %eax,%edx
 804c11c:	89 d0                	mov    %edx,%eax
 804c11e:	40                   	inc    %eax
 804c11f:	89 45 0c             	mov    %eax,0xc(%ebp)
 804c122:	e9 5c 05 00 00       	jmp    804c683 <.L138+0x116>
 804c127:	8b 45 10             	mov    0x10(%ebp),%eax
 804c12a:	0f b6 00             	movzbl (%eax),%eax
 804c12d:	3c 25                	cmp    $0x25,%al
 804c12f:	74 1b                	je     804c14c <vsnprintf+0x72>
 804c131:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c134:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c137:	77 0b                	ja     804c144 <vsnprintf+0x6a>
 804c139:	8b 45 10             	mov    0x10(%ebp),%eax
 804c13c:	0f b6 10             	movzbl (%eax),%edx
 804c13f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c142:	88 10                	mov    %dl,(%eax)
 804c144:	ff 45 e4             	incl   -0x1c(%ebp)
 804c147:	e9 30 05 00 00       	jmp    804c67c <.L138+0x10f>
 804c14c:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 804c153:	8b 45 10             	mov    0x10(%ebp),%eax
 804c156:	40                   	inc    %eax
 804c157:	89 45 10             	mov    %eax,0x10(%ebp)
 804c15a:	8b 45 10             	mov    0x10(%ebp),%eax
 804c15d:	0f b6 00             	movzbl (%eax),%eax
 804c160:	0f be c0             	movsbl %al,%eax
 804c163:	83 e8 20             	sub    $0x20,%eax
 804c166:	83 f8 10             	cmp    $0x10,%eax
 804c169:	77 2c                	ja     804c197 <.L70>
 804c16b:	c1 e0 02             	shl    $0x2,%eax
 804c16e:	8b 84 18 f4 f0 ff ff 	mov    -0xf0c(%eax,%ebx,1),%eax
 804c175:	01 d8                	add    %ebx,%eax
 804c177:	ff e0                	jmp    *%eax

0804c179 <.L75>:
 804c179:	83 4d d8 10          	orl    $0x10,-0x28(%ebp)
 804c17d:	eb d4                	jmp    804c153 <vsnprintf+0x79>

0804c17f <.L74>:
 804c17f:	83 4d d8 04          	orl    $0x4,-0x28(%ebp)
 804c183:	eb ce                	jmp    804c153 <vsnprintf+0x79>

0804c185 <.L71>:
 804c185:	83 4d d8 08          	orl    $0x8,-0x28(%ebp)
 804c189:	eb c8                	jmp    804c153 <vsnprintf+0x79>

0804c18b <.L73>:
 804c18b:	83 4d d8 20          	orl    $0x20,-0x28(%ebp)
 804c18f:	eb c2                	jmp    804c153 <vsnprintf+0x79>

0804c191 <.L76>:
 804c191:	83 4d d8 01          	orl    $0x1,-0x28(%ebp)
 804c195:	eb bc                	jmp    804c153 <vsnprintf+0x79>

0804c197 <.L70>:
 804c197:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)
 804c19e:	8b 45 10             	mov    0x10(%ebp),%eax
 804c1a1:	0f b6 00             	movzbl (%eax),%eax
 804c1a4:	0f b6 c0             	movzbl %al,%eax
 804c1a7:	0f b6 84 03 60 00 00 	movzbl 0x60(%ebx,%eax,1),%eax
 804c1ae:	00 
 804c1af:	0f b6 c0             	movzbl %al,%eax
 804c1b2:	83 e0 04             	and    $0x4,%eax
 804c1b5:	85 c0                	test   %eax,%eax
 804c1b7:	74 10                	je     804c1c9 <.L70+0x32>
 804c1b9:	8d 45 10             	lea    0x10(%ebp),%eax
 804c1bc:	89 04 24             	mov    %eax,(%esp)
 804c1bf:	e8 f6 fa ff ff       	call   804bcba <skip_atoi>
 804c1c4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804c1c7:	eb 2c                	jmp    804c1f5 <.L70+0x5e>
 804c1c9:	8b 45 10             	mov    0x10(%ebp),%eax
 804c1cc:	0f b6 00             	movzbl (%eax),%eax
 804c1cf:	3c 2a                	cmp    $0x2a,%al
 804c1d1:	75 22                	jne    804c1f5 <.L70+0x5e>
 804c1d3:	8b 45 10             	mov    0x10(%ebp),%eax
 804c1d6:	40                   	inc    %eax
 804c1d7:	89 45 10             	mov    %eax,0x10(%ebp)
 804c1da:	8b 45 14             	mov    0x14(%ebp),%eax
 804c1dd:	8d 50 04             	lea    0x4(%eax),%edx
 804c1e0:	89 55 14             	mov    %edx,0x14(%ebp)
 804c1e3:	8b 00                	mov    (%eax),%eax
 804c1e5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804c1e8:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804c1ec:	79 07                	jns    804c1f5 <.L70+0x5e>
 804c1ee:	f7 5d d4             	negl   -0x2c(%ebp)
 804c1f1:	83 4d d8 10          	orl    $0x10,-0x28(%ebp)
 804c1f5:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)
 804c1fc:	8b 45 10             	mov    0x10(%ebp),%eax
 804c1ff:	0f b6 00             	movzbl (%eax),%eax
 804c202:	3c 2e                	cmp    $0x2e,%al
 804c204:	75 5e                	jne    804c264 <.L70+0xcd>
 804c206:	8b 45 10             	mov    0x10(%ebp),%eax
 804c209:	40                   	inc    %eax
 804c20a:	89 45 10             	mov    %eax,0x10(%ebp)
 804c20d:	8b 45 10             	mov    0x10(%ebp),%eax
 804c210:	0f b6 00             	movzbl (%eax),%eax
 804c213:	0f b6 c0             	movzbl %al,%eax
 804c216:	0f b6 84 03 60 00 00 	movzbl 0x60(%ebx,%eax,1),%eax
 804c21d:	00 
 804c21e:	0f b6 c0             	movzbl %al,%eax
 804c221:	83 e0 04             	and    $0x4,%eax
 804c224:	85 c0                	test   %eax,%eax
 804c226:	74 10                	je     804c238 <.L70+0xa1>
 804c228:	8d 45 10             	lea    0x10(%ebp),%eax
 804c22b:	89 04 24             	mov    %eax,(%esp)
 804c22e:	e8 87 fa ff ff       	call   804bcba <skip_atoi>
 804c233:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804c236:	eb 1f                	jmp    804c257 <.L70+0xc0>
 804c238:	8b 45 10             	mov    0x10(%ebp),%eax
 804c23b:	0f b6 00             	movzbl (%eax),%eax
 804c23e:	3c 2a                	cmp    $0x2a,%al
 804c240:	75 15                	jne    804c257 <.L70+0xc0>
 804c242:	8b 45 10             	mov    0x10(%ebp),%eax
 804c245:	40                   	inc    %eax
 804c246:	89 45 10             	mov    %eax,0x10(%ebp)
 804c249:	8b 45 14             	mov    0x14(%ebp),%eax
 804c24c:	8d 50 04             	lea    0x4(%eax),%edx
 804c24f:	89 55 14             	mov    %edx,0x14(%ebp)
 804c252:	8b 00                	mov    (%eax),%eax
 804c254:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804c257:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
 804c25b:	79 07                	jns    804c264 <.L70+0xcd>
 804c25d:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 804c264:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)
 804c26b:	8b 45 10             	mov    0x10(%ebp),%eax
 804c26e:	0f b6 00             	movzbl (%eax),%eax
 804c271:	3c 68                	cmp    $0x68,%al
 804c273:	74 1e                	je     804c293 <.L70+0xfc>
 804c275:	8b 45 10             	mov    0x10(%ebp),%eax
 804c278:	0f b6 00             	movzbl (%eax),%eax
 804c27b:	3c 6c                	cmp    $0x6c,%al
 804c27d:	74 14                	je     804c293 <.L70+0xfc>
 804c27f:	8b 45 10             	mov    0x10(%ebp),%eax
 804c282:	0f b6 00             	movzbl (%eax),%eax
 804c285:	3c 4c                	cmp    $0x4c,%al
 804c287:	74 0a                	je     804c293 <.L70+0xfc>
 804c289:	8b 45 10             	mov    0x10(%ebp),%eax
 804c28c:	0f b6 00             	movzbl (%eax),%eax
 804c28f:	3c 5a                	cmp    $0x5a,%al
 804c291:	75 31                	jne    804c2c4 <.L70+0x12d>
 804c293:	8b 45 10             	mov    0x10(%ebp),%eax
 804c296:	0f b6 00             	movzbl (%eax),%eax
 804c299:	0f be c0             	movsbl %al,%eax
 804c29c:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804c29f:	8b 45 10             	mov    0x10(%ebp),%eax
 804c2a2:	40                   	inc    %eax
 804c2a3:	89 45 10             	mov    %eax,0x10(%ebp)
 804c2a6:	83 7d cc 6c          	cmpl   $0x6c,-0x34(%ebp)
 804c2aa:	75 18                	jne    804c2c4 <.L70+0x12d>
 804c2ac:	8b 45 10             	mov    0x10(%ebp),%eax
 804c2af:	0f b6 00             	movzbl (%eax),%eax
 804c2b2:	3c 6c                	cmp    $0x6c,%al
 804c2b4:	75 0e                	jne    804c2c4 <.L70+0x12d>
 804c2b6:	c7 45 cc 4c 00 00 00 	movl   $0x4c,-0x34(%ebp)
 804c2bd:	8b 45 10             	mov    0x10(%ebp),%eax
 804c2c0:	40                   	inc    %eax
 804c2c1:	89 45 10             	mov    %eax,0x10(%ebp)
 804c2c4:	8b 45 10             	mov    0x10(%ebp),%eax
 804c2c7:	0f b6 00             	movzbl (%eax),%eax
 804c2ca:	3c 71                	cmp    $0x71,%al
 804c2cc:	75 0e                	jne    804c2dc <.L70+0x145>
 804c2ce:	c7 45 cc 4c 00 00 00 	movl   $0x4c,-0x34(%ebp)
 804c2d5:	8b 45 10             	mov    0x10(%ebp),%eax
 804c2d8:	40                   	inc    %eax
 804c2d9:	89 45 10             	mov    %eax,0x10(%ebp)
 804c2dc:	c7 45 e8 0a 00 00 00 	movl   $0xa,-0x18(%ebp)
 804c2e3:	8b 45 10             	mov    0x10(%ebp),%eax
 804c2e6:	0f b6 00             	movzbl (%eax),%eax
 804c2e9:	0f be c0             	movsbl %al,%eax
 804c2ec:	83 e8 25             	sub    $0x25,%eax
 804c2ef:	83 f8 53             	cmp    $0x53,%eax
 804c2f2:	0f 87 33 02 00 00    	ja     804c52b <.L85>
 804c2f8:	c1 e0 02             	shl    $0x2,%eax
 804c2fb:	8b 84 18 38 f1 ff ff 	mov    -0xec8(%eax,%ebx,1),%eax
 804c302:	01 d8                	add    %ebx,%eax
 804c304:	ff e0                	jmp    *%eax

0804c306 <.L90>:
 804c306:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804c309:	83 e0 10             	and    $0x10,%eax
 804c30c:	85 c0                	test   %eax,%eax
 804c30e:	75 1c                	jne    804c32c <.L90+0x26>
 804c310:	eb 11                	jmp    804c323 <.L90+0x1d>
 804c312:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c315:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c318:	77 06                	ja     804c320 <.L90+0x1a>
 804c31a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c31d:	c6 00 20             	movb   $0x20,(%eax)
 804c320:	ff 45 e4             	incl   -0x1c(%ebp)
 804c323:	ff 4d d4             	decl   -0x2c(%ebp)
 804c326:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804c32a:	7f e6                	jg     804c312 <.L90+0xc>
 804c32c:	8b 45 14             	mov    0x14(%ebp),%eax
 804c32f:	8d 50 04             	lea    0x4(%eax),%edx
 804c332:	89 55 14             	mov    %edx,0x14(%ebp)
 804c335:	8b 00                	mov    (%eax),%eax
 804c337:	88 45 cb             	mov    %al,-0x35(%ebp)
 804c33a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c33d:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c340:	77 09                	ja     804c34b <.L90+0x45>
 804c342:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c345:	0f b6 55 cb          	movzbl -0x35(%ebp),%edx
 804c349:	88 10                	mov    %dl,(%eax)
 804c34b:	ff 45 e4             	incl   -0x1c(%ebp)
 804c34e:	eb 11                	jmp    804c361 <.L90+0x5b>
 804c350:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c353:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c356:	77 06                	ja     804c35e <.L90+0x58>
 804c358:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c35b:	c6 00 20             	movb   $0x20,(%eax)
 804c35e:	ff 45 e4             	incl   -0x1c(%ebp)
 804c361:	ff 4d d4             	decl   -0x2c(%ebp)
 804c364:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804c368:	7f e6                	jg     804c350 <.L90+0x4a>
 804c36a:	e9 0d 03 00 00       	jmp    804c67c <.L138+0x10f>

0804c36f <.L95>:
 804c36f:	8b 45 14             	mov    0x14(%ebp),%eax
 804c372:	8d 50 04             	lea    0x4(%eax),%edx
 804c375:	89 55 14             	mov    %edx,0x14(%ebp)
 804c378:	8b 00                	mov    (%eax),%eax
 804c37a:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804c37d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 804c381:	75 09                	jne    804c38c <.L95+0x1d>
 804c383:	8d 83 ed f0 ff ff    	lea    -0xf13(%ebx),%eax
 804c389:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804c38c:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804c38f:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c393:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804c396:	89 04 24             	mov    %eax,(%esp)
 804c399:	e8 f4 ce ff ff       	call   8049292 <strnlen>
 804c39e:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804c3a1:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804c3a4:	83 e0 10             	and    $0x10,%eax
 804c3a7:	85 c0                	test   %eax,%eax
 804c3a9:	75 21                	jne    804c3cc <.L95+0x5d>
 804c3ab:	eb 11                	jmp    804c3be <.L95+0x4f>
 804c3ad:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c3b0:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c3b3:	77 06                	ja     804c3bb <.L95+0x4c>
 804c3b5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c3b8:	c6 00 20             	movb   $0x20,(%eax)
 804c3bb:	ff 45 e4             	incl   -0x1c(%ebp)
 804c3be:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804c3c1:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c3c4:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804c3c7:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 804c3ca:	7f e1                	jg     804c3ad <.L95+0x3e>
 804c3cc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804c3d3:	eb 1c                	jmp    804c3f1 <.L95+0x82>
 804c3d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c3d8:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c3db:	77 0b                	ja     804c3e8 <.L95+0x79>
 804c3dd:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804c3e0:	0f b6 10             	movzbl (%eax),%edx
 804c3e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c3e6:	88 10                	mov    %dl,(%eax)
 804c3e8:	ff 45 e4             	incl   -0x1c(%ebp)
 804c3eb:	ff 45 dc             	incl   -0x24(%ebp)
 804c3ee:	ff 45 ec             	incl   -0x14(%ebp)
 804c3f1:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c3f4:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 804c3f7:	7c dc                	jl     804c3d5 <.L95+0x66>
 804c3f9:	eb 11                	jmp    804c40c <.L95+0x9d>
 804c3fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c3fe:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c401:	77 06                	ja     804c409 <.L95+0x9a>
 804c403:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c406:	c6 00 20             	movb   $0x20,(%eax)
 804c409:	ff 45 e4             	incl   -0x1c(%ebp)
 804c40c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804c40f:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c412:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804c415:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 804c418:	7f e1                	jg     804c3fb <.L95+0x8c>
 804c41a:	e9 5d 02 00 00       	jmp    804c67c <.L138+0x10f>

0804c41f <.L94>:
 804c41f:	83 7d d4 ff          	cmpl   $0xffffffff,-0x2c(%ebp)
 804c423:	75 0b                	jne    804c430 <.L94+0x11>
 804c425:	c7 45 d4 08 00 00 00 	movl   $0x8,-0x2c(%ebp)
 804c42c:	83 4d d8 01          	orl    $0x1,-0x28(%ebp)
 804c430:	8b 45 14             	mov    0x14(%ebp),%eax
 804c433:	8d 50 04             	lea    0x4(%eax),%edx
 804c436:	89 55 14             	mov    %edx,0x14(%ebp)
 804c439:	8b 00                	mov    (%eax),%eax
 804c43b:	ba 00 00 00 00       	mov    $0x0,%edx
 804c440:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 804c443:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 804c447:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 804c44a:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804c44e:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 804c451:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 804c455:	c7 44 24 10 10 00 00 	movl   $0x10,0x10(%esp)
 804c45c:	00 
 804c45d:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c461:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804c465:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c468:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c46c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c46f:	89 04 24             	mov    %eax,(%esp)
 804c472:	e8 af f8 ff ff       	call   804bd26 <number>
 804c477:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c47a:	e9 fd 01 00 00       	jmp    804c67c <.L138+0x10f>

0804c47f <.L92>:
 804c47f:	83 7d cc 6c          	cmpl   $0x6c,-0x34(%ebp)
 804c483:	75 20                	jne    804c4a5 <.L92+0x26>
 804c485:	8b 45 14             	mov    0x14(%ebp),%eax
 804c488:	8d 50 04             	lea    0x4(%eax),%edx
 804c48b:	89 55 14             	mov    %edx,0x14(%ebp)
 804c48e:	8b 00                	mov    (%eax),%eax
 804c490:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804c493:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c496:	8b 45 08             	mov    0x8(%ebp),%eax
 804c499:	29 c2                	sub    %eax,%edx
 804c49b:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804c49e:	89 10                	mov    %edx,(%eax)
 804c4a0:	e9 d7 01 00 00       	jmp    804c67c <.L138+0x10f>
 804c4a5:	83 7d cc 5a          	cmpl   $0x5a,-0x34(%ebp)
 804c4a9:	75 24                	jne    804c4cf <.L92+0x50>
 804c4ab:	8b 45 14             	mov    0x14(%ebp),%eax
 804c4ae:	8d 50 04             	lea    0x4(%eax),%edx
 804c4b1:	89 55 14             	mov    %edx,0x14(%ebp)
 804c4b4:	8b 00                	mov    (%eax),%eax
 804c4b6:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804c4b9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c4bc:	8b 45 08             	mov    0x8(%ebp),%eax
 804c4bf:	29 c2                	sub    %eax,%edx
 804c4c1:	89 d0                	mov    %edx,%eax
 804c4c3:	89 c2                	mov    %eax,%edx
 804c4c5:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804c4c8:	89 10                	mov    %edx,(%eax)
 804c4ca:	e9 ad 01 00 00       	jmp    804c67c <.L138+0x10f>
 804c4cf:	8b 45 14             	mov    0x14(%ebp),%eax
 804c4d2:	8d 50 04             	lea    0x4(%eax),%edx
 804c4d5:	89 55 14             	mov    %edx,0x14(%ebp)
 804c4d8:	8b 00                	mov    (%eax),%eax
 804c4da:	89 45 b8             	mov    %eax,-0x48(%ebp)
 804c4dd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c4e0:	8b 45 08             	mov    0x8(%ebp),%eax
 804c4e3:	29 c2                	sub    %eax,%edx
 804c4e5:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804c4e8:	89 10                	mov    %edx,(%eax)
 804c4ea:	e9 8d 01 00 00       	jmp    804c67c <.L138+0x10f>

0804c4ef <.L86>:
 804c4ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c4f2:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c4f5:	77 06                	ja     804c4fd <.L86+0xe>
 804c4f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c4fa:	c6 00 25             	movb   $0x25,(%eax)
 804c4fd:	ff 45 e4             	incl   -0x1c(%ebp)
 804c500:	e9 77 01 00 00       	jmp    804c67c <.L138+0x10f>

0804c505 <.L93>:
 804c505:	c7 45 e8 08 00 00 00 	movl   $0x8,-0x18(%ebp)
 804c50c:	eb 60                	jmp    804c56e <.L138+0x1>

0804c50e <.L89>:
 804c50e:	83 4d d8 40          	orl    $0x40,-0x28(%ebp)

0804c512 <.L97>:
 804c512:	c7 45 e8 10 00 00 00 	movl   $0x10,-0x18(%ebp)
 804c519:	eb 53                	jmp    804c56e <.L138+0x1>

0804c51b <.L91>:
 804c51b:	83 4d d8 02          	orl    $0x2,-0x28(%ebp)
 804c51f:	eb 4c                	jmp    804c56d <.L138>

0804c521 <.L88>:
 804c521:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804c526:	e9 8c 01 00 00       	jmp    804c6b7 <.L138+0x14a>

0804c52b <.L85>:
 804c52b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c52e:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c531:	77 06                	ja     804c539 <.L85+0xe>
 804c533:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c536:	c6 00 25             	movb   $0x25,(%eax)
 804c539:	ff 45 e4             	incl   -0x1c(%ebp)
 804c53c:	8b 45 10             	mov    0x10(%ebp),%eax
 804c53f:	0f b6 00             	movzbl (%eax),%eax
 804c542:	84 c0                	test   %al,%al
 804c544:	74 1b                	je     804c561 <.L85+0x36>
 804c546:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c549:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c54c:	77 0b                	ja     804c559 <.L85+0x2e>
 804c54e:	8b 45 10             	mov    0x10(%ebp),%eax
 804c551:	0f b6 10             	movzbl (%eax),%edx
 804c554:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c557:	88 10                	mov    %dl,(%eax)
 804c559:	ff 45 e4             	incl   -0x1c(%ebp)
 804c55c:	e9 1b 01 00 00       	jmp    804c67c <.L138+0x10f>
 804c561:	8b 45 10             	mov    0x10(%ebp),%eax
 804c564:	48                   	dec    %eax
 804c565:	89 45 10             	mov    %eax,0x10(%ebp)
 804c568:	e9 0f 01 00 00       	jmp    804c67c <.L138+0x10f>

0804c56d <.L138>:
 804c56d:	90                   	nop
 804c56e:	83 7d cc 4c          	cmpl   $0x4c,-0x34(%ebp)
 804c572:	75 19                	jne    804c58d <.L138+0x20>
 804c574:	8b 45 14             	mov    0x14(%ebp),%eax
 804c577:	8d 50 08             	lea    0x8(%eax),%edx
 804c57a:	89 55 14             	mov    %edx,0x14(%ebp)
 804c57d:	8b 50 04             	mov    0x4(%eax),%edx
 804c580:	8b 00                	mov    (%eax),%eax
 804c582:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c585:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804c588:	e9 b0 00 00 00       	jmp    804c63d <.L138+0xd0>
 804c58d:	83 7d cc 6c          	cmpl   $0x6c,-0x34(%ebp)
 804c591:	75 2f                	jne    804c5c2 <.L138+0x55>
 804c593:	8b 45 14             	mov    0x14(%ebp),%eax
 804c596:	8d 50 04             	lea    0x4(%eax),%edx
 804c599:	89 55 14             	mov    %edx,0x14(%ebp)
 804c59c:	8b 00                	mov    (%eax),%eax
 804c59e:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c5a1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804c5a8:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804c5ab:	83 e0 02             	and    $0x2,%eax
 804c5ae:	85 c0                	test   %eax,%eax
 804c5b0:	0f 84 87 00 00 00    	je     804c63d <.L138+0xd0>
 804c5b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804c5b9:	99                   	cltd   
 804c5ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c5bd:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804c5c0:	eb 7b                	jmp    804c63d <.L138+0xd0>
 804c5c2:	83 7d cc 5a          	cmpl   $0x5a,-0x34(%ebp)
 804c5c6:	75 17                	jne    804c5df <.L138+0x72>
 804c5c8:	8b 45 14             	mov    0x14(%ebp),%eax
 804c5cb:	8d 50 04             	lea    0x4(%eax),%edx
 804c5ce:	89 55 14             	mov    %edx,0x14(%ebp)
 804c5d1:	8b 00                	mov    (%eax),%eax
 804c5d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c5d6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804c5dd:	eb 5e                	jmp    804c63d <.L138+0xd0>
 804c5df:	83 7d cc 68          	cmpl   $0x68,-0x34(%ebp)
 804c5e3:	75 2f                	jne    804c614 <.L138+0xa7>
 804c5e5:	8b 45 14             	mov    0x14(%ebp),%eax
 804c5e8:	8d 50 04             	lea    0x4(%eax),%edx
 804c5eb:	89 55 14             	mov    %edx,0x14(%ebp)
 804c5ee:	8b 00                	mov    (%eax),%eax
 804c5f0:	0f b7 c0             	movzwl %ax,%eax
 804c5f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c5f6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804c5fd:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804c600:	83 e0 02             	and    $0x2,%eax
 804c603:	85 c0                	test   %eax,%eax
 804c605:	74 36                	je     804c63d <.L138+0xd0>
 804c607:	0f bf 45 f0          	movswl -0x10(%ebp),%eax
 804c60b:	99                   	cltd   
 804c60c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c60f:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804c612:	eb 29                	jmp    804c63d <.L138+0xd0>
 804c614:	8b 45 14             	mov    0x14(%ebp),%eax
 804c617:	8d 50 04             	lea    0x4(%eax),%edx
 804c61a:	89 55 14             	mov    %edx,0x14(%ebp)
 804c61d:	8b 00                	mov    (%eax),%eax
 804c61f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c622:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804c629:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804c62c:	83 e0 02             	and    $0x2,%eax
 804c62f:	85 c0                	test   %eax,%eax
 804c631:	74 0a                	je     804c63d <.L138+0xd0>
 804c633:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804c636:	99                   	cltd   
 804c637:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c63a:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804c63d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804c640:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804c643:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 804c646:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 804c64a:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 804c64d:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804c651:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 804c654:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 804c658:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 804c65b:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804c65f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c663:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804c667:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c66a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c66e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c671:	89 04 24             	mov    %eax,(%esp)
 804c674:	e8 ad f6 ff ff       	call   804bd26 <number>
 804c679:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c67c:	8b 45 10             	mov    0x10(%ebp),%eax
 804c67f:	40                   	inc    %eax
 804c680:	89 45 10             	mov    %eax,0x10(%ebp)
 804c683:	8b 45 10             	mov    0x10(%ebp),%eax
 804c686:	0f b6 00             	movzbl (%eax),%eax
 804c689:	84 c0                	test   %al,%al
 804c68b:	0f 85 96 fa ff ff    	jne    804c127 <vsnprintf+0x4d>
 804c691:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c694:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804c697:	77 08                	ja     804c6a1 <.L138+0x134>
 804c699:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804c69c:	c6 00 00             	movb   $0x0,(%eax)
 804c69f:	eb 0c                	jmp    804c6ad <.L138+0x140>
 804c6a1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804c6a5:	74 06                	je     804c6ad <.L138+0x140>
 804c6a7:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c6aa:	c6 00 00             	movb   $0x0,(%eax)
 804c6ad:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c6b0:	8b 45 08             	mov    0x8(%ebp),%eax
 804c6b3:	29 c2                	sub    %eax,%edx
 804c6b5:	89 d0                	mov    %edx,%eax
 804c6b7:	83 c4 64             	add    $0x64,%esp
 804c6ba:	5b                   	pop    %ebx
 804c6bb:	5d                   	pop    %ebp
 804c6bc:	c3                   	ret    

0804c6bd <__x86.get_pc_thunk.dx>:
 804c6bd:	8b 14 24             	mov    (%esp),%edx
 804c6c0:	c3                   	ret    

0804c6c1 <__x86.get_pc_thunk.si>:
 804c6c1:	8b 34 24             	mov    (%esp),%esi
 804c6c4:	c3                   	ret    

0804c6c5 <shl>:
 804c6c5:	55                   	push   %ebp
 804c6c6:	89 e5                	mov    %esp,%ebp
 804c6c8:	57                   	push   %edi
 804c6c9:	56                   	push   %esi
 804c6ca:	53                   	push   %ebx
 804c6cb:	83 ec 04             	sub    $0x4,%esp
 804c6ce:	e8 cd c9 ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804c6d3:	05 2d 29 00 00       	add    $0x292d,%eax
 804c6d8:	8b 75 08             	mov    0x8(%ebp),%esi
 804c6db:	bb 00 00 00 00       	mov    $0x0,%ebx
 804c6e0:	eb 41                	jmp    804c723 <shl+0x5e>
 804c6e2:	89 d8                	mov    %ebx,%eax
 804c6e4:	c1 e0 02             	shl    $0x2,%eax
 804c6e7:	8d 3c 06             	lea    (%esi,%eax,1),%edi
 804c6ea:	89 d8                	mov    %ebx,%eax
 804c6ec:	c1 e0 02             	shl    $0x2,%eax
 804c6ef:	01 f0                	add    %esi,%eax
 804c6f1:	8b 00                	mov    (%eax),%eax
 804c6f3:	0f b6 4d 10          	movzbl 0x10(%ebp),%ecx
 804c6f7:	d3 e0                	shl    %cl,%eax
 804c6f9:	0f b7 c0             	movzwl %ax,%eax
 804c6fc:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c6ff:	89 d8                	mov    %ebx,%eax
 804c701:	40                   	inc    %eax
 804c702:	c1 e0 02             	shl    $0x2,%eax
 804c705:	01 f0                	add    %esi,%eax
 804c707:	8b 00                	mov    (%eax),%eax
 804c709:	89 c1                	mov    %eax,%ecx
 804c70b:	8b 55 10             	mov    0x10(%ebp),%edx
 804c70e:	b8 10 00 00 00       	mov    $0x10,%eax
 804c713:	29 d0                	sub    %edx,%eax
 804c715:	89 ca                	mov    %ecx,%edx
 804c717:	88 c1                	mov    %al,%cl
 804c719:	d3 ea                	shr    %cl,%edx
 804c71b:	89 d0                	mov    %edx,%eax
 804c71d:	0b 45 f0             	or     -0x10(%ebp),%eax
 804c720:	89 07                	mov    %eax,(%edi)
 804c722:	43                   	inc    %ebx
 804c723:	3b 5d 0c             	cmp    0xc(%ebp),%ebx
 804c726:	7c ba                	jl     804c6e2 <shl+0x1d>
 804c728:	89 d8                	mov    %ebx,%eax
 804c72a:	c1 e0 02             	shl    $0x2,%eax
 804c72d:	8d 14 06             	lea    (%esi,%eax,1),%edx
 804c730:	89 d8                	mov    %ebx,%eax
 804c732:	c1 e0 02             	shl    $0x2,%eax
 804c735:	01 f0                	add    %esi,%eax
 804c737:	8b 00                	mov    (%eax),%eax
 804c739:	0f b6 4d 10          	movzbl 0x10(%ebp),%ecx
 804c73d:	d3 e0                	shl    %cl,%eax
 804c73f:	0f b7 c0             	movzwl %ax,%eax
 804c742:	89 02                	mov    %eax,(%edx)
 804c744:	90                   	nop
 804c745:	83 c4 04             	add    $0x4,%esp
 804c748:	5b                   	pop    %ebx
 804c749:	5e                   	pop    %esi
 804c74a:	5f                   	pop    %edi
 804c74b:	5d                   	pop    %ebp
 804c74c:	c3                   	ret    

0804c74d <__qdivrem>:
 804c74d:	55                   	push   %ebp
 804c74e:	89 e5                	mov    %esp,%ebp
 804c750:	57                   	push   %edi
 804c751:	56                   	push   %esi
 804c752:	53                   	push   %ebx
 804c753:	81 ec b8 00 00 00    	sub    $0xb8,%esp
 804c759:	e8 42 c9 ff ff       	call   80490a0 <__x86.get_pc_thunk.ax>
 804c75e:	05 a2 28 00 00       	add    $0x28a2,%eax
 804c763:	8b 55 08             	mov    0x8(%ebp),%edx
 804c766:	89 95 58 ff ff ff    	mov    %edx,-0xa8(%ebp)
 804c76c:	8b 55 0c             	mov    0xc(%ebp),%edx
 804c76f:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 804c775:	8b 55 10             	mov    0x10(%ebp),%edx
 804c778:	89 95 50 ff ff ff    	mov    %edx,-0xb0(%ebp)
 804c77e:	8b 55 14             	mov    0x14(%ebp),%edx
 804c781:	89 95 54 ff ff ff    	mov    %edx,-0xac(%ebp)
 804c787:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 804c78d:	0b 95 50 ff ff ff    	or     -0xb0(%ebp),%edx
 804c793:	85 d2                	test   %edx,%edx
 804c795:	75 40                	jne    804c7d7 <__qdivrem+0x8a>
 804c797:	8b b8 60 01 00 00    	mov    0x160(%eax),%edi
 804c79d:	b8 01 00 00 00       	mov    $0x1,%eax
 804c7a2:	ba 00 00 00 00       	mov    $0x0,%edx
 804c7a7:	f7 f7                	div    %edi
 804c7a9:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804c7ac:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804c7af:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804c7b2:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 804c7b6:	74 14                	je     804c7cc <__qdivrem+0x7f>
 804c7b8:	8b 4d 18             	mov    0x18(%ebp),%ecx
 804c7bb:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 804c7c1:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 804c7c7:	89 01                	mov    %eax,(%ecx)
 804c7c9:	89 51 04             	mov    %edx,0x4(%ecx)
 804c7cc:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804c7cf:	8b 55 a8             	mov    -0x58(%ebp),%edx
 804c7d2:	e9 eb 05 00 00       	jmp    804cdc2 <__qdivrem+0x675>
 804c7d7:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 804c7dd:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 804c7e3:	3b 95 54 ff ff ff    	cmp    -0xac(%ebp),%edx
 804c7e9:	77 39                	ja     804c824 <__qdivrem+0xd7>
 804c7eb:	3b 95 54 ff ff ff    	cmp    -0xac(%ebp),%edx
 804c7f1:	72 08                	jb     804c7fb <__qdivrem+0xae>
 804c7f3:	3b 85 50 ff ff ff    	cmp    -0xb0(%ebp),%eax
 804c7f9:	73 29                	jae    804c824 <__qdivrem+0xd7>
 804c7fb:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 804c7ff:	74 14                	je     804c815 <__qdivrem+0xc8>
 804c801:	8b 4d 18             	mov    0x18(%ebp),%ecx
 804c804:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 804c80a:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 804c810:	89 01                	mov    %eax,(%ecx)
 804c812:	89 51 04             	mov    %edx,0x4(%ecx)
 804c815:	b8 00 00 00 00       	mov    $0x0,%eax
 804c81a:	ba 00 00 00 00       	mov    $0x0,%edx
 804c81f:	e9 9e 05 00 00       	jmp    804cdc2 <__qdivrem+0x675>
 804c824:	8d 45 90             	lea    -0x70(%ebp),%eax
 804c827:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804c82a:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
 804c830:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804c833:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
 804c839:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804c83c:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 804c842:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 804c848:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804c84b:	89 55 a8             	mov    %edx,-0x58(%ebp)
 804c84e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c851:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804c857:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c85a:	83 c0 04             	add    $0x4,%eax
 804c85d:	8b 55 a8             	mov    -0x58(%ebp),%edx
 804c860:	c1 ea 10             	shr    $0x10,%edx
 804c863:	89 10                	mov    %edx,(%eax)
 804c865:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c868:	8d 50 08             	lea    0x8(%eax),%edx
 804c86b:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804c86e:	0f b7 c0             	movzwl %ax,%eax
 804c871:	89 02                	mov    %eax,(%edx)
 804c873:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c876:	83 c0 0c             	add    $0xc,%eax
 804c879:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 804c87c:	c1 ea 10             	shr    $0x10,%edx
 804c87f:	89 10                	mov    %edx,(%eax)
 804c881:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c884:	8d 50 10             	lea    0x10(%eax),%edx
 804c887:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804c88a:	0f b7 c0             	movzwl %ax,%eax
 804c88d:	89 02                	mov    %eax,(%edx)
 804c88f:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 804c895:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 804c89b:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804c89e:	89 55 a8             	mov    %edx,-0x58(%ebp)
 804c8a1:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c8a4:	83 c0 04             	add    $0x4,%eax
 804c8a7:	8b 55 a8             	mov    -0x58(%ebp),%edx
 804c8aa:	c1 ea 10             	shr    $0x10,%edx
 804c8ad:	89 10                	mov    %edx,(%eax)
 804c8af:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c8b2:	8d 50 08             	lea    0x8(%eax),%edx
 804c8b5:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804c8b8:	0f b7 c0             	movzwl %ax,%eax
 804c8bb:	89 02                	mov    %eax,(%edx)
 804c8bd:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c8c0:	83 c0 0c             	add    $0xc,%eax
 804c8c3:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 804c8c6:	c1 ea 10             	shr    $0x10,%edx
 804c8c9:	89 10                	mov    %edx,(%eax)
 804c8cb:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c8ce:	8d 50 10             	lea    0x10(%eax),%edx
 804c8d1:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804c8d4:	0f b7 c0             	movzwl %ax,%eax
 804c8d7:	89 02                	mov    %eax,(%edx)
 804c8d9:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 804c8e0:	e9 fc 00 00 00       	jmp    804c9e1 <__qdivrem+0x294>
 804c8e5:	ff 4d d4             	decl   -0x2c(%ebp)
 804c8e8:	83 7d d4 01          	cmpl   $0x1,-0x2c(%ebp)
 804c8ec:	0f 85 eb 00 00 00    	jne    804c9dd <__qdivrem+0x290>
 804c8f2:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c8f5:	8b 40 08             	mov    0x8(%eax),%eax
 804c8f8:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804c8fb:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c8fe:	83 c0 04             	add    $0x4,%eax
 804c901:	8b 00                	mov    (%eax),%eax
 804c903:	ba 00 00 00 00       	mov    $0x0,%edx
 804c908:	f7 75 dc             	divl   -0x24(%ebp)
 804c90b:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804c90e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c911:	83 c0 04             	add    $0x4,%eax
 804c914:	8b 00                	mov    (%eax),%eax
 804c916:	ba 00 00 00 00       	mov    $0x0,%edx
 804c91b:	f7 75 dc             	divl   -0x24(%ebp)
 804c91e:	89 d0                	mov    %edx,%eax
 804c920:	c1 e0 10             	shl    $0x10,%eax
 804c923:	89 c2                	mov    %eax,%edx
 804c925:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c928:	83 c0 08             	add    $0x8,%eax
 804c92b:	8b 00                	mov    (%eax),%eax
 804c92d:	09 d0                	or     %edx,%eax
 804c92f:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804c932:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804c935:	ba 00 00 00 00       	mov    $0x0,%edx
 804c93a:	f7 75 dc             	divl   -0x24(%ebp)
 804c93d:	89 45 b8             	mov    %eax,-0x48(%ebp)
 804c940:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804c943:	ba 00 00 00 00       	mov    $0x0,%edx
 804c948:	f7 75 dc             	divl   -0x24(%ebp)
 804c94b:	89 d0                	mov    %edx,%eax
 804c94d:	c1 e0 10             	shl    $0x10,%eax
 804c950:	89 c2                	mov    %eax,%edx
 804c952:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c955:	83 c0 0c             	add    $0xc,%eax
 804c958:	8b 00                	mov    (%eax),%eax
 804c95a:	09 d0                	or     %edx,%eax
 804c95c:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804c95f:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804c962:	ba 00 00 00 00       	mov    $0x0,%edx
 804c967:	f7 75 dc             	divl   -0x24(%ebp)
 804c96a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 804c96d:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804c970:	ba 00 00 00 00       	mov    $0x0,%edx
 804c975:	f7 75 dc             	divl   -0x24(%ebp)
 804c978:	89 d0                	mov    %edx,%eax
 804c97a:	c1 e0 10             	shl    $0x10,%eax
 804c97d:	89 c2                	mov    %eax,%edx
 804c97f:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c982:	83 c0 10             	add    $0x10,%eax
 804c985:	8b 00                	mov    (%eax),%eax
 804c987:	09 d0                	or     %edx,%eax
 804c989:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804c98c:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804c98f:	ba 00 00 00 00       	mov    $0x0,%edx
 804c994:	f7 75 dc             	divl   -0x24(%ebp)
 804c997:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804c99a:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 804c99e:	74 1a                	je     804c9ba <__qdivrem+0x26d>
 804c9a0:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804c9a3:	ba 00 00 00 00       	mov    $0x0,%edx
 804c9a8:	f7 75 dc             	divl   -0x24(%ebp)
 804c9ab:	89 d0                	mov    %edx,%eax
 804c9ad:	ba 00 00 00 00       	mov    $0x0,%edx
 804c9b2:	8b 4d 18             	mov    0x18(%ebp),%ecx
 804c9b5:	89 01                	mov    %eax,(%ecx)
 804c9b7:	89 51 04             	mov    %edx,0x4(%ecx)
 804c9ba:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804c9bd:	c1 e0 10             	shl    $0x10,%eax
 804c9c0:	0b 45 b8             	or     -0x48(%ebp),%eax
 804c9c3:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804c9c6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804c9c9:	c1 e0 10             	shl    $0x10,%eax
 804c9cc:	0b 45 b0             	or     -0x50(%ebp),%eax
 804c9cf:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804c9d2:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804c9d5:	8b 55 a8             	mov    -0x58(%ebp),%edx
 804c9d8:	e9 e5 03 00 00       	jmp    804cdc2 <__qdivrem+0x675>
 804c9dd:	83 45 e8 04          	addl   $0x4,-0x18(%ebp)
 804c9e1:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c9e4:	83 c0 04             	add    $0x4,%eax
 804c9e7:	8b 00                	mov    (%eax),%eax
 804c9e9:	85 c0                	test   %eax,%eax
 804c9eb:	0f 84 f4 fe ff ff    	je     804c8e5 <__qdivrem+0x198>
 804c9f1:	b8 04 00 00 00       	mov    $0x4,%eax
 804c9f6:	2b 45 d4             	sub    -0x2c(%ebp),%eax
 804c9f9:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804c9fc:	eb 07                	jmp    804ca05 <__qdivrem+0x2b8>
 804c9fe:	ff 4d d8             	decl   -0x28(%ebp)
 804ca01:	83 45 ec 04          	addl   $0x4,-0x14(%ebp)
 804ca05:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804ca08:	83 c0 04             	add    $0x4,%eax
 804ca0b:	8b 00                	mov    (%eax),%eax
 804ca0d:	85 c0                	test   %eax,%eax
 804ca0f:	74 ed                	je     804c9fe <__qdivrem+0x2b1>
 804ca11:	b8 04 00 00 00       	mov    $0x4,%eax
 804ca16:	2b 45 d8             	sub    -0x28(%ebp),%eax
 804ca19:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804ca1c:	eb 15                	jmp    804ca33 <__qdivrem+0x2e6>
 804ca1e:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804ca21:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804ca28:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804ca2b:	01 d0                	add    %edx,%eax
 804ca2d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804ca33:	ff 4d c8             	decl   -0x38(%ebp)
 804ca36:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 804ca3a:	79 e2                	jns    804ca1e <__qdivrem+0x2d1>
 804ca3c:	b8 04 00 00 00       	mov    $0x4,%eax
 804ca41:	2b 45 d8             	sub    -0x28(%ebp),%eax
 804ca44:	c1 e0 02             	shl    $0x2,%eax
 804ca47:	01 45 c4             	add    %eax,-0x3c(%ebp)
 804ca4a:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 804ca51:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ca54:	8b 40 04             	mov    0x4(%eax),%eax
 804ca57:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804ca5a:	eb 06                	jmp    804ca62 <__qdivrem+0x315>
 804ca5c:	ff 45 d0             	incl   -0x30(%ebp)
 804ca5f:	d1 65 dc             	shll   -0x24(%ebp)
 804ca62:	81 7d dc ff 7f 00 00 	cmpl   $0x7fff,-0x24(%ebp)
 804ca69:	76 f1                	jbe    804ca5c <__qdivrem+0x30f>
 804ca6b:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
 804ca6f:	7e 3d                	jle    804caae <__qdivrem+0x361>
 804ca71:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804ca74:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804ca77:	01 c2                	add    %eax,%edx
 804ca79:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804ca7c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ca80:	89 54 24 04          	mov    %edx,0x4(%esp)
 804ca84:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804ca87:	89 04 24             	mov    %eax,(%esp)
 804ca8a:	e8 36 fc ff ff       	call   804c6c5 <shl>
 804ca8f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804ca92:	8d 48 ff             	lea    -0x1(%eax),%ecx
 804ca95:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ca98:	8d 50 04             	lea    0x4(%eax),%edx
 804ca9b:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804ca9e:	89 44 24 08          	mov    %eax,0x8(%esp)
 804caa2:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 804caa6:	89 14 24             	mov    %edx,(%esp)
 804caa9:	e8 17 fc ff ff       	call   804c6c5 <shl>
 804caae:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 804cab5:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804cab8:	8b 58 04             	mov    0x4(%eax),%ebx
 804cabb:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804cabe:	8b 40 08             	mov    0x8(%eax),%eax
 804cac1:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 804cac7:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804caca:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cad1:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cad4:	01 d0                	add    %edx,%eax
 804cad6:	8b 38                	mov    (%eax),%edi
 804cad8:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cadb:	40                   	inc    %eax
 804cadc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cae3:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cae6:	01 d0                	add    %edx,%eax
 804cae8:	8b 30                	mov    (%eax),%esi
 804caea:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804caed:	83 c0 02             	add    $0x2,%eax
 804caf0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804caf7:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cafa:	01 d0                	add    %edx,%eax
 804cafc:	8b 00                	mov    (%eax),%eax
 804cafe:	89 c1                	mov    %eax,%ecx
 804cb00:	39 df                	cmp    %ebx,%edi
 804cb02:	75 0c                	jne    804cb10 <__qdivrem+0x3c3>
 804cb04:	c7 45 e4 00 00 01 00 	movl   $0x10000,-0x1c(%ebp)
 804cb0b:	89 75 e0             	mov    %esi,-0x20(%ebp)
 804cb0e:	eb 26                	jmp    804cb36 <__qdivrem+0x3e9>
 804cb10:	89 f8                	mov    %edi,%eax
 804cb12:	c1 e0 10             	shl    $0x10,%eax
 804cb15:	09 f0                	or     %esi,%eax
 804cb17:	89 45 ac             	mov    %eax,-0x54(%ebp)
 804cb1a:	8b 45 ac             	mov    -0x54(%ebp),%eax
 804cb1d:	ba 00 00 00 00       	mov    $0x0,%edx
 804cb22:	f7 f3                	div    %ebx
 804cb24:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804cb27:	8b 45 ac             	mov    -0x54(%ebp),%eax
 804cb2a:	ba 00 00 00 00       	mov    $0x0,%edx
 804cb2f:	f7 f3                	div    %ebx
 804cb31:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804cb34:	eb 0f                	jmp    804cb45 <__qdivrem+0x3f8>
 804cb36:	ff 4d e4             	decl   -0x1c(%ebp)
 804cb39:	01 5d e0             	add    %ebx,-0x20(%ebp)
 804cb3c:	81 7d e0 ff ff 00 00 	cmpl   $0xffff,-0x20(%ebp)
 804cb43:	77 1a                	ja     804cb5f <__qdivrem+0x412>
 804cb45:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 804cb4b:	0f af 45 e4          	imul   -0x1c(%ebp),%eax
 804cb4f:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804cb52:	c1 e2 10             	shl    $0x10,%edx
 804cb55:	89 cf                	mov    %ecx,%edi
 804cb57:	09 fa                	or     %edi,%edx
 804cb59:	39 d0                	cmp    %edx,%eax
 804cb5b:	77 d9                	ja     804cb36 <__qdivrem+0x3e9>
 804cb5d:	eb 01                	jmp    804cb60 <__qdivrem+0x413>
 804cb5f:	90                   	nop
 804cb60:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804cb67:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804cb6a:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804cb6d:	eb 64                	jmp    804cbd3 <__qdivrem+0x486>
 804cb6f:	8b 55 c8             	mov    -0x38(%ebp),%edx
 804cb72:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cb75:	01 d0                	add    %edx,%eax
 804cb77:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cb7e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cb81:	01 d0                	add    %edx,%eax
 804cb83:	8b 10                	mov    (%eax),%edx
 804cb85:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804cb88:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 804cb8f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804cb92:	01 c8                	add    %ecx,%eax
 804cb94:	8b 00                	mov    (%eax),%eax
 804cb96:	0f af 45 e4          	imul   -0x1c(%ebp),%eax
 804cb9a:	29 c2                	sub    %eax,%edx
 804cb9c:	89 d0                	mov    %edx,%eax
 804cb9e:	2b 45 dc             	sub    -0x24(%ebp),%eax
 804cba1:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804cba4:	8b 55 c8             	mov    -0x38(%ebp),%edx
 804cba7:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cbaa:	01 d0                	add    %edx,%eax
 804cbac:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cbb3:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cbb6:	01 c2                	add    %eax,%edx
 804cbb8:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804cbbb:	0f b7 c0             	movzwl %ax,%eax
 804cbbe:	89 02                	mov    %eax,(%edx)
 804cbc0:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804cbc3:	c1 e8 10             	shr    $0x10,%eax
 804cbc6:	f7 d8                	neg    %eax
 804cbc8:	25 ff ff 00 00       	and    $0xffff,%eax
 804cbcd:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804cbd0:	ff 4d c8             	decl   -0x38(%ebp)
 804cbd3:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 804cbd7:	7f 96                	jg     804cb6f <__qdivrem+0x422>
 804cbd9:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cbdc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cbe3:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cbe6:	01 d0                	add    %edx,%eax
 804cbe8:	8b 00                	mov    (%eax),%eax
 804cbea:	2b 45 dc             	sub    -0x24(%ebp),%eax
 804cbed:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804cbf0:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cbf3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cbfa:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cbfd:	01 c2                	add    %eax,%edx
 804cbff:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804cc02:	0f b7 c0             	movzwl %ax,%eax
 804cc05:	89 02                	mov    %eax,(%edx)
 804cc07:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804cc0a:	c1 e8 10             	shr    $0x10,%eax
 804cc0d:	85 c0                	test   %eax,%eax
 804cc0f:	0f 84 91 00 00 00    	je     804cca6 <__qdivrem+0x559>
 804cc15:	ff 4d e4             	decl   -0x1c(%ebp)
 804cc18:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804cc1f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804cc22:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804cc25:	eb 4f                	jmp    804cc76 <__qdivrem+0x529>
 804cc27:	8b 55 c8             	mov    -0x38(%ebp),%edx
 804cc2a:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cc2d:	01 d0                	add    %edx,%eax
 804cc2f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cc36:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cc39:	01 d0                	add    %edx,%eax
 804cc3b:	8b 10                	mov    (%eax),%edx
 804cc3d:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804cc40:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 804cc47:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804cc4a:	01 c8                	add    %ecx,%eax
 804cc4c:	8b 00                	mov    (%eax),%eax
 804cc4e:	01 d0                	add    %edx,%eax
 804cc50:	01 45 dc             	add    %eax,-0x24(%ebp)
 804cc53:	8b 55 c8             	mov    -0x38(%ebp),%edx
 804cc56:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cc59:	01 d0                	add    %edx,%eax
 804cc5b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cc62:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cc65:	01 c2                	add    %eax,%edx
 804cc67:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804cc6a:	0f b7 c0             	movzwl %ax,%eax
 804cc6d:	89 02                	mov    %eax,(%edx)
 804cc6f:	c1 6d dc 10          	shrl   $0x10,-0x24(%ebp)
 804cc73:	ff 4d c8             	decl   -0x38(%ebp)
 804cc76:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 804cc7a:	7f ab                	jg     804cc27 <__qdivrem+0x4da>
 804cc7c:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cc7f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cc86:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cc89:	01 c2                	add    %eax,%edx
 804cc8b:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cc8e:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 804cc95:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cc98:	01 c8                	add    %ecx,%eax
 804cc9a:	8b 08                	mov    (%eax),%ecx
 804cc9c:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804cc9f:	01 c8                	add    %ecx,%eax
 804cca1:	0f b7 c0             	movzwl %ax,%eax
 804cca4:	89 02                	mov    %eax,(%edx)
 804cca6:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cca9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804ccb0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804ccb3:	01 c2                	add    %eax,%edx
 804ccb5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804ccb8:	89 02                	mov    %eax,(%edx)
 804ccba:	ff 45 cc             	incl   -0x34(%ebp)
 804ccbd:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804ccc0:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 804ccc3:	0f 8e fe fd ff ff    	jle    804cac7 <__qdivrem+0x37a>
 804ccc9:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 804cccd:	0f 84 bd 00 00 00    	je     804cd90 <__qdivrem+0x643>
 804ccd3:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
 804ccd7:	0f 84 85 00 00 00    	je     804cd62 <__qdivrem+0x615>
 804ccdd:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804cce0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804cce3:	01 d0                	add    %edx,%eax
 804cce5:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804cce8:	eb 5b                	jmp    804cd45 <__qdivrem+0x5f8>
 804ccea:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804cced:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804ccf4:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804ccf7:	01 c2                	add    %eax,%edx
 804ccf9:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804ccfc:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 804cd03:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cd06:	01 c8                	add    %ecx,%eax
 804cd08:	8b 18                	mov    (%eax),%ebx
 804cd0a:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804cd0d:	89 de                	mov    %ebx,%esi
 804cd0f:	88 c1                	mov    %al,%cl
 804cd11:	d3 ee                	shr    %cl,%esi
 804cd13:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804cd16:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
 804cd1b:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 804cd22:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cd25:	01 c8                	add    %ecx,%eax
 804cd27:	8b 18                	mov    (%eax),%ebx
 804cd29:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804cd2c:	b9 10 00 00 00       	mov    $0x10,%ecx
 804cd31:	29 c1                	sub    %eax,%ecx
 804cd33:	89 c8                	mov    %ecx,%eax
 804cd35:	88 c1                	mov    %al,%cl
 804cd37:	d3 e3                	shl    %cl,%ebx
 804cd39:	89 d8                	mov    %ebx,%eax
 804cd3b:	0f b7 c0             	movzwl %ax,%eax
 804cd3e:	09 f0                	or     %esi,%eax
 804cd40:	89 02                	mov    %eax,(%edx)
 804cd42:	ff 4d c8             	decl   -0x38(%ebp)
 804cd45:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804cd48:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 804cd4b:	7f 9d                	jg     804ccea <__qdivrem+0x59d>
 804cd4d:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804cd50:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804cd57:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cd5a:	01 d0                	add    %edx,%eax
 804cd5c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804cd62:	8b 45 94             	mov    -0x6c(%ebp),%eax
 804cd65:	c1 e0 10             	shl    $0x10,%eax
 804cd68:	89 c2                	mov    %eax,%edx
 804cd6a:	8b 45 98             	mov    -0x68(%ebp),%eax
 804cd6d:	09 d0                	or     %edx,%eax
 804cd6f:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804cd72:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804cd75:	c1 e0 10             	shl    $0x10,%eax
 804cd78:	89 c2                	mov    %eax,%edx
 804cd7a:	8b 45 a0             	mov    -0x60(%ebp),%eax
 804cd7d:	09 d0                	or     %edx,%eax
 804cd7f:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804cd82:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804cd85:	8b 55 a8             	mov    -0x58(%ebp),%edx
 804cd88:	8b 4d 18             	mov    0x18(%ebp),%ecx
 804cd8b:	89 01                	mov    %eax,(%ecx)
 804cd8d:	89 51 04             	mov    %edx,0x4(%ecx)
 804cd90:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 804cd96:	c1 e0 10             	shl    $0x10,%eax
 804cd99:	89 c2                	mov    %eax,%edx
 804cd9b:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 804cda1:	09 d0                	or     %edx,%eax
 804cda3:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804cda6:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804cdac:	c1 e0 10             	shl    $0x10,%eax
 804cdaf:	89 c2                	mov    %eax,%edx
 804cdb1:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804cdb7:	09 d0                	or     %edx,%eax
 804cdb9:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804cdbc:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804cdbf:	8b 55 a8             	mov    -0x58(%ebp),%edx
 804cdc2:	81 c4 b8 00 00 00    	add    $0xb8,%esp
 804cdc8:	5b                   	pop    %ebx
 804cdc9:	5e                   	pop    %esi
 804cdca:	5f                   	pop    %edi
 804cdcb:	5d                   	pop    %ebp
 804cdcc:	c3                   	ret    

0804cdcd <__divdi3>:
 804cdcd:	55                   	push   %ebp
 804cdce:	89 e5                	mov    %esp,%ebp
 804cdd0:	53                   	push   %ebx
 804cdd1:	83 ec 54             	sub    $0x54,%esp
 804cdd4:	e8 cb c2 ff ff       	call   80490a4 <__x86.get_pc_thunk.cx>
 804cdd9:	81 c1 27 22 00 00    	add    $0x2227,%ecx
 804cddf:	8b 45 08             	mov    0x8(%ebp),%eax
 804cde2:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804cde5:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cde8:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804cdeb:	8b 45 10             	mov    0x10(%ebp),%eax
 804cdee:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804cdf1:	8b 45 14             	mov    0x14(%ebp),%eax
 804cdf4:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804cdf7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804cdfb:	79 1c                	jns    804ce19 <__divdi3+0x4c>
 804cdfd:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804ce00:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804ce03:	f7 d8                	neg    %eax
 804ce05:	83 d2 00             	adc    $0x0,%edx
 804ce08:	f7 da                	neg    %edx
 804ce0a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804ce0d:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804ce10:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 804ce17:	eb 13                	jmp    804ce2c <__divdi3+0x5f>
 804ce19:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804ce1c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804ce1f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804ce22:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804ce25:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 804ce2c:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
 804ce30:	79 19                	jns    804ce4b <__divdi3+0x7e>
 804ce32:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804ce35:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804ce38:	f7 d8                	neg    %eax
 804ce3a:	83 d2 00             	adc    $0x0,%edx
 804ce3d:	f7 da                	neg    %edx
 804ce3f:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804ce42:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804ce45:	83 75 e4 01          	xorl   $0x1,-0x1c(%ebp)
 804ce49:	eb 0c                	jmp    804ce57 <__divdi3+0x8a>
 804ce4b:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804ce4e:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804ce51:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804ce54:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804ce57:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804ce5e:	00 
 804ce5f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ce62:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804ce65:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ce69:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804ce6d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ce70:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804ce73:	89 04 24             	mov    %eax,(%esp)
 804ce76:	89 54 24 04          	mov    %edx,0x4(%esp)
 804ce7a:	89 cb                	mov    %ecx,%ebx
 804ce7c:	e8 cc f8 ff ff       	call   804c74d <__qdivrem>
 804ce81:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804ce84:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804ce87:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 804ce8b:	74 0f                	je     804ce9c <__divdi3+0xcf>
 804ce8d:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804ce90:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804ce93:	f7 d8                	neg    %eax
 804ce95:	83 d2 00             	adc    $0x0,%edx
 804ce98:	f7 da                	neg    %edx
 804ce9a:	eb 06                	jmp    804cea2 <__divdi3+0xd5>
 804ce9c:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804ce9f:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804cea2:	83 c4 54             	add    $0x54,%esp
 804cea5:	5b                   	pop    %ebx
 804cea6:	5d                   	pop    %ebp
 804cea7:	c3                   	ret    

0804cea8 <__udivdi3>:
 804cea8:	55                   	push   %ebp
 804cea9:	89 e5                	mov    %esp,%ebp
 804ceab:	53                   	push   %ebx
 804ceac:	83 ec 34             	sub    $0x34,%esp
 804ceaf:	e8 f0 c1 ff ff       	call   80490a4 <__x86.get_pc_thunk.cx>
 804ceb4:	81 c1 4c 21 00 00    	add    $0x214c,%ecx
 804ceba:	8b 45 08             	mov    0x8(%ebp),%eax
 804cebd:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804cec0:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cec3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804cec6:	8b 45 10             	mov    0x10(%ebp),%eax
 804cec9:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804cecc:	8b 45 14             	mov    0x14(%ebp),%eax
 804cecf:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804ced2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804ced9:	00 
 804ceda:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804cedd:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804cee0:	89 44 24 08          	mov    %eax,0x8(%esp)
 804cee4:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804cee8:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ceeb:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804ceee:	89 04 24             	mov    %eax,(%esp)
 804cef1:	89 54 24 04          	mov    %edx,0x4(%esp)
 804cef5:	89 cb                	mov    %ecx,%ebx
 804cef7:	e8 51 f8 ff ff       	call   804c74d <__qdivrem>
 804cefc:	83 c4 34             	add    $0x34,%esp
 804ceff:	5b                   	pop    %ebx
 804cf00:	5d                   	pop    %ebp
 804cf01:	c3                   	ret    

0804cf02 <__umoddi3>:
 804cf02:	55                   	push   %ebp
 804cf03:	89 e5                	mov    %esp,%ebp
 804cf05:	53                   	push   %ebx
 804cf06:	83 ec 44             	sub    $0x44,%esp
 804cf09:	e8 96 c1 ff ff       	call   80490a4 <__x86.get_pc_thunk.cx>
 804cf0e:	81 c1 f2 20 00 00    	add    $0x20f2,%ecx
 804cf14:	8b 45 08             	mov    0x8(%ebp),%eax
 804cf17:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804cf1a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cf1d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804cf20:	8b 45 10             	mov    0x10(%ebp),%eax
 804cf23:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804cf26:	8b 45 14             	mov    0x14(%ebp),%eax
 804cf29:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804cf2c:	8d 45 f0             	lea    -0x10(%ebp),%eax
 804cf2f:	89 44 24 10          	mov    %eax,0x10(%esp)
 804cf33:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804cf36:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804cf39:	89 44 24 08          	mov    %eax,0x8(%esp)
 804cf3d:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804cf41:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804cf44:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804cf47:	89 04 24             	mov    %eax,(%esp)
 804cf4a:	89 54 24 04          	mov    %edx,0x4(%esp)
 804cf4e:	89 cb                	mov    %ecx,%ebx
 804cf50:	e8 f8 f7 ff ff       	call   804c74d <__qdivrem>
 804cf55:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804cf58:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804cf5b:	83 c4 44             	add    $0x44,%esp
 804cf5e:	5b                   	pop    %ebx
 804cf5f:	5d                   	pop    %ebp
 804cf60:	c3                   	ret    
